[
{
	"EventName": "branch-instructions",
	"EventAlias": "branches",
	"EventType": "Hardware event"
},
{
	"EventName": "branch-misses",
	"EventType": "Hardware event"
},
{
	"EventName": "bus-cycles",
	"EventType": "Hardware event"
},
{
	"EventName": "cache-misses",
	"EventType": "Hardware event"
},
{
	"EventName": "cache-references",
	"EventType": "Hardware event"
},
{
	"EventName": "cpu-cycles",
	"EventAlias": "cycles",
	"EventType": "Hardware event"
},
{
	"EventName": "instructions",
	"EventType": "Hardware event"
},
{
	"EventName": "ref-cycles",
	"EventType": "Hardware event"
},
{
	"EventName": "alignment-faults",
	"EventType": "Software event"
},
{
	"EventName": "bpf-output",
	"EventType": "Software event"
},
{
	"EventName": "cgroup-switches",
	"EventType": "Software event"
},
{
	"EventName": "context-switches",
	"EventAlias": "cs",
	"EventType": "Software event"
},
{
	"EventName": "cpu-clock",
	"EventType": "Software event"
},
{
	"EventName": "cpu-migrations",
	"EventAlias": "migrations",
	"EventType": "Software event"
},
{
	"EventName": "dummy",
	"EventType": "Software event"
},
{
	"EventName": "emulation-faults",
	"EventType": "Software event"
},
{
	"EventName": "major-faults",
	"EventType": "Software event"
},
{
	"EventName": "minor-faults",
	"EventType": "Software event"
},
{
	"EventName": "page-faults",
	"EventAlias": "faults",
	"EventType": "Software event"
},
{
	"EventName": "task-clock",
	"EventType": "Software event"
},
{
	"Unit": "tool",
	"EventName": "duration_time",
	"EventType": "Tool event"
},
{
	"Unit": "tool",
	"EventName": "user_time",
	"EventType": "Tool event"
},
{
	"Unit": "tool",
	"EventName": "system_time",
	"EventType": "Tool event"
},
{
	"Unit": "cache",
	"Topic": "cpu",
	"EventName": "L1-dcache-loads",
	"EventAlias": "cpu/L1-dcache-loads/",
	"EventType": "Hardware cache event"
},
{
	"Unit": "cache",
	"Topic": "cpu",
	"EventName": "L1-dcache-load-misses",
	"EventAlias": "cpu/L1-dcache-load-misses/",
	"EventType": "Hardware cache event"
},
{
	"Unit": "cache",
	"Topic": "cpu",
	"EventName": "L1-dcache-stores",
	"EventAlias": "cpu/L1-dcache-stores/",
	"EventType": "Hardware cache event"
},
{
	"Unit": "cache",
	"Topic": "cpu",
	"EventName": "L1-icache-load-misses",
	"EventAlias": "cpu/L1-icache-load-misses/",
	"EventType": "Hardware cache event"
},
{
	"Unit": "cache",
	"Topic": "cpu",
	"EventName": "LLC-loads",
	"EventAlias": "cpu/LLC-loads/",
	"EventType": "Hardware cache event"
},
{
	"Unit": "cache",
	"Topic": "cpu",
	"EventName": "LLC-load-misses",
	"EventAlias": "cpu/LLC-load-misses/",
	"EventType": "Hardware cache event"
},
{
	"Unit": "cache",
	"Topic": "cpu",
	"EventName": "LLC-stores",
	"EventAlias": "cpu/LLC-stores/",
	"EventType": "Hardware cache event"
},
{
	"Unit": "cache",
	"Topic": "cpu",
	"EventName": "LLC-store-misses",
	"EventAlias": "cpu/LLC-store-misses/",
	"EventType": "Hardware cache event"
},
{
	"Unit": "cache",
	"Topic": "cpu",
	"EventName": "dTLB-loads",
	"EventAlias": "cpu/dTLB-loads/",
	"EventType": "Hardware cache event"
},
{
	"Unit": "cache",
	"Topic": "cpu",
	"EventName": "dTLB-load-misses",
	"EventAlias": "cpu/dTLB-load-misses/",
	"EventType": "Hardware cache event"
},
{
	"Unit": "cache",
	"Topic": "cpu",
	"EventName": "dTLB-stores",
	"EventAlias": "cpu/dTLB-stores/",
	"EventType": "Hardware cache event"
},
{
	"Unit": "cache",
	"Topic": "cpu",
	"EventName": "dTLB-store-misses",
	"EventAlias": "cpu/dTLB-store-misses/",
	"EventType": "Hardware cache event"
},
{
	"Unit": "cache",
	"Topic": "cpu",
	"EventName": "iTLB-loads",
	"EventAlias": "cpu/iTLB-loads/",
	"EventType": "Hardware cache event"
},
{
	"Unit": "cache",
	"Topic": "cpu",
	"EventName": "iTLB-load-misses",
	"EventAlias": "cpu/iTLB-load-misses/",
	"EventType": "Hardware cache event"
},
{
	"Unit": "cache",
	"Topic": "cpu",
	"EventName": "branch-loads",
	"EventAlias": "cpu/branch-loads/",
	"EventType": "Hardware cache event"
},
{
	"Unit": "cache",
	"Topic": "cpu",
	"EventName": "branch-load-misses",
	"EventAlias": "cpu/branch-load-misses/",
	"EventType": "Hardware cache event"
},
{
	"Unit": "cache",
	"Topic": "cpu",
	"EventName": "node-loads",
	"EventAlias": "cpu/node-loads/",
	"EventType": "Hardware cache event"
},
{
	"Unit": "cache",
	"Topic": "cpu",
	"EventName": "node-load-misses",
	"EventAlias": "cpu/node-load-misses/",
	"EventType": "Hardware cache event"
},
{
	"Unit": "cache",
	"Topic": "cpu",
	"EventName": "node-stores",
	"EventAlias": "cpu/node-stores/",
	"EventType": "Hardware cache event"
},
{
	"Unit": "cache",
	"Topic": "cpu",
	"EventName": "node-store-misses",
	"EventAlias": "cpu/node-store-misses/",
	"EventType": "Hardware cache event"
},
{
	"Unit": "cpu",
	"EventName": "branch-instructions",
	"EventAlias": "cpu/branch-instructions/",
	"EventType": "Kernel PMU event",
	"Encoding": "cpu/event=0xc4/"
},
{
	"Unit": "cpu",
	"EventName": "branch-misses",
	"EventAlias": "cpu/branch-misses/",
	"EventType": "Kernel PMU event",
	"Encoding": "cpu/event=0xc5/"
},
{
	"Unit": "cpu",
	"EventName": "bus-cycles",
	"EventAlias": "cpu/bus-cycles/",
	"EventType": "Kernel PMU event",
	"Encoding": "cpu/event=0x3c,umask=0x1/"
},
{
	"Unit": "cpu",
	"EventName": "cache-misses",
	"EventAlias": "cpu/cache-misses/",
	"EventType": "Kernel PMU event",
	"Encoding": "cpu/event=0x2e,umask=0x41/"
},
{
	"Unit": "cpu",
	"EventName": "cache-references",
	"EventAlias": "cpu/cache-references/",
	"EventType": "Kernel PMU event",
	"Encoding": "cpu/event=0x2e,umask=0x4f/"
},
{
	"Unit": "cpu",
	"EventName": "cpu-cycles",
	"EventAlias": "cpu/cpu-cycles/",
	"EventType": "Kernel PMU event",
	"Encoding": "cpu/event=0x3c/"
},
{
	"Unit": "cpu",
	"EventName": "instructions",
	"EventAlias": "cpu/instructions/",
	"EventType": "Kernel PMU event",
	"Encoding": "cpu/event=0xc0/"
},
{
	"Unit": "cpu",
	"EventName": "mem-loads",
	"EventAlias": "cpu/mem-loads/",
	"EventType": "Kernel PMU event",
	"Encoding": "cpu/event=0xcd,umask=0x1,ldlat=0x3/"
},
{
	"Unit": "cpu",
	"EventName": "mem-stores",
	"EventAlias": "cpu/mem-stores/",
	"EventType": "Kernel PMU event",
	"Encoding": "cpu/event=0xd0,umask=0x82/"
},
{
	"Unit": "cpu",
	"EventName": "ref-cycles",
	"EventAlias": "cpu/ref-cycles/",
	"EventType": "Kernel PMU event",
	"Encoding": "cpu/event=0,umask=0x3/"
},
{
	"Unit": "cpu",
	"EventName": "topdown-fetch-bubbles",
	"EventAlias": "cpu/topdown-fetch-bubbles/",
	"EventType": "Kernel PMU event",
	"Encoding": "cpu/event=0x9c,umask=0x1/"
},
{
	"Unit": "cpu",
	"EventName": "topdown-recovery-bubbles",
	"EventAlias": "cpu/topdown-recovery-bubbles/",
	"ScaleUnit": "2",
	"EventType": "Kernel PMU event",
	"Encoding": "cpu/event=0xd,umask=0x1,cmask=0x1,any=0x1/"
},
{
	"Unit": "cpu",
	"EventName": "topdown-slots-issued",
	"EventAlias": "cpu/topdown-slots-issued/",
	"EventType": "Kernel PMU event",
	"Encoding": "cpu/event=0xe,umask=0x1/"
},
{
	"Unit": "cpu",
	"EventName": "topdown-slots-retired",
	"EventAlias": "cpu/topdown-slots-retired/",
	"EventType": "Kernel PMU event",
	"Encoding": "cpu/event=0xc2,umask=0x2/"
},
{
	"Unit": "cpu",
	"EventName": "topdown-total-slots",
	"EventAlias": "cpu/topdown-total-slots/",
	"ScaleUnit": "2",
	"EventType": "Kernel PMU event",
	"Encoding": "cpu/event=0x3c,umask=0,any=0x1/"
},
{
	"Unit": "cstate_core",
	"EventName": "cstate_core/c3-residency/",
	"EventType": "Kernel PMU event",
	"Encoding": "cstate_core/event=0x1/"
},
{
	"Unit": "cstate_core",
	"EventName": "cstate_core/c6-residency/",
	"EventType": "Kernel PMU event",
	"Encoding": "cstate_core/event=0x2/"
},
{
	"Unit": "cstate_core",
	"EventName": "cstate_core/c7-residency/",
	"EventType": "Kernel PMU event",
	"Encoding": "cstate_core/event=0x3/"
},
{
	"Unit": "cstate_pkg",
	"EventName": "cstate_pkg/c10-residency/",
	"EventType": "Kernel PMU event",
	"Encoding": "cstate_pkg/event=0x6/"
},
{
	"Unit": "cstate_pkg",
	"EventName": "cstate_pkg/c2-residency/",
	"EventType": "Kernel PMU event",
	"Encoding": "cstate_pkg/event=0/"
},
{
	"Unit": "cstate_pkg",
	"EventName": "cstate_pkg/c3-residency/",
	"EventType": "Kernel PMU event",
	"Encoding": "cstate_pkg/event=0x1/"
},
{
	"Unit": "cstate_pkg",
	"EventName": "cstate_pkg/c6-residency/",
	"EventType": "Kernel PMU event",
	"Encoding": "cstate_pkg/event=0x2/"
},
{
	"Unit": "cstate_pkg",
	"EventName": "cstate_pkg/c7-residency/",
	"EventType": "Kernel PMU event",
	"Encoding": "cstate_pkg/event=0x3/"
},
{
	"Unit": "cstate_pkg",
	"EventName": "cstate_pkg/c8-residency/",
	"EventType": "Kernel PMU event",
	"Encoding": "cstate_pkg/event=0x4/"
},
{
	"Unit": "cstate_pkg",
	"EventName": "cstate_pkg/c9-residency/",
	"EventType": "Kernel PMU event",
	"Encoding": "cstate_pkg/event=0x5/"
},
{
	"Unit": "i915",
	"EventName": "i915/actual-frequency/",
	"ScaleUnit": "1M",
	"EventType": "Kernel PMU event",
	"Encoding": "i915/config=0x100000/"
},
{
	"Unit": "i915",
	"EventName": "i915/bcs0-busy/",
	"ScaleUnit": "1ns",
	"EventType": "Kernel PMU event",
	"Encoding": "i915/config=0x1000/"
},
{
	"Unit": "i915",
	"EventName": "i915/bcs0-sema/",
	"ScaleUnit": "1ns",
	"EventType": "Kernel PMU event",
	"Encoding": "i915/config=0x1002/"
},
{
	"Unit": "i915",
	"EventName": "i915/bcs0-wait/",
	"ScaleUnit": "1ns",
	"EventType": "Kernel PMU event",
	"Encoding": "i915/config=0x1001/"
},
{
	"Unit": "i915",
	"EventName": "i915/interrupts/",
	"EventType": "Kernel PMU event",
	"Encoding": "i915/config=0x100002/"
},
{
	"Unit": "i915",
	"EventName": "i915/rc6-residency/",
	"ScaleUnit": "1ns",
	"EventType": "Kernel PMU event",
	"Encoding": "i915/config=0x100003/"
},
{
	"Unit": "i915",
	"EventName": "i915/rcs0-busy/",
	"ScaleUnit": "1ns",
	"EventType": "Kernel PMU event",
	"Encoding": "i915/config=0/"
},
{
	"Unit": "i915",
	"EventName": "i915/rcs0-sema/",
	"ScaleUnit": "1ns",
	"EventType": "Kernel PMU event",
	"Encoding": "i915/config=0x2/"
},
{
	"Unit": "i915",
	"EventName": "i915/rcs0-wait/",
	"ScaleUnit": "1ns",
	"EventType": "Kernel PMU event",
	"Encoding": "i915/config=0x1/"
},
{
	"Unit": "i915",
	"EventName": "i915/requested-frequency/",
	"ScaleUnit": "1M",
	"EventType": "Kernel PMU event",
	"Encoding": "i915/config=0x100001/"
},
{
	"Unit": "i915",
	"EventName": "i915/software-gt-awake-time/",
	"ScaleUnit": "1ns",
	"EventType": "Kernel PMU event",
	"Encoding": "i915/config=0x100004/"
},
{
	"Unit": "i915",
	"EventName": "i915/vcs0-busy/",
	"ScaleUnit": "1ns",
	"EventType": "Kernel PMU event",
	"Encoding": "i915/config=0x2000/"
},
{
	"Unit": "i915",
	"EventName": "i915/vcs0-sema/",
	"ScaleUnit": "1ns",
	"EventType": "Kernel PMU event",
	"Encoding": "i915/config=0x2002/"
},
{
	"Unit": "i915",
	"EventName": "i915/vcs0-wait/",
	"ScaleUnit": "1ns",
	"EventType": "Kernel PMU event",
	"Encoding": "i915/config=0x2001/"
},
{
	"Unit": "i915",
	"EventName": "i915/vecs0-busy/",
	"ScaleUnit": "1ns",
	"EventType": "Kernel PMU event",
	"Encoding": "i915/config=0x3000/"
},
{
	"Unit": "i915",
	"EventName": "i915/vecs0-sema/",
	"ScaleUnit": "1ns",
	"EventType": "Kernel PMU event",
	"Encoding": "i915/config=0x3002/"
},
{
	"Unit": "i915",
	"EventName": "i915/vecs0-wait/",
	"ScaleUnit": "1ns",
	"EventType": "Kernel PMU event",
	"Encoding": "i915/config=0x3001/"
},
{
	"Unit": "intel_pt",
	"EventName": "intel_pt//",
	"EventType": "Kernel PMU event"
},
{
	"Unit": "msr",
	"EventName": "msr/aperf/",
	"EventType": "Kernel PMU event",
	"Encoding": "msr/event=0x1/"
},
{
	"Unit": "msr",
	"EventName": "msr/cpu_thermal_margin/",
	"ScaleUnit": "1C",
	"EventType": "Kernel PMU event",
	"Encoding": "msr/event=0x7/"
},
{
	"Unit": "msr",
	"EventName": "msr/mperf/",
	"EventType": "Kernel PMU event",
	"Encoding": "msr/event=0x2/"
},
{
	"Unit": "msr",
	"EventName": "msr/pperf/",
	"EventType": "Kernel PMU event",
	"Encoding": "msr/event=0x3/"
},
{
	"Unit": "msr",
	"EventName": "msr/smi/",
	"EventType": "Kernel PMU event",
	"Encoding": "msr/event=0x4/"
},
{
	"Unit": "msr",
	"EventName": "msr/tsc/",
	"EventType": "Kernel PMU event",
	"Encoding": "msr/event=0/"
},
{
	"Unit": "power",
	"EventName": "power/energy-cores/",
	"ScaleUnit": "2.32831E-10Joules",
	"EventType": "Kernel PMU event",
	"Encoding": "power/event=0x1/"
},
{
	"Unit": "power",
	"EventName": "power/energy-gpu/",
	"ScaleUnit": "2.32831E-10Joules",
	"EventType": "Kernel PMU event",
	"Encoding": "power/event=0x4/"
},
{
	"Unit": "power",
	"EventName": "power/energy-pkg/",
	"ScaleUnit": "2.32831E-10Joules",
	"EventType": "Kernel PMU event",
	"Encoding": "power/event=0x2/"
},
{
	"Unit": "power",
	"EventName": "power/energy-ram/",
	"ScaleUnit": "2.32831E-10Joules",
	"EventType": "Kernel PMU event",
	"Encoding": "power/event=0x3/"
},
{
	"Unit": "uncore_cbox_0",
	"EventName": "uncore_cbox_0/clockticks/",
	"EventType": "Kernel PMU event",
	"Encoding": "uncore_cbox_0/event=0xff,umask=0/"
},
{
	"Unit": "uncore_cbox_1",
	"EventName": "uncore_cbox_1/clockticks/",
	"EventType": "Kernel PMU event",
	"Encoding": "uncore_cbox_1/event=0xff,umask=0/"
},
{
	"Unit": "uncore_cbox_2",
	"EventName": "uncore_cbox_2/clockticks/",
	"EventType": "Kernel PMU event",
	"Encoding": "uncore_cbox_2/event=0xff,umask=0/"
},
{
	"Unit": "uncore_cbox_3",
	"EventName": "uncore_cbox_3/clockticks/",
	"EventType": "Kernel PMU event",
	"Encoding": "uncore_cbox_3/event=0xff,umask=0/"
},
{
	"Unit": "uncore_imc",
	"EventName": "uncore_imc/data_reads/",
	"ScaleUnit": "6.10352E-05MiB",
	"EventType": "Kernel PMU event",
	"Encoding": "uncore_imc/event=0x1/"
},
{
	"Unit": "uncore_imc",
	"EventName": "uncore_imc/data_writes/",
	"ScaleUnit": "6.10352E-05MiB",
	"EventType": "Kernel PMU event",
	"Encoding": "uncore_imc/event=0x2/"
},
{
	"Unit": "uncore_imc",
	"EventName": "uncore_imc/gt_requests/",
	"ScaleUnit": "6.10352E-05MiB",
	"EventType": "Kernel PMU event",
	"Encoding": "uncore_imc/event=0x3/"
},
{
	"Unit": "uncore_imc",
	"EventName": "uncore_imc/ia_requests/",
	"ScaleUnit": "6.10352E-05MiB",
	"EventType": "Kernel PMU event",
	"Encoding": "uncore_imc/event=0x4/"
},
{
	"Unit": "uncore_imc",
	"EventName": "uncore_imc/io_requests/",
	"ScaleUnit": "6.10352E-05MiB",
	"EventType": "Kernel PMU event",
	"Encoding": "uncore_imc/event=0x5/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l1d.replacement",
	"EventType": "Kernel PMU event",
	"BriefDescription": "L1D data line replacements",
	"PublicDescription": "Counts L1D data line replacements including opportunistic replacements, and replacements that require stall-for-replace or block-for-replace",
	"Encoding": "cpu/event=0x51,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l1d_pend_miss.fb_full",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times a request needed a FB entry but there was no entry available for it. That is the FB unavailability was dominant reason for blocking the request. A request includes cacheable/uncacheable demands that is load, store or SW prefetch",
	"PublicDescription": "Number of times a request needed a FB (Fill Buffer) entry but there was no entry available for it. A request includes cacheable/uncacheable demands that are load, store or SW prefetch instructions",
	"Encoding": "cpu/event=0x48,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l1d_pend_miss.pending",
	"EventType": "Kernel PMU event",
	"BriefDescription": "L1D miss outstandings duration in cycles",
	"PublicDescription": "Counts duration of L1D miss outstanding, that is each cycle number of Fill Buffers (FB) outstanding required by Demand Reads. FB either is held by demand loads, or it is held by non-demand loads and gets hit at least once by demand. The valid outstanding interval is defined until the FB deallocation by one of the following ways: from FB allocation, if FB is allocated by demand from the demand Hit FB, if it is allocated by hardware or software prefetch.Note: In the L1D, a Demand Read contains cacheable or noncacheable demand loads, including ones causing cache-line splits and reads due to page walks resulted from any request type",
	"Encoding": "cpu/event=0x48,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l1d_pend_miss.pending_cycles",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles with L1D load Misses outstanding",
	"PublicDescription": "Counts duration of L1D miss outstanding in cycles",
	"Encoding": "cpu/event=0x48,cmask=0x1,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l1d_pend_miss.pending_cycles_any",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles with L1D load Misses outstanding from any thread on physical core",
	"PublicDescription": "Cycles with L1D load Misses outstanding from any thread on physical core",
	"Encoding": "cpu/event=0x48,any=0x1,cmask=0x1,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l2_lines_in.all",
	"EventType": "Kernel PMU event",
	"BriefDescription": "L2 cache lines filling L2",
	"PublicDescription": "Counts the number of L2 cache lines filling the L2. Counting does not cover rejects",
	"Encoding": "cpu/event=0xf1,period=0x186a3,umask=0x1f/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l2_lines_out.non_silent",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts the number of lines that are evicted by L2 cache when triggered by an L2 cache fill. Those lines are in Modified state. Modified lines are written back to L3",
	"PublicDescription": "Counts the number of lines that are evicted by L2 cache when triggered by an L2 cache fill. Those lines are in Modified state. Modified lines are written back to L3",
	"Encoding": "cpu/event=0xf2,period=0x30d43,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l2_lines_out.silent",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts the number of lines that are silently dropped by L2 cache when triggered by an L2 cache fill. These lines are typically in Shared or Exclusive state. A non-threaded event",
	"PublicDescription": "Counts the number of lines that are silently dropped by L2 cache when triggered by an L2 cache fill. These lines are typically in Shared or Exclusive state. A non-threaded event",
	"Encoding": "cpu/event=0xf2,period=0x30d43,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l2_lines_out.useless_hwpf",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts the number of lines that have been hardware prefetched but not used and now evicted by L2 cache",
	"PublicDescription": "Counts the number of lines that have been hardware prefetched but not used and now evicted by L2 cache",
	"Encoding": "cpu/event=0xf2,period=0x30d43,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l2_lines_out.useless_pref",
	"EventType": "Kernel PMU event",
	"Deprecated": "1",
	"BriefDescription": "This event is deprecated. Refer to new event L2_LINES_OUT.USELESS_HWPF",
	"PublicDescription": "This event is deprecated. Refer to new event L2_LINES_OUT.USELESS_HWPF",
	"Encoding": "cpu/event=0xf2,period=0x30d43,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l2_rqsts.all_code_rd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "L2 code requests",
	"PublicDescription": "Counts the total number of L2 code requests",
	"Encoding": "cpu/event=0x24,period=0x30d43,umask=0xe4/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l2_rqsts.all_demand_data_rd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Demand Data Read requests",
	"PublicDescription": "Counts the number of demand Data Read requests (including requests from L1D hardware prefetchers). These loads may hit or miss L2 cache. Only non rejected loads are counted",
	"Encoding": "cpu/event=0x24,period=0x30d43,umask=0xe1/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l2_rqsts.all_demand_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Demand requests that miss L2 cache",
	"PublicDescription": "Demand requests that miss L2 cache",
	"Encoding": "cpu/event=0x24,period=0x30d43,umask=0x27/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l2_rqsts.all_demand_references",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Demand requests to L2 cache",
	"PublicDescription": "Demand requests to L2 cache",
	"Encoding": "cpu/event=0x24,period=0x30d43,umask=0xe7/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l2_rqsts.all_pf",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Requests from the L1/L2/L3 hardware prefetchers or Load software prefetches",
	"PublicDescription": "Counts the total number of requests from the L2 hardware prefetchers",
	"Encoding": "cpu/event=0x24,period=0x30d43,umask=0xf8/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l2_rqsts.all_rfo",
	"EventType": "Kernel PMU event",
	"BriefDescription": "RFO requests to L2 cache",
	"PublicDescription": "Counts the total number of RFO (read for ownership) requests to L2 cache. L2 RFO requests include both L1D demand RFO misses as well as L1D RFO prefetches",
	"Encoding": "cpu/event=0x24,period=0x30d43,umask=0xe2/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l2_rqsts.code_rd_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "L2 cache hits when fetching instructions, code reads",
	"PublicDescription": "Counts L2 cache hits when fetching instructions, code reads",
	"Encoding": "cpu/event=0x24,period=0x30d43,umask=0xc4/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l2_rqsts.code_rd_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "L2 cache misses when fetching instructions",
	"PublicDescription": "Counts L2 cache misses when fetching instructions",
	"Encoding": "cpu/event=0x24,period=0x30d43,umask=0x24/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l2_rqsts.demand_data_rd_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Demand Data Read requests that hit L2 cache",
	"PublicDescription": "Counts the number of demand Data Read requests, initiated by load instructions, that hit L2 cache",
	"Encoding": "cpu/event=0x24,period=0x30d43,umask=0xc1/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l2_rqsts.demand_data_rd_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Demand Data Read miss L2, no rejects",
	"PublicDescription": "Counts the number of demand Data Read requests that miss L2 cache. Only not rejected loads are counted",
	"Encoding": "cpu/event=0x24,period=0x30d43,umask=0x21/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l2_rqsts.miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "All requests that miss L2 cache",
	"PublicDescription": "All requests that miss L2 cache",
	"Encoding": "cpu/event=0x24,period=0x30d43,umask=0x3f/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l2_rqsts.pf_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Requests from the L1/L2/L3 hardware prefetchers or Load software prefetches that hit L2 cache",
	"PublicDescription": "Counts requests from the L1/L2/L3 hardware prefetchers or Load software prefetches that hit L2 cache",
	"Encoding": "cpu/event=0x24,period=0x30d43,umask=0xd8/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l2_rqsts.pf_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Requests from the L1/L2/L3 hardware prefetchers or Load software prefetches that miss L2 cache",
	"PublicDescription": "Counts requests from the L1/L2/L3 hardware prefetchers or Load software prefetches that miss L2 cache",
	"Encoding": "cpu/event=0x24,period=0x30d43,umask=0x38/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l2_rqsts.references",
	"EventType": "Kernel PMU event",
	"BriefDescription": "All L2 requests",
	"PublicDescription": "All L2 requests",
	"Encoding": "cpu/event=0x24,period=0x30d43,umask=0xff/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l2_rqsts.rfo_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "RFO requests that hit L2 cache",
	"PublicDescription": "Counts the RFO (Read-for-Ownership) requests that hit L2 cache",
	"Encoding": "cpu/event=0x24,period=0x30d43,umask=0xc2/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l2_rqsts.rfo_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "RFO requests that miss L2 cache",
	"PublicDescription": "Counts the RFO (Read-for-Ownership) requests that miss L2 cache",
	"Encoding": "cpu/event=0x24,period=0x30d43,umask=0x22/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "l2_trans.l2_wb",
	"EventType": "Kernel PMU event",
	"BriefDescription": "L2 writebacks that access L2 cache",
	"PublicDescription": "Counts L2 writebacks that access L2 cache",
	"Encoding": "cpu/event=0xf0,period=0x30d43,umask=0x40/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "longest_lat_cache.miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Core-originated cacheable demand requests missed L3  Spec update: SKL057",
	"PublicDescription": "Counts core-originated cacheable requests that miss the L3 cache (Longest Latency cache). Requests include data and code reads, Reads-for-Ownership (RFOs), speculative accesses and hardware prefetches from L1 and L2. It does not include all misses to the L3  Spec update: SKL057",
	"Encoding": "cpu/event=0x2e,period=0x186a3,umask=0x41/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "longest_lat_cache.reference",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Core-originated cacheable demand requests that refer to L3  Spec update: SKL057",
	"PublicDescription": "Counts core-originated cacheable requests to the  L3 cache (Longest Latency cache). Requests include data and code reads, Reads-for-Ownership (RFOs), speculative accesses and hardware prefetches from L1 and L2.  It does not include all accesses to the L3  Spec update: SKL057",
	"Encoding": "cpu/event=0x2e,period=0x186a3,umask=0x4f/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "mem_inst_retired.all_loads",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired load instructions  Supports address when precise (Precise event)",
	"PublicDescription": "Counts all retired load instructions. This event accounts for SW prefetch instructions of PREFETCHNTA or PREFETCHT0/1/2 or PREFETCHW  Supports address when precise (Precise event)",
	"Encoding": "cpu/event=0xd0,period=0x1e8483,umask=0x81/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "mem_inst_retired.all_stores",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired store instructions  Supports address when precise (Precise event)",
	"PublicDescription": "Counts all retired store instructions  Supports address when precise (Precise event)",
	"Encoding": "cpu/event=0xd0,period=0x1e8483,umask=0x82/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "mem_inst_retired.any",
	"EventType": "Kernel PMU event",
	"BriefDescription": "All retired memory instructions  Supports address when precise (Precise event)",
	"PublicDescription": "Counts all retired memory instructions - loads and stores  Supports address when precise (Precise event)",
	"Encoding": "cpu/event=0xd0,period=0x1e8483,umask=0x83/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "mem_inst_retired.lock_loads",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired load instructions with locked access  Supports address when precise (Precise event)",
	"PublicDescription": "Retired load instructions with locked access  Supports address when precise (Precise event)",
	"Encoding": "cpu/event=0xd0,period=0x186a7,umask=0x21/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "mem_inst_retired.split_loads",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired load instructions that split across a cacheline boundary  Supports address when precise (Precise event)",
	"PublicDescription": "Counts retired load instructions that split across a cacheline boundary  Supports address when precise (Precise event)",
	"Encoding": "cpu/event=0xd0,period=0x186a3,umask=0x41/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "mem_inst_retired.split_stores",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired store instructions that split across a cacheline boundary  Supports address when precise (Precise event)",
	"PublicDescription": "Counts retired store instructions that split across a cacheline boundary  Supports address when precise (Precise event)",
	"Encoding": "cpu/event=0xd0,period=0x186a3,umask=0x42/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "mem_inst_retired.stlb_miss_loads",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired load instructions that miss the STLB  Supports address when precise (Precise event)",
	"PublicDescription": "Number of retired load instructions that (start a) miss in the 2nd-level TLB (STLB)  Supports address when precise (Precise event)",
	"Encoding": "cpu/event=0xd0,period=0x186a3,umask=0x11/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "mem_inst_retired.stlb_miss_stores",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired store instructions that miss the STLB  Supports address when precise (Precise event)",
	"PublicDescription": "Number of retired store instructions that (start a) miss in the 2nd-level TLB (STLB)  Supports address when precise (Precise event)",
	"Encoding": "cpu/event=0xd0,period=0x186a3,umask=0x12/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "mem_load_l3_hit_retired.xsnp_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired load instructions which data sources were L3 and cross-core snoop hits in on-pkg core cache  Supports address when precise (Precise event)",
	"PublicDescription": "Retired load instructions which data sources were L3 and cross-core snoop hits in on-pkg core cache  Supports address when precise (Precise event)",
	"Encoding": "cpu/event=0xd2,period=0x4e2b,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "mem_load_l3_hit_retired.xsnp_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired load instructions which data sources were HitM responses from shared L3  Supports address when precise (Precise event)",
	"PublicDescription": "Retired load instructions which data sources were HitM responses from shared L3  Supports address when precise (Precise event)",
	"Encoding": "cpu/event=0xd2,period=0x4e2b,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "mem_load_l3_hit_retired.xsnp_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired load instructions which data sources were L3 hit and cross-core snoop missed in on-pkg core cache  Supports address when precise (Precise event)",
	"PublicDescription": "Retired load instructions which data sources were L3 hit and cross-core snoop missed in on-pkg core cache  Supports address when precise (Precise event)",
	"Encoding": "cpu/event=0xd2,period=0x4e2b,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "mem_load_l3_hit_retired.xsnp_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired load instructions which data sources were hits in L3 without snoops required  Supports address when precise (Precise event)",
	"PublicDescription": "Retired load instructions which data sources were hits in L3 without snoops required  Supports address when precise (Precise event)",
	"Encoding": "cpu/event=0xd2,period=0x186a3,umask=0x8/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "mem_load_misc_retired.uc",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired instructions with at least 1 uncacheable load or lock  Supports address when precise (Precise event)",
	"PublicDescription": "Retired instructions with at least 1 uncacheable load or lock  Supports address when precise (Precise event)",
	"Encoding": "cpu/event=0xd4,period=0x186a7,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "mem_load_retired.fb_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired load instructions which data sources were load missed L1 but hit FB due to preceding miss to the same cache line with data not ready  Supports address when precise (Precise event)",
	"PublicDescription": "Counts retired load instructions with at least one uop was load missed in L1 but hit FB (Fill Buffers) due to preceding miss to the same cache line with data not ready  Supports address when precise (Precise event)",
	"Encoding": "cpu/event=0xd1,period=0x186a7,umask=0x40/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "mem_load_retired.l1_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired load instructions with L1 cache hits as data sources  Supports address when precise (Precise event)",
	"PublicDescription": "Counts retired load instructions with at least one uop that hit in the L1 data cache. This event includes all SW prefetches and lock instructions regardless of the data source  Supports address when precise (Precise event)",
	"Encoding": "cpu/event=0xd1,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "mem_load_retired.l1_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired load instructions missed L1 cache as data sources  Supports address when precise (Precise event)",
	"PublicDescription": "Counts retired load instructions with at least one uop that missed in the L1 cache  Supports address when precise (Precise event)",
	"Encoding": "cpu/event=0xd1,period=0x186a3,umask=0x8/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "mem_load_retired.l2_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired load instructions with L2 cache hits as data sources  Supports address when precise (Precise event)",
	"PublicDescription": "Retired load instructions with L2 cache hits as data sources  Supports address when precise (Precise event)",
	"Encoding": "cpu/event=0xd1,period=0x186a3,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "mem_load_retired.l2_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired load instructions missed L2 cache as data sources  Supports address when precise (Precise event)",
	"PublicDescription": "Retired load instructions missed L2 cache as data sources  Supports address when precise (Precise event)",
	"Encoding": "cpu/event=0xd1,period=0xc365,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "mem_load_retired.l3_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired load instructions with L3 cache hits as data sources  Supports address when precise (Precise event)",
	"PublicDescription": "Counts retired load instructions with at least one uop that hit in the L3 cache  Supports address when precise (Precise event)",
	"Encoding": "cpu/event=0xd1,period=0xc365,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "mem_load_retired.l3_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired load instructions missed L3 cache as data sources  Supports address when precise (Precise event)",
	"PublicDescription": "Counts retired load instructions with at least one uop that missed in the L3 cache  Supports address when precise (Precise event)",
	"Encoding": "cpu/event=0xd1,period=0x186a7,umask=0x20/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_requests.all_data_rd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Demand and prefetch data reads",
	"PublicDescription": "Counts the demand and prefetch data reads. All Core Data Reads include cacheable 'Demands' and L2 prefetchers (not L3 prefetchers). Counting also covers reads due to page walks resulted from any request type",
	"Encoding": "cpu/event=0xb0,period=0x186a3,umask=0x8/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_requests.all_requests",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Any memory transaction that reached the SQ",
	"PublicDescription": "Counts memory transactions reached the super queue including requests initiated by the core, all L3 prefetches, page walks, etc.",
	"Encoding": "cpu/event=0xb0,period=0x186a3,umask=0x80/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_requests.demand_code_rd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cacheable and non-cacheable code read requests",
	"PublicDescription": "Counts both cacheable and non-cacheable code read requests",
	"Encoding": "cpu/event=0xb0,period=0x186a3,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_requests.demand_data_rd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Demand Data Read requests sent to uncore",
	"PublicDescription": "Counts the Demand Data Read requests sent to uncore. Use it in conjunction with OFFCORE_REQUESTS_OUTSTANDING to determine average latency in the uncore",
	"Encoding": "cpu/event=0xb0,period=0x186a3,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_requests.demand_rfo",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Demand RFO requests including regular RFOs, locks, ItoM",
	"PublicDescription": "Counts the demand RFO (read for ownership) requests including regular RFOs, locks, ItoM",
	"Encoding": "cpu/event=0xb0,period=0x186a3,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_requests_buffer.sq_full",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Offcore requests buffer cannot take more entries for this thread core",
	"PublicDescription": "Counts the number of cases when the offcore requests buffer cannot take more entries for the core. This can happen when the superqueue does not contain eligible entries, or when L1D writeback pending FIFO requests is full.Note: Writeback pending FIFO has six entries",
	"Encoding": "cpu/event=0xb2,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_requests_outstanding.all_data_rd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Offcore outstanding cacheable Core Data Read transactions in SuperQueue (SQ), queue to uncore",
	"PublicDescription": "Counts the number of offcore outstanding cacheable Core Data Read transactions in the super queue every cycle. A transaction is considered to be in the Offcore outstanding state between L2 miss and transaction completion sent to requestor (SQ de-allocation). See corresponding Umask under OFFCORE_REQUESTS",
	"Encoding": "cpu/event=0x60,period=0x1e8483,umask=0x8/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_requests_outstanding.cycles_with_data_rd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles when offcore outstanding cacheable Core Data Read transactions are present in SuperQueue (SQ), queue to uncore",
	"PublicDescription": "Counts cycles when offcore outstanding cacheable Core Data Read transactions are present in the super queue. A transaction is considered to be in the Offcore outstanding state between L2 miss and transaction completion sent to requestor (SQ de-allocation). See corresponding Umask under OFFCORE_REQUESTS",
	"Encoding": "cpu/event=0x60,cmask=0x1,period=0x1e8483,umask=0x8/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_requests_outstanding.cycles_with_demand_code_rd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles with offcore outstanding Code Reads transactions in the SuperQueue (SQ), queue to uncore",
	"PublicDescription": "Counts the number of offcore outstanding Code Reads transactions in the super queue every cycle. The 'Offcore outstanding' state of the transaction lasts from the L2 miss until the sending transaction completion to requestor (SQ deallocation). See the corresponding Umask under OFFCORE_REQUESTS",
	"Encoding": "cpu/event=0x60,cmask=0x1,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_requests_outstanding.cycles_with_demand_data_rd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles when offcore outstanding Demand Data Read transactions are present in SuperQueue (SQ), queue to uncore",
	"PublicDescription": "Counts cycles when offcore outstanding Demand Data Read transactions are present in the super queue (SQ). A transaction is considered to be in the Offcore outstanding state between L2 miss and transaction completion sent to requestor (SQ de-allocation)",
	"Encoding": "cpu/event=0x60,cmask=0x1,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_requests_outstanding.cycles_with_demand_rfo",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles with offcore outstanding demand rfo reads transactions in SuperQueue (SQ), queue to uncore",
	"PublicDescription": "Counts the number of offcore outstanding demand rfo Reads transactions in the super queue every cycle. The 'Offcore outstanding' state of the transaction lasts from the L2 miss until the sending transaction completion to requestor (SQ deallocation). See the corresponding Umask under OFFCORE_REQUESTS",
	"Encoding": "cpu/event=0x60,cmask=0x1,period=0x1e8483,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_requests_outstanding.demand_code_rd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Offcore outstanding Code Reads transactions in the SuperQueue (SQ), queue to uncore, every cycle",
	"PublicDescription": "Counts the number of offcore outstanding Code Reads transactions in the super queue every cycle. The 'Offcore outstanding' state of the transaction lasts from the L2 miss until the sending transaction completion to requestor (SQ deallocation). See the corresponding Umask under OFFCORE_REQUESTS",
	"Encoding": "cpu/event=0x60,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_requests_outstanding.demand_data_rd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Offcore outstanding Demand Data Read transactions in uncore queue",
	"PublicDescription": "Counts the number of offcore outstanding Demand Data Read transactions in the super queue (SQ) every cycle. A transaction is considered to be in the Offcore outstanding state between L2 miss and transaction completion sent to requestor. See the corresponding Umask under OFFCORE_REQUESTS.Note: A prefetch promoted to Demand is counted from the promotion point",
	"Encoding": "cpu/event=0x60,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_requests_outstanding.demand_data_rd_ge_6",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles with at least 6 offcore outstanding Demand Data Read transactions in uncore queue",
	"PublicDescription": "Cycles with at least 6 offcore outstanding Demand Data Read transactions in uncore queue",
	"Encoding": "cpu/event=0x60,cmask=0x6,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_requests_outstanding.demand_rfo",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Offcore outstanding demand rfo reads transactions in SuperQueue (SQ), queue to uncore, every cycle",
	"PublicDescription": "Counts the number of offcore outstanding RFO (store) transactions in the super queue (SQ) every cycle. A transaction is considered to be in the Offcore outstanding state between L2 miss and transaction completion sent to requestor (SQ de-allocation). See corresponding Umask under OFFCORE_REQUESTS",
	"Encoding": "cpu/event=0x60,period=0x1e8483,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Offcore response can be programmed only with a specific pair of event select and counter MSR, and with specific event codes and predefine mask bit value in a dedicated MSR to specify attributes of the offcore transaction",
	"PublicDescription": "Offcore response can be programmed only with a specific pair of event select and counter MSR, and with specific event codes and predefine mask bit value in a dedicated MSR to specify attributes of the offcore transaction",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.any_response",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads have any response type",
	"PublicDescription": "Counts all demand code reads have any response type",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x10004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc01c0004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x1c0004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x1c0004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x1c0004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x801c0004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x1c0004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x401c0004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit_e.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc0080004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit_e.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit_e.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit_e.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit_e.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80080004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit_e.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit_e.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40080004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit_m.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc0040004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit_m.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit_m.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit_m.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit_m.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80040004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit_m.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit_m.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40040004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit_s.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc0100004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit_s.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x100004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit_s.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x100004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit_s.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x100004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit_s.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80100004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit_s.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x100004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l3_hit_s.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40100004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l4_hit_local_l4.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc0400004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l4_hit_local_l4.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x400004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l4_hit_local_l4.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x400004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l4_hit_local_l4.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x400004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l4_hit_local_l4.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80400004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l4_hit_local_l4.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x400004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.l4_hit_local_l4.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40400004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.supplier_none.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc0020004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.supplier_none.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x20004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.supplier_none.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x20004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.supplier_none.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x20004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.supplier_none.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80020004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.supplier_none.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x20004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_code_rd.supplier_none.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40020004/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.any_response",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads have any response type",
	"PublicDescription": "Counts demand data reads have any response type",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x10001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc01c0001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x1c0001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x1c0001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x1c0001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x801c0001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x1c0001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x401c0001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit_e.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc0080001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit_e.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit_e.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit_e.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit_e.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80080001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit_e.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit_e.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40080001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit_m.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc0040001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit_m.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit_m.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit_m.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit_m.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80040001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit_m.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit_m.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40040001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit_s.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc0100001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit_s.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x100001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit_s.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x100001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit_s.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x100001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit_s.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80100001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit_s.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x100001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l3_hit_s.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40100001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l4_hit_local_l4.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc0400001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l4_hit_local_l4.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x400001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l4_hit_local_l4.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x400001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l4_hit_local_l4.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x400001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l4_hit_local_l4.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80400001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l4_hit_local_l4.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x400001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.l4_hit_local_l4.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40400001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.supplier_none.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc0020001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.supplier_none.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x20001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.supplier_none.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x20001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.supplier_none.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x20001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.supplier_none.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80020001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.supplier_none.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x20001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_data_rd.supplier_none.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40020001/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.any_response",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs) have any response type",
	"PublicDescription": "Counts all demand data writes (RFOs) have any response type",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x10002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc01c0002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x1c0002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x1c0002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x1c0002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x801c0002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x1c0002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x401c0002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit_e.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc0080002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit_e.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit_e.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit_e.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit_e.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80080002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit_e.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit_e.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40080002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit_m.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc0040002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit_m.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit_m.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit_m.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit_m.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80040002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit_m.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit_m.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40040002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit_s.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc0100002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit_s.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x100002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit_s.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x100002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit_s.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x100002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit_s.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80100002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit_s.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x100002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l3_hit_s.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40100002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l4_hit_local_l4.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc0400002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l4_hit_local_l4.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x400002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l4_hit_local_l4.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x400002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l4_hit_local_l4.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x400002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l4_hit_local_l4.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80400002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l4_hit_local_l4.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x400002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.l4_hit_local_l4.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40400002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.supplier_none.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc0020002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.supplier_none.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x20002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.supplier_none.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x20002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.supplier_none.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x20002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.supplier_none.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80020002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.supplier_none.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x20002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.demand_rfo.supplier_none.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40020002/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.any_response",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests have any response type",
	"PublicDescription": "Counts any other requests have any response type",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x18000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc01c8000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x1c8000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x1c8000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x1c8000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x801c8000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x1c8000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x401c8000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit_e.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc0088000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit_e.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x88000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit_e.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x88000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit_e.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x88000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit_e.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80088000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit_e.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x88000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit_e.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40088000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit_m.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc0048000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit_m.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x48000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit_m.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x48000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit_m.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x48000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit_m.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80048000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit_m.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x48000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit_m.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40048000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit_s.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc0108000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit_s.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x108000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit_s.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x108000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit_s.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x108000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit_s.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80108000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit_s.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x108000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l3_hit_s.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40108000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l4_hit_local_l4.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc0408000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l4_hit_local_l4.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x408000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l4_hit_local_l4.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x408000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l4_hit_local_l4.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x408000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l4_hit_local_l4.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80408000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l4_hit_local_l4.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x408000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.l4_hit_local_l4.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40408000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.supplier_none.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc0028000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.supplier_none.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x28000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.supplier_none.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x28000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.supplier_none.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x28000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.supplier_none.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80028000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.supplier_none.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x28000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "offcore_response.other.supplier_none.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40028000/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "sq_misc.split_lock",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of cache line split locks sent to uncore",
	"PublicDescription": "Counts the number of cache line split locks sent to the uncore",
	"Encoding": "cpu/event=0xf4,period=0x186a3,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "sw_prefetch_access.nta",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of PREFETCHNTA instructions executed",
	"PublicDescription": "Number of PREFETCHNTA instructions executed",
	"Encoding": "cpu/event=0x32,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "sw_prefetch_access.prefetchw",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of PREFETCHW instructions executed",
	"PublicDescription": "Number of PREFETCHW instructions executed",
	"Encoding": "cpu/event=0x32,period=0x1e8483,umask=0x8/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "sw_prefetch_access.t0",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of PREFETCHT0 instructions executed",
	"PublicDescription": "Number of PREFETCHT0 instructions executed",
	"Encoding": "cpu/event=0x32,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "cache",
	"EventName": "sw_prefetch_access.t1_t2",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of PREFETCHT1 or PREFETCHT2 instructions executed",
	"PublicDescription": "Number of PREFETCHT1 or PREFETCHT2 instructions executed",
	"Encoding": "cpu/event=0x32,period=0x1e8483,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "floating point",
	"EventName": "fp_arith_inst_retired.128b_packed_double",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts once for most SIMD 128-bit packed computational double precision floating-point instructions retired. Counts twice for DPP and FM(N)ADD/SUB instructions retired",
	"PublicDescription": "Counts once for most SIMD 128-bit packed computational double precision floating-point instructions retired; some instructions will count twice as noted below.  Each count represents 2 computation operations, one for each element.  Applies to packed double precision floating-point instructions: ADD SUB HADD HSUB SUBADD MUL DIV MIN MAX SQRT DPP FM(N)ADD/SUB.  DPP and FM(N)ADD/SUB instructions count twice as they perform 2 calculations per element. The DAZ and FTZ flags in the MXCSR register need to be set when using these events",
	"Encoding": "cpu/event=0xc7,period=0x1e8483,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "floating point",
	"EventName": "fp_arith_inst_retired.128b_packed_single",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts once for most SIMD 128-bit packed computational single precision floating-point instruction retired. Counts twice for DPP and FM(N)ADD/SUB instructions retired",
	"PublicDescription": "Counts once for most SIMD 128-bit packed computational single precision floating-point instructions retired; some instructions will count twice as noted below.  Each count represents 4 computation operations, one for each element.  Applies to packed single precision floating-point instructions: ADD SUB HADD HSUB SUBADD MUL DIV MIN MAX SQRT RSQRT RCP DPP FM(N)ADD/SUB.  DPP and FM(N)ADD/SUB instructions count twice as they perform 2 calculations per element. The DAZ and FTZ flags in the MXCSR register need to be set when using these events",
	"Encoding": "cpu/event=0xc7,period=0x1e8483,umask=0x8/"
},
{
	"Unit": "cpu",
	"Topic": "floating point",
	"EventName": "fp_arith_inst_retired.256b_packed_double",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts once for most SIMD 256-bit packed double computational precision floating-point instructions retired. Counts twice for DPP and FM(N)ADD/SUB instructions retired",
	"PublicDescription": "Counts once for most SIMD 256-bit packed double computational precision floating-point instructions retired; some instructions will count twice as noted below.  Each count represents 4 computation operations, one for each element.  Applies to packed double precision floating-point instructions: ADD SUB HADD HSUB SUBADD MUL DIV MIN MAX SQRT FM(N)ADD/SUB.  FM(N)ADD/SUB instructions count twice as they perform 2 calculations per element. The DAZ and FTZ flags in the MXCSR register need to be set when using these events",
	"Encoding": "cpu/event=0xc7,period=0x1e8483,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "floating point",
	"EventName": "fp_arith_inst_retired.256b_packed_single",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts once for most SIMD 256-bit packed single computational precision floating-point instructions retired. Counts twice for DPP and FM(N)ADD/SUB instructions retired",
	"PublicDescription": "Counts once for most SIMD 256-bit packed single computational precision floating-point instructions retired; some instructions will count twice as noted below.  Each count represents 8 computation operations, one for each element.  Applies to packed single precision floating-point instructions: ADD SUB HADD HSUB SUBADD MUL DIV MIN MAX SQRT RSQRT RCP DPP FM(N)ADD/SUB.  DPP and FM(N)ADD/SUB instructions count twice as they perform 2 calculations per element. The DAZ and FTZ flags in the MXCSR register need to be set when using these events",
	"Encoding": "cpu/event=0xc7,period=0x1e8483,umask=0x20/"
},
{
	"Unit": "cpu",
	"Topic": "floating point",
	"EventName": "fp_arith_inst_retired.4_flops",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of SSE/AVX computational 128-bit packed single and 256-bit packed double precision FP instructions retired; some instructions will count twice as noted below.  Each count represents 2 or/and 4 computation operations, 1 for each element.  Applies to SSE* and AVX* packed single precision and packed double precision FP instructions: ADD SUB HADD HSUB SUBADD MUL DIV MIN MAX RCP14 RSQRT14 SQRT DPP FM(N)ADD/SUB.  DPP and FM(N)ADD/SUB count twice as they perform 2 calculations per element",
	"PublicDescription": "Number of SSE/AVX computational 128-bit packed single precision and 256-bit packed double precision  floating-point instructions retired; some instructions will count twice as noted below.  Each count represents 2 or/and 4 computation operations, one for each element.  Applies to SSE* and AVX* packed single precision floating-point and packed double precision floating-point instructions: ADD SUB HADD HSUB SUBADD MUL DIV MIN MAX RCP14 RSQRT14 SQRT DPP FM(N)ADD/SUB.  DPP and FM(N)ADD/SUB instructions count twice as they perform 2 calculations per element. The DAZ and FTZ flags in the MXCSR register need to be set when using these events",
	"Encoding": "cpu/event=0xc7,period=0xf4243,umask=0x18/"
},
{
	"Unit": "cpu",
	"Topic": "floating point",
	"EventName": "fp_arith_inst_retired.scalar",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts once for most SIMD scalar computational floating-point instructions retired. Counts twice for DPP and FM(N)ADD/SUB instructions retired",
	"PublicDescription": "Counts once for most SIMD scalar computational single precision and double precision floating-point instructions retired; some instructions will count twice as noted below.  Each count represents 1 computational operation. Applies to SIMD scalar single precision floating-point instructions: ADD SUB MUL DIV MIN MAX SQRT RSQRT RCP FM(N)ADD/SUB.  FM(N)ADD/SUB instructions count twice as they perform 2 calculations per element. The DAZ and FTZ flags in the MXCSR register need to be set when using these events",
	"Encoding": "cpu/event=0xc7,period=0x1e8483,umask=0x3/"
},
{
	"Unit": "cpu",
	"Topic": "floating point",
	"EventName": "fp_arith_inst_retired.scalar_double",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts once for most SIMD scalar computational double precision floating-point instructions retired. Counts twice for DPP and FM(N)ADD/SUB instructions retired",
	"PublicDescription": "Counts once for most SIMD scalar computational double precision floating-point instructions retired; some instructions will count twice as noted below.  Each count represents 1 computational operation. Applies to SIMD scalar double precision floating-point instructions: ADD SUB MUL DIV MIN MAX SQRT FM(N)ADD/SUB.  FM(N)ADD/SUB instructions count twice as they perform 2 calculations per element. The DAZ and FTZ flags in the MXCSR register need to be set when using these events",
	"Encoding": "cpu/event=0xc7,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "floating point",
	"EventName": "fp_arith_inst_retired.scalar_single",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts once for most SIMD scalar computational single precision floating-point instructions retired. Counts twice for DPP and FM(N)ADD/SUB instructions retired",
	"PublicDescription": "Counts once for most SIMD scalar computational single precision floating-point instructions retired; some instructions will count twice as noted below.  Each count represents 1 computational operation. Applies to SIMD scalar single precision floating-point instructions: ADD SUB MUL DIV MIN MAX SQRT RSQRT RCP FM(N)ADD/SUB.  FM(N)ADD/SUB instructions count twice as they perform 2 calculations per element. The DAZ and FTZ flags in the MXCSR register need to be set when using these events",
	"Encoding": "cpu/event=0xc7,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "floating point",
	"EventName": "fp_arith_inst_retired.vector",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of any Vector retired FP arithmetic instructions",
	"PublicDescription": "Number of any Vector retired FP arithmetic instructions",
	"Encoding": "cpu/event=0xc7,period=0x1e8483,umask=0xfc/"
},
{
	"Unit": "cpu",
	"Topic": "floating point",
	"EventName": "fp_assist.any",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles with any input/output SSE or FP assist",
	"PublicDescription": "Counts cycles with any input and output SSE or x87 FP assist. If an input and output assist are detected on the same cycle the event increments by 1",
	"Encoding": "cpu/event=0xca,cmask=0x1,period=0x186a3,umask=0x1e/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "baclears.any",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts the total number when the front end is resteered, mainly when the BPU cannot provide a correct prediction and this is corrected by other branch handling mechanisms at the front end",
	"PublicDescription": "Counts the number of times the front-end is resteered when it finds a branch instruction in a fetch line. This occurs for the first time a branch instruction is fetched or when the branch is not tracked by the BPU (Branch Prediction Unit) anymore",
	"Encoding": "cpu/event=0xe6,period=0x186a3,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "decode.lcp",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Stalls caused by changing prefix length of the instruction. [This event is alias to ILD_STALL.LCP]",
	"PublicDescription": "Counts cycles that the Instruction Length decoder (ILD) stalls occurred due to dynamically changing prefix length of the decoded instruction (by operand size prefix instruction 0x66, address size prefix instruction 0x67 or REX.W for Intel64). Count is proportional to the number of prefixes in a 16B-line. This may result in a three-cycle penalty for each LCP (Length changing prefix) in a 16-byte chunk. [This event is alias to ILD_STALL.LCP]",
	"Encoding": "cpu/event=0x87,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "dsb2mite_switches.count",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Decode Stream Buffer (DSB)-to-MITE switches",
	"PublicDescription": "This event counts the number of the Decode Stream Buffer (DSB)-to-MITE switches including all misses because of missing Decode Stream Buffer (DSB) cache and u-arch forced misses.\nNote: Invoking MITE requires two or three cycles delay",
	"Encoding": "cpu/event=0xab,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "dsb2mite_switches.penalty_cycles",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Decode Stream Buffer (DSB)-to-MITE switch true penalty cycles",
	"PublicDescription": "Counts Decode Stream Buffer (DSB)-to-MITE switch true penalty cycles. These cycles do not include uops routed through because of the switch itself, for example, when Instruction Decode Queue (IDQ) pre-allocation is unavailable, or Instruction Decode Queue (IDQ) is full. SBD-to-MITE switch true penalty cycles happen after the merge mux (MM) receives Decode Stream Buffer (DSB) Sync-indication until receiving the first MITE uop. MM is placed before Instruction Decode Queue (IDQ) to merge uops being fed from the MITE and Decode Stream Buffer (DSB) paths. Decode Stream Buffer (DSB) inserts the Sync-indication whenever a Decode Stream Buffer (DSB)-to-MITE switch occurs.Penalty: A Decode Stream Buffer (DSB) hit followed by a Decode Stream Buffer (DSB) miss can cost up to six cycles in which no uops are delivered to the IDQ. Most often, such switches from the Decode Stream Buffer (DSB) to the legacy pipeline cost 02 cycles",
	"Encoding": "cpu/event=0xab,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "frontend_retired.any_dsb_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired Instructions who experienced DSB miss (Precise event)",
	"PublicDescription": "Counts retired Instructions that experienced DSB (Decode stream buffer i.e. the decoded instruction-cache) miss (Precise event)",
	"Encoding": "cpu/event=0xc6,period=0x186a7,umask=0x1,frontend=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "frontend_retired.dsb_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired Instructions who experienced a critical DSB miss (Precise event)",
	"PublicDescription": "Number of retired Instructions that experienced a critical DSB (Decode stream buffer i.e. the decoded instruction-cache) miss. Critical means stalls were exposed to the back-end as a result of the DSB miss (Precise event)",
	"Encoding": "cpu/event=0xc6,period=0x186a7,umask=0x1,frontend=0x11/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "frontend_retired.itlb_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired Instructions who experienced iTLB true miss (Precise event)",
	"PublicDescription": "Counts retired Instructions that experienced iTLB (Instruction TLB) true miss (Precise event)",
	"Encoding": "cpu/event=0xc6,period=0x186a7,umask=0x1,frontend=0x14/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "frontend_retired.l1i_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired Instructions who experienced Instruction L1 Cache true miss (Precise event)",
	"PublicDescription": "Retired Instructions who experienced Instruction L1 Cache true miss (Precise event)",
	"Encoding": "cpu/event=0xc6,period=0x186a7,umask=0x1,frontend=0x12/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "frontend_retired.l2_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired Instructions who experienced Instruction L2 Cache true miss (Precise event)",
	"PublicDescription": "Retired Instructions who experienced Instruction L2 Cache true miss (Precise event)",
	"Encoding": "cpu/event=0xc6,period=0x186a7,umask=0x1,frontend=0x13/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "frontend_retired.latency_ge_1",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired instructions after front-end starvation of at least 1 cycle (Must be precise)",
	"PublicDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of at least 1 cycle which was not interrupted by a back-end stall (Must be precise)",
	"Encoding": "cpu/event=0xc6,period=0x186a7,umask=0x1,frontend=0x400106/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "frontend_retired.latency_ge_128",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 128 cycles which was not interrupted by a back-end stall (Precise event)",
	"PublicDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 128 cycles which was not interrupted by a back-end stall (Precise event)",
	"Encoding": "cpu/event=0xc6,period=0x186a7,umask=0x1,frontend=0x408006/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "frontend_retired.latency_ge_16",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 16 cycles which was not interrupted by a back-end stall (Precise event)",
	"PublicDescription": "Counts retired instructions that are delivered to the back-end after a front-end stall of at least 16 cycles. During this period the front-end delivered no uops (Precise event)",
	"Encoding": "cpu/event=0xc6,period=0x186a7,umask=0x1,frontend=0x401006/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "frontend_retired.latency_ge_2",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 2 cycles which was not interrupted by a back-end stall (Precise event)",
	"PublicDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 2 cycles which was not interrupted by a back-end stall (Precise event)",
	"Encoding": "cpu/event=0xc6,period=0x186a7,umask=0x1,frontend=0x400206/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "frontend_retired.latency_ge_256",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 256 cycles which was not interrupted by a back-end stall (Precise event)",
	"PublicDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 256 cycles which was not interrupted by a back-end stall (Precise event)",
	"Encoding": "cpu/event=0xc6,period=0x186a7,umask=0x1,frontend=0x410006/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "frontend_retired.latency_ge_2_bubbles_ge_1",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired instructions that are fetched after an interval where the front-end had at least 1 bubble-slot for a period of 2 cycles which was not interrupted by a back-end stall (Precise event)",
	"PublicDescription": "Counts retired instructions that are delivered to the back-end after the front-end had at least 1 bubble-slot for a period of 2 cycles. A bubble-slot is an empty issue-pipeline slot while there was no RAT stall (Precise event)",
	"Encoding": "cpu/event=0xc6,period=0x186a7,umask=0x1,frontend=0x100206/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "frontend_retired.latency_ge_2_bubbles_ge_2",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired instructions that are fetched after an interval where the front-end had at least 2 bubble-slots for a period of 2 cycles which was not interrupted by a back-end stall (Precise event)",
	"PublicDescription": "Retired instructions that are fetched after an interval where the front-end had at least 2 bubble-slots for a period of 2 cycles which was not interrupted by a back-end stall (Precise event)",
	"Encoding": "cpu/event=0xc6,period=0x186a7,umask=0x1,frontend=0x200206/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "frontend_retired.latency_ge_2_bubbles_ge_3",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired instructions that are fetched after an interval where the front-end had at least 3 bubble-slots for a period of 2 cycles which was not interrupted by a back-end stall (Precise event)",
	"PublicDescription": "Retired instructions that are fetched after an interval where the front-end had at least 3 bubble-slots for a period of 2 cycles which was not interrupted by a back-end stall (Precise event)",
	"Encoding": "cpu/event=0xc6,period=0x186a7,umask=0x1,frontend=0x300206/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "frontend_retired.latency_ge_32",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 32 cycles which was not interrupted by a back-end stall (Precise event)",
	"PublicDescription": "Counts retired instructions that are delivered to the back-end after a front-end stall of at least 32 cycles. During this period the front-end delivered no uops (Precise event)",
	"Encoding": "cpu/event=0xc6,period=0x186a7,umask=0x1,frontend=0x402006/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "frontend_retired.latency_ge_4",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 4 cycles which was not interrupted by a back-end stall (Precise event)",
	"PublicDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 4 cycles which was not interrupted by a back-end stall (Precise event)",
	"Encoding": "cpu/event=0xc6,period=0x186a7,umask=0x1,frontend=0x400406/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "frontend_retired.latency_ge_512",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 512 cycles which was not interrupted by a back-end stall (Precise event)",
	"PublicDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 512 cycles which was not interrupted by a back-end stall (Precise event)",
	"Encoding": "cpu/event=0xc6,period=0x186a7,umask=0x1,frontend=0x420006/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "frontend_retired.latency_ge_64",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 64 cycles which was not interrupted by a back-end stall (Precise event)",
	"PublicDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 64 cycles which was not interrupted by a back-end stall (Precise event)",
	"Encoding": "cpu/event=0xc6,period=0x186a7,umask=0x1,frontend=0x404006/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "frontend_retired.latency_ge_8",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired instructions that are fetched after an interval where the front-end delivered no uops for a period of 8 cycles which was not interrupted by a back-end stall (Precise event)",
	"PublicDescription": "Counts retired instructions that are delivered to the back-end after a front-end stall of at least 8 cycles. During this period the front-end delivered no uops (Precise event)",
	"Encoding": "cpu/event=0xc6,period=0x186a7,umask=0x1,frontend=0x400806/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "frontend_retired.stlb_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retired Instructions who experienced STLB (2nd level TLB) true miss (Precise event)",
	"PublicDescription": "Counts retired Instructions that experienced STLB (2nd level TLB) true miss (Precise event)",
	"Encoding": "cpu/event=0xc6,period=0x186a7,umask=0x1,frontend=0x15/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "icache_16b.ifdata_stall",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles where a code fetch is stalled due to L1 instruction cache miss",
	"PublicDescription": "Cycles where a code line fetch is stalled due to an L1 instruction cache miss. The legacy decode pipeline works at a 16 Byte granularity",
	"Encoding": "cpu/event=0x80,period=0x1e8483,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "icache_64b.iftag_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Instruction fetch tag lookups that hit in the instruction cache (L1I). Counts at 64-byte cache-line granularity",
	"PublicDescription": "Instruction fetch tag lookups that hit in the instruction cache (L1I). Counts at 64-byte cache-line granularity",
	"Encoding": "cpu/event=0x83,period=0x30d43,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "icache_64b.iftag_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Instruction fetch tag lookups that miss in the instruction cache (L1I). Counts at 64-byte cache-line granularity",
	"PublicDescription": "Instruction fetch tag lookups that miss in the instruction cache (L1I). Counts at 64-byte cache-line granularity",
	"Encoding": "cpu/event=0x83,period=0x30d43,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "icache_64b.iftag_stall",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles where a code fetch is stalled due to L1 instruction cache tag miss. [This event is alias to ICACHE_TAG.STALLS]",
	"PublicDescription": "Cycles where a code fetch is stalled due to L1 instruction cache tag miss. [This event is alias to ICACHE_TAG.STALLS]",
	"Encoding": "cpu/event=0x83,period=0x30d43,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "icache_tag.stalls",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles where a code fetch is stalled due to L1 instruction cache tag miss. [This event is alias to ICACHE_64B.IFTAG_STALL]",
	"PublicDescription": "Cycles where a code fetch is stalled due to L1 instruction cache tag miss. [This event is alias to ICACHE_64B.IFTAG_STALL]",
	"Encoding": "cpu/event=0x83,period=0x30d43,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "idq.all_dsb_cycles_4_uops",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles Decode Stream Buffer (DSB) is delivering 4 Uops [This event is alias to IDQ.DSB_CYCLES_OK]",
	"PublicDescription": "Counts the number of cycles 4 uops were delivered to Instruction Decode Queue (IDQ) from the Decode Stream Buffer (DSB) path. Count includes uops that may 'bypass' the IDQ. [This event is alias to IDQ.DSB_CYCLES_OK]",
	"Encoding": "cpu/event=0x79,cmask=0x4,period=0x1e8483,umask=0x18/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "idq.all_dsb_cycles_any_uops",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles Decode Stream Buffer (DSB) is delivering any Uop [This event is alias to IDQ.DSB_CYCLES_ANY]",
	"PublicDescription": "Counts the number of cycles uops were delivered to Instruction Decode Queue (IDQ) from the Decode Stream Buffer (DSB) path. Count includes uops that may 'bypass' the IDQ. [This event is alias to IDQ.DSB_CYCLES_ANY]",
	"Encoding": "cpu/event=0x79,cmask=0x1,period=0x1e8483,umask=0x18/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "idq.all_mite_cycles_4_uops",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles MITE is delivering 4 Uops",
	"PublicDescription": "Counts the number of cycles 4 uops were delivered to the Instruction Decode Queue (IDQ) from the MITE (legacy decode pipeline) path. Counting includes uops that may 'bypass' the IDQ. During these cycles uops are not being delivered from the Decode Stream Buffer (DSB)",
	"Encoding": "cpu/event=0x79,cmask=0x4,period=0x1e8483,umask=0x24/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "idq.all_mite_cycles_any_uops",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles MITE is delivering any Uop",
	"PublicDescription": "Counts the number of cycles uops were delivered to the Instruction Decode Queue (IDQ) from the MITE (legacy decode pipeline) path. Counting includes uops that may 'bypass' the IDQ. During these cycles uops are not being delivered from the Decode Stream Buffer (DSB)",
	"Encoding": "cpu/event=0x79,cmask=0x1,period=0x1e8483,umask=0x24/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "idq.dsb_cycles",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles when uops are being delivered to Instruction Decode Queue (IDQ) from Decode Stream Buffer (DSB) path",
	"PublicDescription": "Counts cycles during which uops are being delivered to Instruction Decode Queue (IDQ) from the Decode Stream Buffer (DSB) path. Counting includes uops that may 'bypass' the IDQ",
	"Encoding": "cpu/event=0x79,cmask=0x1,period=0x1e8483,umask=0x8/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "idq.dsb_cycles_any",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles Decode Stream Buffer (DSB) is delivering any Uop [This event is alias to IDQ.ALL_DSB_CYCLES_ANY_UOPS]",
	"PublicDescription": "Counts the number of cycles uops were delivered to Instruction Decode Queue (IDQ) from the Decode Stream Buffer (DSB) path. Count includes uops that may 'bypass' the IDQ. [This event is alias to IDQ.ALL_DSB_CYCLES_ANY_UOPS]",
	"Encoding": "cpu/event=0x79,cmask=0x1,period=0x1e8483,umask=0x18/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "idq.dsb_cycles_ok",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles Decode Stream Buffer (DSB) is delivering 4 Uops [This event is alias to IDQ.ALL_DSB_CYCLES_4_UOPS]",
	"PublicDescription": "Counts the number of cycles 4 uops were delivered to Instruction Decode Queue (IDQ) from the Decode Stream Buffer (DSB) path. Count includes uops that may 'bypass' the IDQ. [This event is alias to IDQ.ALL_DSB_CYCLES_4_UOPS]",
	"Encoding": "cpu/event=0x79,cmask=0x4,period=0x1e8483,umask=0x18/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "idq.dsb_uops",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Uops delivered to Instruction Decode Queue (IDQ) from the Decode Stream Buffer (DSB) path",
	"PublicDescription": "Counts the number of uops delivered to Instruction Decode Queue (IDQ) from the Decode Stream Buffer (DSB) path. Counting includes uops that may 'bypass' the IDQ",
	"Encoding": "cpu/event=0x79,period=0x1e8483,umask=0x8/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "idq.mite_cycles",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles when uops are being delivered to Instruction Decode Queue (IDQ) from MITE path",
	"PublicDescription": "Counts cycles during which uops are being delivered to Instruction Decode Queue (IDQ) from the MITE path. Counting includes uops that may 'bypass' the IDQ",
	"Encoding": "cpu/event=0x79,cmask=0x1,period=0x1e8483,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "idq.mite_uops",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Uops delivered to Instruction Decode Queue (IDQ) from MITE path",
	"PublicDescription": "Counts the number of uops delivered to Instruction Decode Queue (IDQ) from the MITE path. Counting includes uops that may 'bypass' the IDQ. This also means that uops are not being delivered from the Decode Stream Buffer (DSB)",
	"Encoding": "cpu/event=0x79,period=0x1e8483,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "idq.ms_cycles",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles when uops are being delivered to Instruction Decode Queue (IDQ) while Microcode Sequencer (MS) is busy",
	"PublicDescription": "Counts cycles during which uops are being delivered to Instruction Decode Queue (IDQ) while the Microcode Sequencer (MS) is busy. Counting includes uops that may 'bypass' the IDQ. Uops maybe initiated by Decode Stream Buffer (DSB) or MITE",
	"Encoding": "cpu/event=0x79,cmask=0x1,period=0x1e8483,umask=0x30/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "idq.ms_dsb_cycles",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles when uops initiated by Decode Stream Buffer (DSB) are being delivered to Instruction Decode Queue (IDQ) while Microcode Sequencer (MS) is busy",
	"PublicDescription": "Counts cycles during which uops initiated by Decode Stream Buffer (DSB) are being delivered to Instruction Decode Queue (IDQ) while the Microcode Sequencer (MS) is busy. Counting includes uops that may 'bypass' the IDQ",
	"Encoding": "cpu/event=0x79,cmask=0x1,period=0x1e8483,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "idq.ms_mite_uops",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Uops initiated by MITE and delivered to Instruction Decode Queue (IDQ) while Microcode Sequencer (MS) is busy",
	"PublicDescription": "Counts the number of uops initiated by MITE and delivered to Instruction Decode Queue (IDQ) while the Microcode Sequencer (MS) is busy. Counting includes uops that may 'bypass' the IDQ",
	"Encoding": "cpu/event=0x79,period=0x1e8483,umask=0x20/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "idq.ms_switches",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of switches from DSB (Decode Stream Buffer) or MITE (legacy decode pipeline) to the Microcode Sequencer",
	"PublicDescription": "Number of switches from DSB (Decode Stream Buffer) or MITE (legacy decode pipeline) to the Microcode Sequencer",
	"Encoding": "cpu/event=0x79,cmask=0x1,edge=0x1,period=0x1e8483,umask=0x30/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "idq.ms_uops",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Uops delivered to Instruction Decode Queue (IDQ) while Microcode Sequencer (MS) is busy",
	"PublicDescription": "Counts the total number of uops delivered by the Microcode Sequencer (MS). Any instruction over 4 uops will be delivered by the MS. Some instructions such as transcendentals may additionally generate uops from the MS",
	"Encoding": "cpu/event=0x79,period=0x1e8483,umask=0x30/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "idq_uops_not_delivered.core",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Uops not delivered to Resource Allocation Table (RAT) per thread when backend of the machine is not stalled",
	"PublicDescription": "Counts the number of uops not delivered to Resource Allocation Table (RAT) per thread adding 4  x when Resource Allocation Table (RAT) is not stalled and Instruction Decode Queue (IDQ) delivers x uops to Resource Allocation Table (RAT) (where x belongs to {0,1,2,3}). Counting does not cover cases when: a. IDQ-Resource Allocation Table (RAT) pipe serves the other thread. b. Resource Allocation Table (RAT) is stalled for the thread (including uop drops and clear BE conditions).  c. Instruction Decode Queue (IDQ) delivers four uops",
	"Encoding": "cpu/event=0x9c,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "idq_uops_not_delivered.cycles_0_uops_deliv.core",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles per thread when 4 or more uops are not delivered to Resource Allocation Table (RAT) when backend of the machine is not stalled",
	"PublicDescription": "Counts, on the per-thread basis, cycles when no uops are delivered to Resource Allocation Table (RAT). IDQ_Uops_Not_Delivered.core =4",
	"Encoding": "cpu/event=0x9c,cmask=0x4,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "idq_uops_not_delivered.cycles_fe_was_ok",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts cycles FE delivered 4 uops or Resource Allocation Table (RAT) was stalling FE",
	"PublicDescription": "Counts cycles FE delivered 4 uops or Resource Allocation Table (RAT) was stalling FE",
	"Encoding": "cpu/event=0x9c,cmask=0x1,inv=0x1,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "idq_uops_not_delivered.cycles_le_1_uop_deliv.core",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles per thread when 3 or more uops are not delivered to Resource Allocation Table (RAT) when backend of the machine is not stalled",
	"PublicDescription": "Counts, on the per-thread basis, cycles when less than 1 uop is delivered to Resource Allocation Table (RAT). IDQ_Uops_Not_Delivered.core >= 3",
	"Encoding": "cpu/event=0x9c,cmask=0x3,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "idq_uops_not_delivered.cycles_le_2_uop_deliv.core",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles with less than 2 uops delivered by the front end",
	"PublicDescription": "Cycles with less than 2 uops delivered by the front-end",
	"Encoding": "cpu/event=0x9c,cmask=0x2,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "frontend",
	"EventName": "idq_uops_not_delivered.cycles_le_3_uop_deliv.core",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles with less than 3 uops delivered by the front end",
	"PublicDescription": "Cycles with less than 3 uops delivered by the front-end",
	"Encoding": "cpu/event=0x9c,cmask=0x1,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "cycle_activity.cycles_l3_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles while L3 cache miss demand load is outstanding",
	"PublicDescription": "Cycles while L3 cache miss demand load is outstanding",
	"Encoding": "cpu/event=0xa3,cmask=0x2,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "cycle_activity.stalls_l3_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Execution stalls while L3 cache miss demand load is outstanding",
	"PublicDescription": "Execution stalls while L3 cache miss demand load is outstanding",
	"Encoding": "cpu/event=0xa3,cmask=0x6,period=0x1e8483,umask=0x6/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "hle_retired.aborted",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times an HLE execution aborted due to any reasons (multiple categories may count as one) (Precise event)",
	"PublicDescription": "Number of times HLE abort was triggered (Precise event)",
	"Encoding": "cpu/event=0xc8,period=0x1e8483,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "hle_retired.aborted_events",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times an HLE execution aborted due to unfriendly events (such as interrupts)",
	"PublicDescription": "Number of times an HLE execution aborted due to unfriendly events (such as interrupts)",
	"Encoding": "cpu/event=0xc8,period=0x1e8483,umask=0x80/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "hle_retired.aborted_mem",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times an HLE execution aborted due to various memory events (e.g., read/write capacity and conflicts)",
	"PublicDescription": "Number of times an HLE execution aborted due to various memory events (e.g., read/write capacity and conflicts)",
	"Encoding": "cpu/event=0xc8,period=0x1e8483,umask=0x8/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "hle_retired.aborted_memtype",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times an HLE execution aborted due to incompatible memory type",
	"PublicDescription": "Number of times an HLE execution aborted due to incompatible memory type",
	"Encoding": "cpu/event=0xc8,period=0x1e8483,umask=0x40/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "hle_retired.aborted_timer",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times an HLE execution aborted due to hardware timer expiration",
	"PublicDescription": "Number of times an HLE execution aborted due to hardware timer expiration",
	"Encoding": "cpu/event=0xc8,period=0x1e8483,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "hle_retired.aborted_unfriendly",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times an HLE execution aborted due to HLE-unfriendly instructions and certain unfriendly events (such as AD assists etc.)",
	"PublicDescription": "Number of times an HLE execution aborted due to HLE-unfriendly instructions and certain unfriendly events (such as AD assists etc.)",
	"Encoding": "cpu/event=0xc8,period=0x1e8483,umask=0x20/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "hle_retired.commit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times an HLE execution successfully committed",
	"PublicDescription": "Number of times HLE commit succeeded",
	"Encoding": "cpu/event=0xc8,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "hle_retired.start",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times an HLE execution started",
	"PublicDescription": "Number of times we entered an HLE region. Does not count nested transactions",
	"Encoding": "cpu/event=0xc8,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "machine_clears.memory_ordering",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts the number of machine clears due to memory order conflicts  Spec update: SKL089",
	"PublicDescription": "Counts the number of memory ordering Machine Clears detected. Memory Ordering Machine Clears can result from one of the following:a. memory disambiguation,b. external snoop, orc. cross SMT-HW-thread snoop (stores) hitting load buffer  Spec update: SKL089",
	"Encoding": "cpu/event=0xc3,period=0x186a3,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "mem_trans_retired.load_latency_gt_128",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 128 cycles  Supports address when precise (Must be precise)",
	"PublicDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 128 cycles.  Reported latency may be longer than just the memory latency  Supports address when precise (Must be precise)",
	"Encoding": "cpu/event=0xcd,period=0x3f1,umask=0x1,ldlat=0x80/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "mem_trans_retired.load_latency_gt_16",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 16 cycles  Supports address when precise (Must be precise)",
	"PublicDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 16 cycles.  Reported latency may be longer than just the memory latency  Supports address when precise (Must be precise)",
	"Encoding": "cpu/event=0xcd,period=0x4e2b,umask=0x1,ldlat=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "mem_trans_retired.load_latency_gt_256",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 256 cycles  Supports address when precise (Must be precise)",
	"PublicDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 256 cycles.  Reported latency may be longer than just the memory latency  Supports address when precise (Must be precise)",
	"Encoding": "cpu/event=0xcd,period=0x1f7,umask=0x1,ldlat=0x100/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "mem_trans_retired.load_latency_gt_32",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 32 cycles  Supports address when precise (Must be precise)",
	"PublicDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 32 cycles.  Reported latency may be longer than just the memory latency  Supports address when precise (Must be precise)",
	"Encoding": "cpu/event=0xcd,period=0x186a7,umask=0x1,ldlat=0x20/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "mem_trans_retired.load_latency_gt_4",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 4 cycles  Supports address when precise (Must be precise)",
	"PublicDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 4 cycles.  Reported latency may be longer than just the memory latency  Supports address when precise (Must be precise)",
	"Encoding": "cpu/event=0xcd,period=0x186a3,umask=0x1,ldlat=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "mem_trans_retired.load_latency_gt_512",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 512 cycles  Supports address when precise (Must be precise)",
	"PublicDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 512 cycles.  Reported latency may be longer than just the memory latency  Supports address when precise (Must be precise)",
	"Encoding": "cpu/event=0xcd,period=0x65,umask=0x1,ldlat=0x200/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "mem_trans_retired.load_latency_gt_64",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 64 cycles  Supports address when precise (Must be precise)",
	"PublicDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 64 cycles.  Reported latency may be longer than just the memory latency  Supports address when precise (Must be precise)",
	"Encoding": "cpu/event=0xcd,period=0x7d3,umask=0x1,ldlat=0x40/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "mem_trans_retired.load_latency_gt_8",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 8 cycles  Supports address when precise (Must be precise)",
	"PublicDescription": "Counts randomly selected loads when the latency from first dispatch to completion is greater than 8 cycles.  Reported latency may be longer than just the memory latency  Supports address when precise (Must be precise)",
	"Encoding": "cpu/event=0xcd,period=0xc365,umask=0x1,ldlat=0x8/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_requests.l3_miss_demand_data_rd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Demand Data Read requests who miss L3 cache",
	"PublicDescription": "Demand Data Read requests who miss L3 cache",
	"Encoding": "cpu/event=0xb0,period=0x186a3,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_requests_outstanding.cycles_with_l3_miss_demand_data_rd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles with at least 1 Demand Data Read requests who miss L3 cache in the superQ",
	"PublicDescription": "Cycles with at least 1 Demand Data Read requests who miss L3 cache in the superQ",
	"Encoding": "cpu/event=0x60,cmask=0x1,period=0x1e8483,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_requests_outstanding.l3_miss_demand_data_rd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts number of Offcore outstanding Demand Data Read requests that miss L3 cache in the superQ every cycle",
	"PublicDescription": "Counts number of Offcore outstanding Demand Data Read requests that miss L3 cache in the superQ every cycle",
	"Encoding": "cpu/event=0x60,period=0x1e8483,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_requests_outstanding.l3_miss_demand_data_rd_ge_6",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles with at least 6 Demand Data Read requests that miss L3 cache in the superQ",
	"PublicDescription": "Cycles with at least 6 Demand Data Read requests that miss L3 cache in the superQ",
	"Encoding": "cpu/event=0x60,cmask=0x6,period=0x1e8483,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_code_rd.l3_hit.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x1c0004/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_code_rd.l3_hit_e.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80004/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_code_rd.l3_hit_m.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40004/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_code_rd.l3_hit_s.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x100004/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_code_rd.l3_miss.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xfc400004/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_code_rd.l3_miss.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x3c400004/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_code_rd.l3_miss.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x3c400004/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_code_rd.l3_miss.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x3c400004/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_code_rd.l3_miss.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x3c400004/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_code_rd.l3_miss.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xbc400004/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_code_rd.l3_miss.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x3c400004/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_code_rd.l3_miss.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x7c400004/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_code_rd.l3_miss_local_dram.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc4000004/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_code_rd.l3_miss_local_dram.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x4000004/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_code_rd.l3_miss_local_dram.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x4000004/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_code_rd.l3_miss_local_dram.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x4000004/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_code_rd.l3_miss_local_dram.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x4000004/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_code_rd.l3_miss_local_dram.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x84000004/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_code_rd.l3_miss_local_dram.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x4000004/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_code_rd.l3_miss_local_dram.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x44000004/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_code_rd.l4_hit_local_l4.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x400004/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_code_rd.supplier_none.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand code reads",
	"PublicDescription": "Counts all demand code reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x20004/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_data_rd.l3_hit.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x1c0001/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_data_rd.l3_hit_e.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80001/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_data_rd.l3_hit_m.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40001/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_data_rd.l3_hit_s.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x100001/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_data_rd.l3_miss.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xfc400001/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_data_rd.l3_miss.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x3c400001/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_data_rd.l3_miss.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x3c400001/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_data_rd.l3_miss.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x3c400001/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_data_rd.l3_miss.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x3c400001/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_data_rd.l3_miss.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xbc400001/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_data_rd.l3_miss.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x3c400001/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_data_rd.l3_miss.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x7c400001/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_data_rd.l3_miss_local_dram.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc4000001/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_data_rd.l3_miss_local_dram.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x4000001/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_data_rd.l3_miss_local_dram.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x4000001/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_data_rd.l3_miss_local_dram.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x4000001/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_data_rd.l3_miss_local_dram.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x4000001/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_data_rd.l3_miss_local_dram.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x84000001/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_data_rd.l3_miss_local_dram.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x4000001/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_data_rd.l3_miss_local_dram.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x44000001/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_data_rd.l4_hit_local_l4.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x400001/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_data_rd.supplier_none.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts demand data reads",
	"PublicDescription": "Counts demand data reads",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x20001/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_rfo.l3_hit.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x1c0002/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_rfo.l3_hit_e.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x80002/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_rfo.l3_hit_m.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x40002/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_rfo.l3_hit_s.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x100002/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_rfo.l3_miss.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xfc400002/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_rfo.l3_miss.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x3c400002/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_rfo.l3_miss.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x3c400002/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_rfo.l3_miss.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x3c400002/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_rfo.l3_miss.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x3c400002/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_rfo.l3_miss.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xbc400002/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_rfo.l3_miss.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x3c400002/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_rfo.l3_miss.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x7c400002/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_rfo.l3_miss_local_dram.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc4000002/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_rfo.l3_miss_local_dram.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x4000002/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_rfo.l3_miss_local_dram.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x4000002/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_rfo.l3_miss_local_dram.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x4000002/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_rfo.l3_miss_local_dram.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x4000002/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_rfo.l3_miss_local_dram.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x84000002/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_rfo.l3_miss_local_dram.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x4000002/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_rfo.l3_miss_local_dram.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x44000002/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_rfo.l4_hit_local_l4.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x400002/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.demand_rfo.supplier_none.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts all demand data writes (RFOs)",
	"PublicDescription": "Counts all demand data writes (RFOs)",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x20002/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.other.l3_hit.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x1c8000/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.other.l3_hit_e.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x88000/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.other.l3_hit_m.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x48000/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.other.l3_hit_s.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x108000/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.other.l3_miss.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xfc408000/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.other.l3_miss.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x3c408000/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.other.l3_miss.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x3c408000/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.other.l3_miss.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x3c408000/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.other.l3_miss.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x3c408000/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.other.l3_miss.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xbc408000/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.other.l3_miss.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x3c408000/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.other.l3_miss.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x7c408000/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.other.l3_miss_local_dram.any_snoop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0xc4008000/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.other.l3_miss_local_dram.snoop_hit_no_fwd",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x4008000/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.other.l3_miss_local_dram.snoop_hitm",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x4008000/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.other.l3_miss_local_dram.snoop_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x4008000/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.other.l3_miss_local_dram.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x4008000/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.other.l3_miss_local_dram.snoop_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x84008000/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.other.l3_miss_local_dram.snoop_not_needed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x4008000/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.other.l3_miss_local_dram.spl_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x44008000/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.other.l4_hit_local_l4.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x408000/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "offcore_response.other.supplier_none.snoop_non_dram",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts any other requests",
	"PublicDescription": "Counts any other requests",
	"Encoding": "cpu/event=0xb7,period=0x186a3,umask=0x1,offcore_rsp=0x28000/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "rtm_retired.aborted",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times an RTM execution aborted due to any reasons (multiple categories may count as one) (Precise event)",
	"PublicDescription": "Number of times RTM abort was triggered (Precise event)",
	"Encoding": "cpu/event=0xc9,period=0x1e8483,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "rtm_retired.aborted_events",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times an RTM execution aborted due to none of the previous 4 categories (e.g. interrupt)",
	"PublicDescription": "Number of times an RTM execution aborted due to none of the previous 4 categories (e.g. interrupt)",
	"Encoding": "cpu/event=0xc9,period=0x1e8483,umask=0x80/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "rtm_retired.aborted_mem",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times an RTM execution aborted due to various memory events (e.g. read/write capacity and conflicts)",
	"PublicDescription": "Number of times an RTM execution aborted due to various memory events (e.g. read/write capacity and conflicts)",
	"Encoding": "cpu/event=0xc9,period=0x1e8483,umask=0x8/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "rtm_retired.aborted_memtype",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times an RTM execution aborted due to incompatible memory type",
	"PublicDescription": "Number of times an RTM execution aborted due to incompatible memory type",
	"Encoding": "cpu/event=0xc9,period=0x1e8483,umask=0x40/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "rtm_retired.aborted_timer",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times an RTM execution aborted due to uncommon conditions",
	"PublicDescription": "Number of times an RTM execution aborted due to uncommon conditions",
	"Encoding": "cpu/event=0xc9,period=0x1e8483,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "rtm_retired.aborted_unfriendly",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times an RTM execution aborted due to HLE-unfriendly instructions",
	"PublicDescription": "Number of times an RTM execution aborted due to HLE-unfriendly instructions",
	"Encoding": "cpu/event=0xc9,period=0x1e8483,umask=0x20/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "rtm_retired.commit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times an RTM execution successfully committed",
	"PublicDescription": "Number of times RTM commit succeeded",
	"Encoding": "cpu/event=0xc9,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "rtm_retired.start",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times an RTM execution started",
	"PublicDescription": "Number of times we entered an RTM region. Does not count nested transactions",
	"Encoding": "cpu/event=0xc9,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "tx_exec.misc1",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts the number of times a class of instructions that may cause a transactional abort was executed. Since this is the count of execution, it may not always cause a transactional abort",
	"PublicDescription": "Counts the number of times a class of instructions that may cause a transactional abort was executed. Since this is the count of execution, it may not always cause a transactional abort",
	"Encoding": "cpu/event=0x5d,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "tx_exec.misc2",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts the number of times a class of instructions (e.g., vzeroupper) that may cause a transactional abort was executed inside a transactional region",
	"PublicDescription": "Unfriendly TSX abort triggered by a vzeroupper instruction",
	"Encoding": "cpu/event=0x5d,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "tx_exec.misc3",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts the number of times an instruction execution caused the transactional nest count supported to be exceeded",
	"PublicDescription": "Unfriendly TSX abort triggered by a nest count that is too deep",
	"Encoding": "cpu/event=0x5d,period=0x1e8483,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "tx_exec.misc4",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts the number of times a XBEGIN instruction was executed inside an HLE transactional region",
	"PublicDescription": "RTM region detected inside HLE",
	"Encoding": "cpu/event=0x5d,period=0x1e8483,umask=0x8/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "tx_exec.misc5",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts the number of times an HLE XACQUIRE instruction was executed inside an RTM transactional region",
	"PublicDescription": "Counts the number of times an HLE XACQUIRE instruction was executed inside an RTM transactional region",
	"Encoding": "cpu/event=0x5d,period=0x1e8483,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "tx_mem.abort_capacity",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times a transactional abort was signaled due to a data capacity limitation for transactional reads or writes",
	"PublicDescription": "Number of times a transactional abort was signaled due to a data capacity limitation for transactional reads or writes",
	"Encoding": "cpu/event=0x54,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "tx_mem.abort_conflict",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times a transactional abort was signaled due to a data conflict on a transactionally accessed address",
	"PublicDescription": "Number of times a TSX line had a cache conflict",
	"Encoding": "cpu/event=0x54,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "tx_mem.abort_hle_elision_buffer_mismatch",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times an HLE transactional execution aborted due to XRELEASE lock not satisfying the address and value requirements in the elision buffer",
	"PublicDescription": "Number of times a TSX Abort was triggered due to release/commit but data and address mismatch",
	"Encoding": "cpu/event=0x54,period=0x1e8483,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "tx_mem.abort_hle_elision_buffer_not_empty",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times an HLE transactional execution aborted due to NoAllocatedElisionBuffer being non-zero",
	"PublicDescription": "Number of times a TSX Abort was triggered due to commit but Lock Buffer not empty",
	"Encoding": "cpu/event=0x54,period=0x1e8483,umask=0x8/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "tx_mem.abort_hle_elision_buffer_unsupported_alignment",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times an HLE transactional execution aborted due to an unsupported read alignment from the elision buffer",
	"PublicDescription": "Number of times a TSX Abort was triggered due to attempting an unsupported alignment from Lock Buffer",
	"Encoding": "cpu/event=0x54,period=0x1e8483,umask=0x20/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "tx_mem.abort_hle_store_to_elided_lock",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times a HLE transactional region aborted due to a non XRELEASE prefixed instruction writing to an elided lock in the elision buffer",
	"PublicDescription": "Number of times a TSX Abort was triggered due to a non-release/commit store to lock",
	"Encoding": "cpu/event=0x54,period=0x1e8483,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "memory",
	"EventName": "tx_mem.hle_elision_buffer_full",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times HLE lock could not be elided due to ElisionBufferAvailable being zero",
	"PublicDescription": "Number of times we could not allocate Lock Buffer",
	"Encoding": "cpu/event=0x54,period=0x1e8483,umask=0x40/"
},
{
	"Unit": "cpu",
	"Topic": "other",
	"EventName": "hw_interrupts.received",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of hardware interrupts received by the processor",
	"PublicDescription": "Counts the number of hardware interruptions received by the processor",
	"Encoding": "cpu/event=0xcb,period=0xcb,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "other",
	"EventName": "memory_disambiguation.history_reset",
	"EventType": "Kernel PMU event",
	"BriefDescription": "MEMORY_DISAMBIGUATION.HISTORY_RESET",
	"PublicDescription": "MEMORY_DISAMBIGUATION.HISTORY_RESET",
	"Encoding": "cpu/event=0x9,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "arith.divider_active",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles when divide unit is busy executing divide or square root operations. Accounts for integer and floating-point operations",
	"PublicDescription": "Cycles when divide unit is busy executing divide or square root operations. Accounts for integer and floating-point operations",
	"Encoding": "cpu/event=0x14,cmask=0x1,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "br_inst_retired.all_branches",
	"EventType": "Kernel PMU event",
	"BriefDescription": "All (macro) branch instructions retired  Spec update: SKL091",
	"PublicDescription": "Counts all (macro) branch instructions retired  Spec update: SKL091",
	"Encoding": "cpu/event=0xc4,period=0x61a89/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "br_inst_retired.all_branches_pebs",
	"EventType": "Kernel PMU event",
	"BriefDescription": "All (macro) branch instructions retired  Spec update: SKL091 (Must be precise)",
	"PublicDescription": "This is a precise version of BR_INST_RETIRED.ALL_BRANCHES that counts all (macro) branch instructions retired  Spec update: SKL091 (Must be precise)",
	"Encoding": "cpu/event=0xc4,period=0x61a89,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "br_inst_retired.cond",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Conditional branch instructions retired. [This event is alias to BR_INST_RETIRED.CONDITIONAL]  Spec update: SKL091",
	"PublicDescription": "This event counts conditional branch instructions retired. [This event is alias to BR_INST_RETIRED.CONDITIONAL]  Spec update: SKL091",
	"Encoding": "cpu/event=0xc4,period=0x61a89,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "br_inst_retired.cond_ntaken",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Not taken branch instructions retired  Spec update: SKL091",
	"PublicDescription": "This event counts not taken branch instructions retired  Spec update: SKL091",
	"Encoding": "cpu/event=0xc4,period=0x61a89,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "br_inst_retired.conditional",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Conditional branch instructions retired. [This event is alias to BR_INST_RETIRED.COND]  Spec update: SKL091 (Precise event)",
	"PublicDescription": "This event counts conditional branch instructions retired. [This event is alias to BR_INST_RETIRED.COND]  Spec update: SKL091 (Precise event)",
	"Encoding": "cpu/event=0xc4,period=0x61a89,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "br_inst_retired.far_branch",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Far branch instructions retired  Spec update: SKL091 (Precise event)",
	"PublicDescription": "This event counts far branch instructions retired  Spec update: SKL091 (Precise event)",
	"Encoding": "cpu/event=0xc4,period=0x186a7,umask=0x40/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "br_inst_retired.near_call",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Direct and indirect near call instructions retired  Spec update: SKL091 (Precise event)",
	"PublicDescription": "This event counts both direct and indirect near call instructions retired  Spec update: SKL091 (Precise event)",
	"Encoding": "cpu/event=0xc4,period=0x186a7,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "br_inst_retired.near_return",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Return instructions retired  Spec update: SKL091 (Precise event)",
	"PublicDescription": "This event counts return instructions retired  Spec update: SKL091 (Precise event)",
	"Encoding": "cpu/event=0xc4,period=0x186a7,umask=0x8/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "br_inst_retired.near_taken",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Taken branch instructions retired  Spec update: SKL091 (Precise event)",
	"PublicDescription": "This event counts taken branch instructions retired  Spec update: SKL091 (Precise event)",
	"Encoding": "cpu/event=0xc4,period=0x61a89,umask=0x20/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "br_inst_retired.not_taken",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Not taken branch instructions retired  Spec update: SKL091",
	"PublicDescription": "This event counts not taken branch instructions retired  Spec update: SKL091",
	"Encoding": "cpu/event=0xc4,period=0x61a89,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "br_misp_exec.all_branches",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Speculative and retired mispredicted macro conditional branches",
	"PublicDescription": "This event counts both taken and not taken speculative and retired mispredicted branch instructions",
	"Encoding": "cpu/event=0x89,period=0x30d43,umask=0xff/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "br_misp_exec.indirect",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Speculative mispredicted indirect branches",
	"PublicDescription": "Counts speculatively miss-predicted indirect branches at execution time. Counts for indirect near CALL or JMP instructions (RET excluded)",
	"Encoding": "cpu/event=0x89,period=0x30d43,umask=0xe4/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "br_misp_retired.all_branches",
	"EventType": "Kernel PMU event",
	"BriefDescription": "All mispredicted macro branch instructions retired",
	"PublicDescription": "Counts all the retired branch instructions that were mispredicted by the processor. A branch misprediction occurs when the processor incorrectly predicts the destination of the branch.  When the misprediction is discovered at execution, all the instructions executed in the wrong (speculative) path must be discarded, and the processor must start fetching from the correct path",
	"Encoding": "cpu/event=0xc5,period=0x61a89/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "br_misp_retired.all_branches_pebs",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Mispredicted macro branch instructions retired (Must be precise)",
	"PublicDescription": "This is a precise version of BR_MISP_RETIRED.ALL_BRANCHES that counts all mispredicted macro branch instructions retired (Must be precise)",
	"Encoding": "cpu/event=0xc5,period=0x61a89,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "br_misp_retired.conditional",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Mispredicted conditional branch instructions retired (Precise event)",
	"PublicDescription": "This event counts mispredicted conditional branch instructions retired (Precise event)",
	"Encoding": "cpu/event=0xc5,period=0x61a89,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "br_misp_retired.near_call",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Mispredicted direct and indirect near call instructions retired (Precise event)",
	"PublicDescription": "Counts both taken and not taken retired mispredicted direct and indirect near calls, including both register and memory indirect (Precise event)",
	"Encoding": "cpu/event=0xc5,period=0x61a89,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "br_misp_retired.near_taken",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of near branch instructions retired that were mispredicted and taken (Precise event)",
	"PublicDescription": "Number of near branch instructions retired that were mispredicted and taken (Precise event)",
	"Encoding": "cpu/event=0xc5,period=0x61a89,umask=0x20/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "cpu_clk_thread_unhalted.one_thread_active",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Core crystal clock cycles when this thread is unhalted and the other thread is halted",
	"PublicDescription": "Core crystal clock cycles when this thread is unhalted and the other thread is halted",
	"Encoding": "cpu/event=0x3c,period=0x61ab,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "cpu_clk_thread_unhalted.ref_xclk",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Core crystal clock cycles when the thread is unhalted",
	"PublicDescription": "Core crystal clock cycles when the thread is unhalted",
	"Encoding": "cpu/event=0x3c,period=0x61ab,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "cpu_clk_thread_unhalted.ref_xclk_any",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Core crystal clock cycles when at least one thread on the physical core is unhalted",
	"PublicDescription": "Core crystal clock cycles when at least one thread on the physical core is unhalted",
	"Encoding": "cpu/event=0x3c,any=0x1,period=0x61ab,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "cpu_clk_unhalted.one_thread_active",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Core crystal clock cycles when this thread is unhalted and the other thread is halted",
	"PublicDescription": "Core crystal clock cycles when this thread is unhalted and the other thread is halted",
	"Encoding": "cpu/event=0x3c,period=0x61ab,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "cpu_clk_unhalted.ref_tsc",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Reference cycles when the core is not in halt state",
	"PublicDescription": "Counts the number of reference cycles when the core is not in a halt state. The core enters the halt state when it is running the HLT instruction or the MWAIT instruction. This event is not affected by core frequency changes (for example, P states, TM2 transitions) but has the same incrementing frequency as the time stamp counter. This event can approximate elapsed time while the core was not in a halt state. This event has a constant ratio with the CPU_CLK_UNHALTED.REF_XCLK event. It is counted on a dedicated fixed counter, leaving the four (eight when Hyperthreading is disabled) programmable counters available for other events. Note: On all current platforms this event stops counting during 'throttling (TM)' states duty off periods the processor is 'halted'.  The counter update is done at a lower clock rate then the core clock the overflow status bit for this counter may appear 'sticky'.  After the counter has overflowed and software clears the overflow status bit and resets the counter to less than MAX. The reset value to the counter is not clocked immediately so the overflow status bit will flip 'high (1)' and generate another PMI (if enabled) after which the reset value gets clocked into the counter. Therefore, software will get the interrupt, read the overflow status bit '1 for bit 34 while the counter value is less than MAX. Software should ignore this case",
	"Encoding": "cpu/event=0,period=0x1e8483,umask=0x3/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "cpu_clk_unhalted.ref_xclk",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Core crystal clock cycles when the thread is unhalted",
	"PublicDescription": "Core crystal clock cycles when the thread is unhalted",
	"Encoding": "cpu/event=0x3c,period=0x61ab,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "cpu_clk_unhalted.ref_xclk_any",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Core crystal clock cycles when at least one thread on the physical core is unhalted",
	"PublicDescription": "Core crystal clock cycles when at least one thread on the physical core is unhalted",
	"Encoding": "cpu/event=0x3c,any=0x1,period=0x61ab,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "cpu_clk_unhalted.ring0_trans",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts when there is a transition from ring 1, 2 or 3 to ring 0",
	"PublicDescription": "Counts when the Current Privilege Level (CPL) transitions from ring 1, 2 or 3 to ring 0 (Kernel)",
	"Encoding": "cpu/event=0x3c,cmask=0x1,edge=0x1,period=0x186a7/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "cpu_clk_unhalted.thread",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Core cycles when the thread is not in halt state",
	"PublicDescription": "Counts the number of core cycles while the thread is not in a halt state. The thread enters the halt state when it is running the HLT instruction. This event is a component in many key event ratios. The core frequency may change from time to time due to transitions associated with Enhanced Intel SpeedStep Technology or TM2. For this reason this event may have a changing ratio with regards to time. When the core frequency is constant, this event can approximate elapsed time while the core was not in the halt state. It is counted on a dedicated fixed counter, leaving the four (eight when Hyperthreading is disabled) programmable counters available for other events",
	"Encoding": "cpu/event=0x3c,period=0x1e8483/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "cpu_clk_unhalted.thread_any",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Core cycles when at least one thread on the physical core is not in halt state",
	"PublicDescription": "Core cycles when at least one thread on the physical core is not in halt state",
	"Encoding": "cpu/event=0x3c,any=0x1,period=0x1e8483/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "cpu_clk_unhalted.thread_p",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Thread cycles when thread is not in halt state",
	"PublicDescription": "This is an architectural event that counts the number of thread cycles while the thread is not in a halt state. The thread enters the halt state when it is running the HLT instruction. The core frequency may change from time to time due to power or thermal throttling. For this reason, this event may have a changing ratio with regards to wall clock time",
	"Encoding": "cpu/event=0x3c,period=0x1e8483/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "cpu_clk_unhalted.thread_p_any",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Core cycles when at least one thread on the physical core is not in halt state",
	"PublicDescription": "Core cycles when at least one thread on the physical core is not in halt state",
	"Encoding": "cpu/event=0x3c,any=0x1,period=0x1e8483/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "cycle_activity.cycles_l1d_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles while L1 cache miss demand load is outstanding",
	"PublicDescription": "Cycles while L1 cache miss demand load is outstanding",
	"Encoding": "cpu/event=0xa3,cmask=0x8,period=0x1e8483,umask=0x8/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "cycle_activity.cycles_l2_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles while L2 cache miss demand load is outstanding",
	"PublicDescription": "Cycles while L2 cache miss demand load is outstanding",
	"Encoding": "cpu/event=0xa3,cmask=0x1,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "cycle_activity.cycles_mem_any",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles while memory subsystem has an outstanding load",
	"PublicDescription": "Cycles while memory subsystem has an outstanding load",
	"Encoding": "cpu/event=0xa3,cmask=0x10,period=0x1e8483,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "cycle_activity.stalls_l1d_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Execution stalls while L1 cache miss demand load is outstanding",
	"PublicDescription": "Execution stalls while L1 cache miss demand load is outstanding",
	"Encoding": "cpu/event=0xa3,cmask=0xc,period=0x1e8483,umask=0xc/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "cycle_activity.stalls_l2_miss",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Execution stalls while L2 cache miss demand load is outstanding",
	"PublicDescription": "Execution stalls while L2 cache miss demand load is outstanding",
	"Encoding": "cpu/event=0xa3,cmask=0x5,period=0x1e8483,umask=0x5/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "cycle_activity.stalls_mem_any",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Execution stalls while memory subsystem has an outstanding load",
	"PublicDescription": "Execution stalls while memory subsystem has an outstanding load",
	"Encoding": "cpu/event=0xa3,cmask=0x14,period=0x1e8483,umask=0x14/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "cycle_activity.stalls_total",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Total execution stalls",
	"PublicDescription": "Total execution stalls",
	"Encoding": "cpu/event=0xa3,cmask=0x4,period=0x1e8483,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "exe_activity.1_ports_util",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles total of 1 uop is executed on all ports and Reservation Station was not empty",
	"PublicDescription": "Counts cycles during which a total of 1 uop was executed on all ports and Reservation Station (RS) was not empty",
	"Encoding": "cpu/event=0xa6,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "exe_activity.2_ports_util",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles total of 2 uops are executed on all ports and Reservation Station was not empty",
	"PublicDescription": "Counts cycles during which a total of 2 uops were executed on all ports and Reservation Station (RS) was not empty",
	"Encoding": "cpu/event=0xa6,period=0x1e8483,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "exe_activity.3_ports_util",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles total of 3 uops are executed on all ports and Reservation Station was not empty",
	"PublicDescription": "Cycles total of 3 uops are executed on all ports and Reservation Station (RS) was not empty",
	"Encoding": "cpu/event=0xa6,period=0x1e8483,umask=0x8/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "exe_activity.4_ports_util",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles total of 4 uops are executed on all ports and Reservation Station was not empty",
	"PublicDescription": "Cycles total of 4 uops are executed on all ports and Reservation Station (RS) was not empty",
	"Encoding": "cpu/event=0xa6,period=0x1e8483,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "exe_activity.bound_on_stores",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles where the Store Buffer was full and no outstanding load",
	"PublicDescription": "Cycles where the Store Buffer was full and no outstanding load",
	"Encoding": "cpu/event=0xa6,period=0x1e8483,umask=0x40/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "exe_activity.exe_bound_0_ports",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles where no uops were executed, the Reservation Station was not empty, the Store Buffer was full and there was no outstanding load",
	"PublicDescription": "Counts cycles during which no uops were executed on all ports and Reservation Station (RS) was not empty",
	"Encoding": "cpu/event=0xa6,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "ild_stall.lcp",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Stalls caused by changing prefix length of the instruction. [This event is alias to DECODE.LCP]",
	"PublicDescription": "Counts cycles that the Instruction Length decoder (ILD) stalls occurred due to dynamically changing prefix length of the decoded instruction (by operand size prefix instruction 0x66, address size prefix instruction 0x67 or REX.W for Intel64). Count is proportional to the number of prefixes in a 16B-line. This may result in a three-cycle penalty for each LCP (Length changing prefix) in a 16-byte chunk. [This event is alias to DECODE.LCP]",
	"Encoding": "cpu/event=0x87,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "inst_decoded.decoders",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Instruction decoders utilized in a cycle",
	"PublicDescription": "Number of decoders utilized in a cycle when the MITE (legacy decode pipeline) fetches instructions",
	"Encoding": "cpu/event=0x55,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "inst_retired.any",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Instructions retired from execution",
	"PublicDescription": "Counts the number of instructions retired from execution. For instructions that consist of multiple micro-ops, Counts the retirement of the last micro-op of the instruction. Counting continues during hardware interrupts, traps, and inside interrupt handlers. Notes: INST_RETIRED.ANY is counted by a designated fixed counter, leaving the four (eight when Hyperthreading is disabled) programmable counters available for other events. INST_RETIRED.ANY_P is counted by a programmable counter and it is an architectural performance event. Counting: Faulting executions of GETSEC/VM entry/VM Exit/MWait will not count as retired instructions",
	"Encoding": "cpu/event=0xc0,period=0x1e8483/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "inst_retired.any_p",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of instructions retired. General Counter - architectural event  Spec update: SKL091, SKL044",
	"PublicDescription": "Counts the number of instructions (EOMs) retired. Counting covers macro-fused instructions individually (that is, increments by two)  Spec update: SKL091, SKL044",
	"Encoding": "cpu/event=0xc0,period=0x1e8483/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "inst_retired.nop",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of all retired NOP instructions  Spec update: SKL091, SKL044 (Precise event)",
	"PublicDescription": "Number of all retired NOP instructions  Spec update: SKL091, SKL044 (Precise event)",
	"Encoding": "cpu/event=0xc0,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "inst_retired.prec_dist",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Precise instruction retired event with HW to reduce effect of PEBS shadow in IP distribution  Spec update: SKL091, SKL044 (Must be precise)",
	"PublicDescription": "A version of INST_RETIRED that allows for a more unbiased distribution of samples across instructions retired. It utilizes the Precise Distribution of Instructions Retired (PDIR) feature to mitigate some bias in how retired instructions get sampled  Spec update: SKL091, SKL044 (Must be precise)",
	"Encoding": "cpu/event=0xc0,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "inst_retired.total_cycles_ps",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of cycles using always true condition applied to  PEBS instructions retired event  Spec update: SKL091, SKL044 (Must be precise)",
	"PublicDescription": "Number of cycles using an always true condition applied to  PEBS instructions retired event. (inst_ret< 16)  Spec update: SKL091, SKL044 (Must be precise)",
	"Encoding": "cpu/event=0xc0,cmask=0xa,inv=0x1,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "int_misc.clear_resteer_cycles",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles the issue-stage is waiting for front-end to fetch from resteered path following branch misprediction or machine clear events",
	"PublicDescription": "Cycles the issue-stage is waiting for front-end to fetch from resteered path following branch misprediction or machine clear events",
	"Encoding": "cpu/event=0xd,period=0x1e8483,umask=0x80/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "int_misc.clears_count",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Clears speculative count",
	"PublicDescription": "Counts the number of speculative clears due to any type of branch misprediction or machine clears",
	"Encoding": "cpu/event=0xd,cmask=0x1,edge=0x1,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "int_misc.recovery_cycles",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Core cycles the allocator was stalled due to recovery from earlier clear event for this thread (e.g. misprediction or memory nuke)",
	"PublicDescription": "Core cycles the Resource allocator was stalled due to recovery from an earlier branch misprediction or machine clear event",
	"Encoding": "cpu/event=0xd,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "int_misc.recovery_cycles_any",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Core cycles the allocator was stalled due to recovery from earlier clear event for any thread running on the physical core (e.g. misprediction or memory nuke)",
	"PublicDescription": "Core cycles the allocator was stalled due to recovery from earlier clear event for any thread running on the physical core (e.g. misprediction or memory nuke)",
	"Encoding": "cpu/event=0xd,any=0x1,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "ld_blocks.no_sr",
	"EventType": "Kernel PMU event",
	"BriefDescription": "The number of times that split load operations are temporarily blocked because all resources for handling the split accesses are in use",
	"PublicDescription": "The number of times that split load operations are temporarily blocked because all resources for handling the split accesses are in use",
	"Encoding": "cpu/event=0x3,period=0x186a3,umask=0x8/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "ld_blocks.store_forward",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Loads blocked due to overlapping with a preceding store that cannot be forwarded",
	"PublicDescription": "Counts the number of times where store forwarding was prevented for a load operation. The most common case is a load blocked due to the address of memory access (partially) overlapping with a preceding uncompleted store. Note: See the table of not supported store forwards in the Optimization Guide",
	"Encoding": "cpu/event=0x3,period=0x186a3,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "ld_blocks_partial.address_alias",
	"EventType": "Kernel PMU event",
	"BriefDescription": "False dependencies in MOB due to partial compare on address",
	"PublicDescription": "Counts false dependencies in MOB when the partial comparison upon loose net check and dependency was resolved by the Enhanced Loose net mechanism. This may not result in high performance penalties. Loose net checks can fail when loads and stores are 4k aliased",
	"Encoding": "cpu/event=0x7,period=0x186a3,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "load_hit_pre.sw_pf",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Demand load dispatches that hit L1D fill buffer (FB) allocated for software prefetch",
	"PublicDescription": "Counts all not software-prefetch load dispatches that hit the fill buffer (FB) allocated for the software prefetch. It can also be incremented by some lock instructions. So it should only be used with profiling so that the locks can be excluded by ASM (Assembly File) inspection of the nearby instructions",
	"Encoding": "cpu/event=0x4c,period=0x186a3,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "lsd.cycles_4_uops",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles 4 Uops delivered by the LSD, but didn't come from the decoder. [This event is alias to LSD.CYCLES_OK]",
	"PublicDescription": "Counts the cycles when 4 uops are delivered by the LSD (Loop-stream detector). [This event is alias to LSD.CYCLES_OK]",
	"Encoding": "cpu/event=0xa8,cmask=0x4,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "lsd.cycles_active",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles Uops delivered by the LSD, but didn't come from the decoder",
	"PublicDescription": "Counts the cycles when at least one uop is delivered by the LSD (Loop-stream detector)",
	"Encoding": "cpu/event=0xa8,cmask=0x1,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "lsd.cycles_ok",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles 4 Uops delivered by the LSD, but didn't come from the decoder. [This event is alias to LSD.CYCLES_4_UOPS]",
	"PublicDescription": "Counts the cycles when 4 uops are delivered by the LSD (Loop-stream detector). [This event is alias to LSD.CYCLES_4_UOPS]",
	"Encoding": "cpu/event=0xa8,cmask=0x4,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "lsd.uops",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of Uops delivered by the LSD",
	"PublicDescription": "Number of uops delivered to the back-end by the LSD(Loop Stream Detector)",
	"Encoding": "cpu/event=0xa8,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "machine_clears.count",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of machine clears (nukes) of any type",
	"PublicDescription": "Number of machine clears (nukes) of any type",
	"Encoding": "cpu/event=0xc3,cmask=0x1,edge=0x1,period=0x186a3,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "machine_clears.smc",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Self-modifying code (SMC) detected",
	"PublicDescription": "Counts self-modifying code (SMC) detected, which causes a machine clear",
	"Encoding": "cpu/event=0xc3,period=0x186a3,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "other_assists.any",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of times a microcode assist is invoked by HW other than FP-assist. Examples include AD (page Access Dirty) and AVX* related assists",
	"PublicDescription": "Number of times a microcode assist is invoked by HW other than FP-assist. Examples include AD (page Access Dirty) and AVX* related assists",
	"Encoding": "cpu/event=0xc1,period=0x186a3,umask=0x3f/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "partial_rat_stalls.scoreboard",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles where the pipeline is stalled due to serializing operations",
	"PublicDescription": "This event counts cycles during which the microcode scoreboard stalls happen",
	"Encoding": "cpu/event=0x59,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "resource_stalls.any",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Resource-related stall cycles",
	"PublicDescription": "Counts resource-related stall cycles",
	"Encoding": "cpu/event=0xa2,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "resource_stalls.sb",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles stalled due to no store buffers available. (not including draining form sync)",
	"PublicDescription": "Counts allocation stall cycles caused by the store buffer (SB) being full. This counts cycles that the pipeline back-end blocked uop delivery from the front-end",
	"Encoding": "cpu/event=0xa2,period=0x1e8483,umask=0x8/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "rob_misc_events.lbr_inserts",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Increments whenever there is an update to the LBR array",
	"PublicDescription": "Increments when an entry is added to the Last Branch Record (LBR) array (or removed from the array in case of RETURNs in call stack mode). The event requires LBR enable via IA32_DEBUGCTL MSR and branch type selection via MSR_LBR_SELECT",
	"Encoding": "cpu/event=0xcc,period=0x1e8483,umask=0x20/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "rob_misc_events.pause_inst",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of retired PAUSE instructions (that do not end up with a VMExit to the VMM; TSX aborted Instructions may be counted). This event is not supported on first SKL and KBL products",
	"PublicDescription": "Number of retired PAUSE instructions (that do not end up with a VMExit to the VMM; TSX aborted Instructions may be counted). This event is not supported on first SKL and KBL products",
	"Encoding": "cpu/event=0xcc,period=0x1e8483,umask=0x40/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "rs_events.empty_cycles",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles when Reservation Station (RS) is empty for the thread",
	"PublicDescription": "Counts cycles during which the reservation station (RS) is empty for the thread.; Note: In ST-mode, not active thread should drive 0. This is usually caused by severely costly branch mispredictions, or allocator/FE issues",
	"Encoding": "cpu/event=0x5e,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "rs_events.empty_end",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts end of periods where the Reservation Station (RS) was empty. Could be useful to precisely locate Frontend Latency Bound issues",
	"PublicDescription": "Counts end of periods where the Reservation Station (RS) was empty. Could be useful to precisely locate front-end Latency Bound issues",
	"Encoding": "cpu/event=0x5e,cmask=0x1,edge=0x1,inv=0x1,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_dispatched_port.port_0",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles per thread when uops are executed in port 0",
	"PublicDescription": "Counts, on the per-thread basis, cycles during which at least one uop is dispatched from the Reservation Station (RS) to port 0",
	"Encoding": "cpu/event=0xa1,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_dispatched_port.port_1",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles per thread when uops are executed in port 1",
	"PublicDescription": "Counts, on the per-thread basis, cycles during which at least one uop is dispatched from the Reservation Station (RS) to port 1",
	"Encoding": "cpu/event=0xa1,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_dispatched_port.port_2",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles per thread when uops are executed in port 2",
	"PublicDescription": "Counts, on the per-thread basis, cycles during which at least one uop is dispatched from the Reservation Station (RS) to port 2",
	"Encoding": "cpu/event=0xa1,period=0x1e8483,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_dispatched_port.port_3",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles per thread when uops are executed in port 3",
	"PublicDescription": "Counts, on the per-thread basis, cycles during which at least one uop is dispatched from the Reservation Station (RS) to port 3",
	"Encoding": "cpu/event=0xa1,period=0x1e8483,umask=0x8/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_dispatched_port.port_4",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles per thread when uops are executed in port 4",
	"PublicDescription": "Counts, on the per-thread basis, cycles during which at least one uop is dispatched from the Reservation Station (RS) to port 4",
	"Encoding": "cpu/event=0xa1,period=0x1e8483,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_dispatched_port.port_5",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles per thread when uops are executed in port 5",
	"PublicDescription": "Counts, on the per-thread basis, cycles during which at least one uop is dispatched from the Reservation Station (RS) to port 5",
	"Encoding": "cpu/event=0xa1,period=0x1e8483,umask=0x20/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_dispatched_port.port_6",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles per thread when uops are executed in port 6",
	"PublicDescription": "Counts, on the per-thread basis, cycles during which at least one uop is dispatched from the Reservation Station (RS) to port 6",
	"Encoding": "cpu/event=0xa1,period=0x1e8483,umask=0x40/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_dispatched_port.port_7",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles per thread when uops are executed in port 7",
	"PublicDescription": "Counts, on the per-thread basis, cycles during which at least one uop is dispatched from the Reservation Station (RS) to port 7",
	"Encoding": "cpu/event=0xa1,period=0x1e8483,umask=0x80/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_executed.core",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of uops executed on the core",
	"PublicDescription": "Number of uops executed from any thread",
	"Encoding": "cpu/event=0xb1,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_executed.core_cycles_ge_1",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles at least 1 micro-op is executed from any thread on physical core",
	"PublicDescription": "Cycles at least 1 micro-op is executed from any thread on physical core",
	"Encoding": "cpu/event=0xb1,cmask=0x1,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_executed.core_cycles_ge_2",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles at least 2 micro-op is executed from any thread on physical core",
	"PublicDescription": "Cycles at least 2 micro-op is executed from any thread on physical core",
	"Encoding": "cpu/event=0xb1,cmask=0x2,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_executed.core_cycles_ge_3",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles at least 3 micro-op is executed from any thread on physical core",
	"PublicDescription": "Cycles at least 3 micro-op is executed from any thread on physical core",
	"Encoding": "cpu/event=0xb1,cmask=0x3,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_executed.core_cycles_ge_4",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles at least 4 micro-op is executed from any thread on physical core",
	"PublicDescription": "Cycles at least 4 micro-op is executed from any thread on physical core",
	"Encoding": "cpu/event=0xb1,cmask=0x4,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_executed.core_cycles_none",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles with no micro-ops executed from any thread on physical core",
	"PublicDescription": "Cycles with no micro-ops executed from any thread on physical core",
	"Encoding": "cpu/event=0xb1,cmask=0x1,inv=0x1,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_executed.cycles_ge_1_uop_exec",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles where at least 1 uop was executed per-thread",
	"PublicDescription": "Cycles where at least 1 uop was executed per-thread",
	"Encoding": "cpu/event=0xb1,cmask=0x1,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_executed.cycles_ge_2_uops_exec",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles where at least 2 uops were executed per-thread",
	"PublicDescription": "Cycles where at least 2 uops were executed per-thread",
	"Encoding": "cpu/event=0xb1,cmask=0x2,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_executed.cycles_ge_3_uops_exec",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles where at least 3 uops were executed per-thread",
	"PublicDescription": "Cycles where at least 3 uops were executed per-thread",
	"Encoding": "cpu/event=0xb1,cmask=0x3,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_executed.cycles_ge_4_uops_exec",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles where at least 4 uops were executed per-thread",
	"PublicDescription": "Cycles where at least 4 uops were executed per-thread",
	"Encoding": "cpu/event=0xb1,cmask=0x4,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_executed.stall_cycles",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts number of cycles no uops were dispatched to be executed on this thread",
	"PublicDescription": "Counts cycles during which no uops were dispatched from the Reservation Station (RS) per thread",
	"Encoding": "cpu/event=0xb1,cmask=0x1,inv=0x1,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_executed.thread",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts the number of uops to be executed per-thread each cycle",
	"PublicDescription": "Number of uops to be executed per-thread each cycle",
	"Encoding": "cpu/event=0xb1,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_executed.x87",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts the number of x87 uops dispatched",
	"PublicDescription": "Counts the number of x87 uops executed",
	"Encoding": "cpu/event=0xb1,period=0x1e8483,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_issued.any",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Uops that Resource Allocation Table (RAT) issues to Reservation Station (RS)",
	"PublicDescription": "Counts the number of uops that the Resource Allocation Table (RAT) issues to the Reservation Station (RS)",
	"Encoding": "cpu/event=0xe,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_issued.slow_lea",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of slow LEA uops being allocated. A uop is generally considered SlowLea if it has 3 sources (e.g. 2 sources + immediate) regardless if as a result of LEA instruction or not",
	"PublicDescription": "Number of slow LEA uops being allocated. A uop is generally considered SlowLea if it has 3 sources (e.g. 2 sources + immediate) regardless if as a result of LEA instruction or not",
	"Encoding": "cpu/event=0xe,period=0x1e8483,umask=0x20/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_issued.stall_cycles",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles when Resource Allocation Table (RAT) does not issue Uops to Reservation Station (RS) for the thread",
	"PublicDescription": "Counts cycles during which the Resource Allocation Table (RAT) does not issue any Uops to the reservation station (RS) for the current thread",
	"Encoding": "cpu/event=0xe,cmask=0x1,inv=0x1,period=0x1e8483,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_issued.vector_width_mismatch",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Uops inserted at issue-stage in order to preserve upper bits of vector registers",
	"PublicDescription": "Counts the number of Blend Uops issued by the Resource Allocation Table (RAT) to the reservation station (RS) in order to preserve upper bits of vector registers. Starting with the Skylake microarchitecture, these Blend uops are needed since every Intel SSE instruction executed in Dirty Upper State needs to preserve bits 128-255 of the destination register. For more information, refer to Mixing Intel AVX and Intel SSE Code section of the Optimization Guide",
	"Encoding": "cpu/event=0xe,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_retired.macro_fused",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of macro-fused uops retired. (non precise)",
	"PublicDescription": "Counts the number of macro-fused uops retired. (non precise)",
	"Encoding": "cpu/event=0xc2,period=0x1e8483,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_retired.retire_slots",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Retirement slots used",
	"PublicDescription": "Counts the retirement slots used",
	"Encoding": "cpu/event=0xc2,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_retired.stall_cycles",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles without actually retired uops",
	"PublicDescription": "This event counts cycles without actually retired uops",
	"Encoding": "cpu/event=0xc2,cmask=0x1,inv=0x1,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "pipeline",
	"EventName": "uops_retired.total_cycles",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles with less than 10 actually retired uops",
	"PublicDescription": "Number of cycles using always true condition (uops_ret < 16) applied to non PEBS uops retired event",
	"Encoding": "cpu/event=0xc2,cmask=0x10,inv=0x1,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "uncore_cbox",
	"Topic": "uncore cache",
	"EventName": "unc_cbo_cache_lookup.any_es",
	"EventType": "Kernel PMU event",
	"BriefDescription": "L3 Lookup any request that access cache and found line in E or S-state. Unit: uncore_cbox ",
	"PublicDescription": "L3 Lookup any request that access cache and found line in E or S-state",
	"Encoding": "uncore_cbox/event=0x34,umask=0x86/"
},
{
	"Unit": "uncore_cbox",
	"Topic": "uncore cache",
	"EventName": "unc_cbo_cache_lookup.any_i",
	"EventType": "Kernel PMU event",
	"BriefDescription": "L3 Lookup any request that access cache and found line in I-state. Unit: uncore_cbox ",
	"PublicDescription": "L3 Lookup any request that access cache and found line in I-state",
	"Encoding": "uncore_cbox/event=0x34,umask=0x88/"
},
{
	"Unit": "uncore_cbox",
	"Topic": "uncore cache",
	"EventName": "unc_cbo_cache_lookup.any_m",
	"EventType": "Kernel PMU event",
	"BriefDescription": "L3 Lookup any request that access cache and found line in M-state. Unit: uncore_cbox ",
	"PublicDescription": "L3 Lookup any request that access cache and found line in M-state",
	"Encoding": "uncore_cbox/event=0x34,umask=0x81/"
},
{
	"Unit": "uncore_cbox",
	"Topic": "uncore cache",
	"EventName": "unc_cbo_cache_lookup.any_mesi",
	"EventType": "Kernel PMU event",
	"BriefDescription": "L3 Lookup any request that access cache and found line in MESI-state. Unit: uncore_cbox ",
	"PublicDescription": "L3 Lookup any request that access cache and found line in MESI-state",
	"Encoding": "uncore_cbox/event=0x34,umask=0x8f/"
},
{
	"Unit": "uncore_cbox",
	"Topic": "uncore cache",
	"EventName": "unc_cbo_cache_lookup.read_es",
	"EventType": "Kernel PMU event",
	"BriefDescription": "L3 Lookup read request that access cache and found line in E or S-state. Unit: uncore_cbox ",
	"PublicDescription": "L3 Lookup read request that access cache and found line in E or S-state",
	"Encoding": "uncore_cbox/event=0x34,umask=0x16/"
},
{
	"Unit": "uncore_cbox",
	"Topic": "uncore cache",
	"EventName": "unc_cbo_cache_lookup.read_i",
	"EventType": "Kernel PMU event",
	"BriefDescription": "L3 Lookup read request that access cache and found line in I-state. Unit: uncore_cbox ",
	"PublicDescription": "L3 Lookup read request that access cache and found line in I-state",
	"Encoding": "uncore_cbox/event=0x34,umask=0x18/"
},
{
	"Unit": "uncore_cbox",
	"Topic": "uncore cache",
	"EventName": "unc_cbo_cache_lookup.read_mesi",
	"EventType": "Kernel PMU event",
	"BriefDescription": "L3 Lookup read request that access cache and found line in any MESI-state. Unit: uncore_cbox ",
	"PublicDescription": "L3 Lookup read request that access cache and found line in any MESI-state",
	"Encoding": "uncore_cbox/event=0x34,umask=0x1f/"
},
{
	"Unit": "uncore_cbox",
	"Topic": "uncore cache",
	"EventName": "unc_cbo_cache_lookup.write_es",
	"EventType": "Kernel PMU event",
	"BriefDescription": "L3 Lookup write request that access cache and found line in E or S-state. Unit: uncore_cbox ",
	"PublicDescription": "L3 Lookup write request that access cache and found line in E or S-state",
	"Encoding": "uncore_cbox/event=0x34,umask=0x26/"
},
{
	"Unit": "uncore_cbox",
	"Topic": "uncore cache",
	"EventName": "unc_cbo_cache_lookup.write_m",
	"EventType": "Kernel PMU event",
	"BriefDescription": "L3 Lookup write request that access cache and found line in M-state. Unit: uncore_cbox ",
	"PublicDescription": "L3 Lookup write request that access cache and found line in M-state",
	"Encoding": "uncore_cbox/event=0x34,umask=0x21/"
},
{
	"Unit": "uncore_cbox",
	"Topic": "uncore cache",
	"EventName": "unc_cbo_cache_lookup.write_mesi",
	"EventType": "Kernel PMU event",
	"BriefDescription": "L3 Lookup write request that access cache and found line in MESI-state. Unit: uncore_cbox ",
	"PublicDescription": "L3 Lookup write request that access cache and found line in MESI-state",
	"Encoding": "uncore_cbox/event=0x34,umask=0x2f/"
},
{
	"Unit": "uncore_cbox",
	"Topic": "uncore cache",
	"EventName": "unc_cbo_xsnp_response.hit_xcore",
	"EventType": "Kernel PMU event",
	"BriefDescription": "A cross-core snoop initiated by this Cbox due to processor core memory request which hits a non-modified line in some processor core. Unit: uncore_cbox ",
	"PublicDescription": "A cross-core snoop initiated by this Cbox due to processor core memory request which hits a non-modified line in some processor core. Unit: uncore_cbox ",
	"Encoding": "uncore_cbox/event=0x22,umask=0x44/"
},
{
	"Unit": "uncore_cbox",
	"Topic": "uncore cache",
	"EventName": "unc_cbo_xsnp_response.hitm_xcore",
	"EventType": "Kernel PMU event",
	"BriefDescription": "A cross-core snoop initiated by this Cbox due to processor core memory request which hits a modified line in some processor core. Unit: uncore_cbox ",
	"PublicDescription": "A cross-core snoop initiated by this Cbox due to processor core memory request which hits a modified line in some processor core. Unit: uncore_cbox ",
	"Encoding": "uncore_cbox/event=0x22,umask=0x48/"
},
{
	"Unit": "uncore_cbox",
	"Topic": "uncore cache",
	"EventName": "unc_cbo_xsnp_response.miss_eviction",
	"EventType": "Kernel PMU event",
	"BriefDescription": "A cross-core snoop resulted from L3 Eviction which misses in some processor core. Unit: uncore_cbox ",
	"PublicDescription": "A cross-core snoop resulted from L3 Eviction which misses in some processor core. Unit: uncore_cbox ",
	"Encoding": "uncore_cbox/event=0x22,umask=0x81/"
},
{
	"Unit": "uncore_cbox",
	"Topic": "uncore cache",
	"EventName": "unc_cbo_xsnp_response.miss_xcore",
	"EventType": "Kernel PMU event",
	"BriefDescription": "A cross-core snoop initiated by this Cbox due to processor core memory request which misses in some processor core. Unit: uncore_cbox ",
	"PublicDescription": "A cross-core snoop initiated by this Cbox due to processor core memory request which misses in some processor core. Unit: uncore_cbox ",
	"Encoding": "uncore_cbox/event=0x22,umask=0x41/"
},
{
	"Unit": "uncore_arb",
	"Topic": "uncore interconnect",
	"EventName": "unc_arb_coh_trk_requests.all",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of entries allocated. Account for Any type: e.g. Snoop, Core aperture, etc. Unit: uncore_arb ",
	"PublicDescription": "Number of entries allocated. Account for Any type: e.g. Snoop, Core aperture, etc. Unit: uncore_arb ",
	"Encoding": "uncore_arb/event=0x84,umask=0x1/"
},
{
	"Unit": "uncore_arb",
	"Topic": "uncore interconnect",
	"EventName": "unc_arb_trk_occupancy.all",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of all Core entries outstanding for the memory controller. The outstanding interval starts after LLC miss till return of first data chunk. Accounts for Coherent and non-coherent traffic. Unit: uncore_arb ",
	"PublicDescription": "Number of all Core entries outstanding for the memory controller. The outstanding interval starts after LLC miss till return of first data chunk. Accounts for Coherent and non-coherent traffic. Unit: uncore_arb ",
	"Encoding": "uncore_arb/event=0x80,umask=0x1/"
},
{
	"Unit": "uncore_arb",
	"Topic": "uncore interconnect",
	"EventName": "unc_arb_trk_occupancy.cycles_with_any_request",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles with at least one request outstanding is waiting for data return from memory controller. Account for coherent and non-coherent requests initiated by IA Cores, Processor Graphics Unit, or LLC. Unit: uncore_arb ",
	"PublicDescription": "Cycles with at least one request outstanding is waiting for data return from memory controller. Account for coherent and non-coherent requests initiated by IA Cores, Processor Graphics Unit, or LLC. Unit: uncore_arb ",
	"Encoding": "uncore_arb/event=0x80,cmask=0x1,umask=0x1/"
},
{
	"Unit": "uncore_arb",
	"Topic": "uncore interconnect",
	"EventName": "unc_arb_trk_occupancy.data_read",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of Core Data Read entries outstanding for the memory controller. The outstanding interval starts after LLC miss till return of first data chunk. Unit: uncore_arb ",
	"PublicDescription": "Number of Core Data Read entries outstanding for the memory controller. The outstanding interval starts after LLC miss till return of first data chunk. Unit: uncore_arb ",
	"Encoding": "uncore_arb/event=0x80,umask=0x2/"
},
{
	"Unit": "uncore_arb",
	"Topic": "uncore interconnect",
	"EventName": "unc_arb_trk_requests.all",
	"EventType": "Kernel PMU event",
	"BriefDescription": "UNC_ARB_TRK_REQUESTS.ALL. Unit: uncore_arb ",
	"PublicDescription": "UNC_ARB_TRK_REQUESTS.ALL. Unit: uncore_arb ",
	"Encoding": "uncore_arb/event=0x81,umask=0x1/"
},
{
	"Unit": "uncore_arb",
	"Topic": "uncore interconnect",
	"EventName": "unc_arb_trk_requests.data_read",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of Core coherent Data Read requests sent to memory controller whose data is returned directly to requesting agent. Unit: uncore_arb ",
	"PublicDescription": "Number of Core coherent Data Read requests sent to memory controller whose data is returned directly to requesting agent. Unit: uncore_arb ",
	"Encoding": "uncore_arb/event=0x81,umask=0x2/"
},
{
	"Unit": "uncore_arb",
	"Topic": "uncore interconnect",
	"EventName": "unc_arb_trk_requests.drd_direct",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of Core coherent Data Read requests sent to memory controller whose data is returned directly to requesting agent. Unit: uncore_arb ",
	"PublicDescription": "Number of Core coherent Data Read requests sent to memory controller whose data is returned directly to requesting agent. Unit: uncore_arb ",
	"Encoding": "uncore_arb/event=0x81,umask=0x2/"
},
{
	"Unit": "uncore_arb",
	"Topic": "uncore interconnect",
	"EventName": "unc_arb_trk_requests.writes",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Number of Writes allocated - any write transactions: full/partials writes and evictions. Unit: uncore_arb ",
	"PublicDescription": "Number of Writes allocated - any write transactions: full/partials writes and evictions. Unit: uncore_arb ",
	"Encoding": "uncore_arb/event=0x81,umask=0x20/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "dtlb_load_misses.miss_causes_a_walk",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Load misses in all DTLB levels that cause page walks",
	"PublicDescription": "Counts demand data loads that caused a page walk of any page size (4K/2M/4M/1G). This implies it missed in all TLB levels, but the walk need not have completed",
	"Encoding": "cpu/event=0x8,period=0x186a3,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "dtlb_load_misses.stlb_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Loads that miss the DTLB and hit the STLB",
	"PublicDescription": "Counts loads that miss the DTLB (Data TLB) and hit the STLB (Second level TLB)",
	"Encoding": "cpu/event=0x8,period=0x1e8483,umask=0x20/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "dtlb_load_misses.walk_active",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles when at least one PMH is busy with a page walk for a load. EPT page walk duration are excluded in Skylake",
	"PublicDescription": "Counts cycles when at least one PMH (Page Miss Handler) is busy with a page walk for a load",
	"Encoding": "cpu/event=0x8,cmask=0x1,period=0x186a3,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "dtlb_load_misses.walk_completed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Load miss in all TLB levels causes a page walk that completes. (All page sizes)",
	"PublicDescription": "Counts completed page walks  (all page sizes) caused by demand data loads. This implies it missed in the DTLB and further levels of TLB. The page walk can end with or without a fault",
	"Encoding": "cpu/event=0x8,period=0x186a3,umask=0xe/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "dtlb_load_misses.walk_completed_1g",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Page walk completed due to a demand data load to a 1G page",
	"PublicDescription": "Counts completed page walks  (1G sizes) caused by demand data loads. This implies address translations missed in the DTLB and further levels of TLB. The page walk can end with or without a fault",
	"Encoding": "cpu/event=0x8,period=0x1e8483,umask=0x8/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "dtlb_load_misses.walk_completed_2m_4m",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Page walk completed due to a demand data load to a 2M/4M page",
	"PublicDescription": "Counts completed page walks  (2M/4M sizes) caused by demand data loads. This implies address translations missed in the DTLB and further levels of TLB. The page walk can end with or without a fault",
	"Encoding": "cpu/event=0x8,period=0x1e8483,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "dtlb_load_misses.walk_completed_4k",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Page walk completed due to a demand data load to a 4K page",
	"PublicDescription": "Counts completed page walks  (4K sizes) caused by demand data loads. This implies address translations missed in the DTLB and further levels of TLB. The page walk can end with or without a fault",
	"Encoding": "cpu/event=0x8,period=0x1e8483,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "dtlb_load_misses.walk_pending",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts 1 per cycle for each PMH that is busy with a page walk for a load. EPT page walk duration are excluded in Skylake",
	"PublicDescription": "Counts 1 per cycle for each PMH that is busy with a page walk for a load. EPT page walk duration are excluded in Skylake microarchitecture",
	"Encoding": "cpu/event=0x8,period=0x1e8483,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "dtlb_store_misses.miss_causes_a_walk",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Store misses in all DTLB levels that cause page walks",
	"PublicDescription": "Counts demand data stores that caused a page walk of any page size (4K/2M/4M/1G). This implies it missed in all TLB levels, but the walk need not have completed",
	"Encoding": "cpu/event=0x49,period=0x186a3,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "dtlb_store_misses.stlb_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Stores that miss the DTLB and hit the STLB",
	"PublicDescription": "Stores that miss the DTLB (Data TLB) and hit the STLB (2nd Level TLB)",
	"Encoding": "cpu/event=0x49,period=0x186a3,umask=0x20/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "dtlb_store_misses.walk_active",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles when at least one PMH is busy with a page walk for a store. EPT page walk duration are excluded in Skylake",
	"PublicDescription": "Counts cycles when at least one PMH (Page Miss Handler) is busy with a page walk for a store",
	"Encoding": "cpu/event=0x49,cmask=0x1,period=0x186a3,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "dtlb_store_misses.walk_completed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Store misses in all TLB levels causes a page walk that completes. (All page sizes)",
	"PublicDescription": "Counts completed page walks  (all page sizes) caused by demand data stores. This implies it missed in the DTLB and further levels of TLB. The page walk can end with or without a fault",
	"Encoding": "cpu/event=0x49,period=0x186a3,umask=0xe/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "dtlb_store_misses.walk_completed_1g",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Page walk completed due to a demand data store to a 1G page",
	"PublicDescription": "Counts completed page walks  (1G sizes) caused by demand data stores. This implies address translations missed in the DTLB and further levels of TLB. The page walk can end with or without a fault",
	"Encoding": "cpu/event=0x49,period=0x186a3,umask=0x8/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "dtlb_store_misses.walk_completed_2m_4m",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Page walk completed due to a demand data store to a 2M/4M page",
	"PublicDescription": "Counts completed page walks  (2M/4M sizes) caused by demand data stores. This implies address translations missed in the DTLB and further levels of TLB. The page walk can end with or without a fault",
	"Encoding": "cpu/event=0x49,period=0x186a3,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "dtlb_store_misses.walk_completed_4k",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Page walk completed due to a demand data store to a 4K page",
	"PublicDescription": "Counts completed page walks  (4K sizes) caused by demand data stores. This implies address translations missed in the DTLB and further levels of TLB. The page walk can end with or without a fault",
	"Encoding": "cpu/event=0x49,period=0x186a3,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "dtlb_store_misses.walk_pending",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts 1 per cycle for each PMH that is busy with a page walk for a store. EPT page walk duration are excluded in Skylake",
	"PublicDescription": "Counts 1 per cycle for each PMH that is busy with a page walk for a store. EPT page walk duration are excluded in Skylake microarchitecture",
	"Encoding": "cpu/event=0x49,period=0x1e8483,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "ept.walk_pending",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts 1 per cycle for each PMH that is busy with a EPT (Extended Page Table) walk for any request type",
	"PublicDescription": "Counts cycles for each PMH (Page Miss Handler) that is busy with an EPT (Extended Page Table) walk for any request type",
	"Encoding": "cpu/event=0x4f,period=0x1e8483,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "itlb.itlb_flush",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Flushing of the Instruction TLB (ITLB) pages, includes 4k/2M/4M pages",
	"PublicDescription": "Counts the number of flushes of the big or small ITLB pages. Counting include both TLB Flush (covering all sets) and TLB Set Clear (set-specific)",
	"Encoding": "cpu/event=0xae,period=0x186a7,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "itlb_misses.miss_causes_a_walk",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Misses at all ITLB levels that cause page walks",
	"PublicDescription": "Counts page walks of any page size (4K/2M/4M/1G) caused by a code fetch. This implies it missed in the ITLB and further levels of TLB, but the walk need not have completed",
	"Encoding": "cpu/event=0x85,period=0x186a3,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "itlb_misses.stlb_hit",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Instruction fetch requests that miss the ITLB and hit the STLB",
	"PublicDescription": "Instruction fetch requests that miss the ITLB and hit the STLB",
	"Encoding": "cpu/event=0x85,period=0x186a3,umask=0x20/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "itlb_misses.walk_active",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Cycles when at least one PMH is busy with a page walk for code (instruction fetch) request. EPT page walk duration are excluded in Skylake",
	"PublicDescription": "Cycles when at least one PMH is busy with a page walk for code (instruction fetch) request. EPT page walk duration are excluded in Skylake microarchitecture",
	"Encoding": "cpu/event=0x85,cmask=0x1,period=0x186a3,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "itlb_misses.walk_completed",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Code miss in all TLB levels causes a page walk that completes. (All page sizes)",
	"PublicDescription": "Counts completed page walks (all page sizes) caused by a code fetch. This implies it missed in the ITLB (Instruction TLB) and further levels of TLB. The page walk can end with or without a fault",
	"Encoding": "cpu/event=0x85,period=0x186a3,umask=0xe/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "itlb_misses.walk_completed_1g",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Code miss in all TLB levels causes a page walk that completes. (1G)",
	"PublicDescription": "Counts completed page walks (1G page sizes) caused by a code fetch. This implies it missed in the ITLB (Instruction TLB) and further levels of TLB. The page walk can end with or without a fault",
	"Encoding": "cpu/event=0x85,period=0x186a3,umask=0x8/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "itlb_misses.walk_completed_2m_4m",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Code miss in all TLB levels causes a page walk that completes. (2M/4M)",
	"PublicDescription": "Counts completed page walks (2M/4M page sizes) caused by a code fetch. This implies it missed in the ITLB (Instruction TLB) and further levels of TLB. The page walk can end with or without a fault",
	"Encoding": "cpu/event=0x85,period=0x186a3,umask=0x4/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "itlb_misses.walk_completed_4k",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Code miss in all TLB levels causes a page walk that completes. (4K)",
	"PublicDescription": "Counts completed page walks (4K page sizes) caused by a code fetch. This implies it missed in the ITLB (Instruction TLB) and further levels of TLB. The page walk can end with or without a fault",
	"Encoding": "cpu/event=0x85,period=0x186a3,umask=0x2/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "itlb_misses.walk_pending",
	"EventType": "Kernel PMU event",
	"BriefDescription": "Counts 1 per cycle for each PMH that is busy with a page walk for an instruction fetch request. EPT page walk duration are excluded in Skylake",
	"PublicDescription": "Counts 1 per cycle for each PMH (Page Miss Handler) that is busy with a page walk for an instruction fetch request. EPT page walk duration are excluded in Skylake michroarchitecture",
	"Encoding": "cpu/event=0x85,period=0x186a3,umask=0x10/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "tlb_flush.dtlb_thread",
	"EventType": "Kernel PMU event",
	"BriefDescription": "DTLB flush attempts of the thread-specific entries",
	"PublicDescription": "Counts the number of DTLB flush attempts of the thread-specific entries",
	"Encoding": "cpu/event=0xbd,period=0x186a7,umask=0x1/"
},
{
	"Unit": "cpu",
	"Topic": "virtual memory",
	"EventName": "tlb_flush.stlb_any",
	"EventType": "Kernel PMU event",
	"BriefDescription": "STLB flush attempts",
	"PublicDescription": "Counts the number of any STLB flush attempts (such as entire, VPID, PCID, InvPage, CR3 write, etc.)",
	"Encoding": "cpu/event=0xbd,period=0x186a7,umask=0x20/"
},
{
	"EventName": "rNNN",
	"EventType": "Raw hardware event descriptor"
},
{
	"EventName": "cpu/t1=v1[,t2=v2,t3 ...]/modifier",
	"EventType": "Raw hardware event descriptor",
	"BriefDescription": "(see 'man perf-list' on how to encode it)"
},
{
	"EventName": "mem:<addr>[/len][:access]",
	"EventType": "Hardware breakpoint"
},
{
	"EventName": "alarmtimer:alarmtimer_cancel",
	"EventType": "Tracepoint event"
},
{
	"EventName": "alarmtimer:alarmtimer_fired",
	"EventType": "Tracepoint event"
},
{
	"EventName": "alarmtimer:alarmtimer_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "alarmtimer:alarmtimer_suspend",
	"EventType": "Tracepoint event"
},
{
	"EventName": "amd_cpu:amd_pstate_perf",
	"EventType": "Tracepoint event"
},
{
	"EventName": "asoc:snd_soc_bias_level_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "asoc:snd_soc_bias_level_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "asoc:snd_soc_dapm_connected",
	"EventType": "Tracepoint event"
},
{
	"EventName": "asoc:snd_soc_dapm_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "asoc:snd_soc_dapm_path",
	"EventType": "Tracepoint event"
},
{
	"EventName": "asoc:snd_soc_dapm_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "asoc:snd_soc_dapm_walk_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "asoc:snd_soc_dapm_widget_event_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "asoc:snd_soc_dapm_widget_event_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "asoc:snd_soc_dapm_widget_power",
	"EventType": "Tracepoint event"
},
{
	"EventName": "asoc:snd_soc_jack_irq",
	"EventType": "Tracepoint event"
},
{
	"EventName": "asoc:snd_soc_jack_notify",
	"EventType": "Tracepoint event"
},
{
	"EventName": "asoc:snd_soc_jack_report",
	"EventType": "Tracepoint event"
},
{
	"EventName": "avc:selinux_audited",
	"EventType": "Tracepoint event"
},
{
	"EventName": "block:block_bio_backmerge",
	"EventType": "Tracepoint event"
},
{
	"EventName": "block:block_bio_bounce",
	"EventType": "Tracepoint event"
},
{
	"EventName": "block:block_bio_complete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "block:block_bio_frontmerge",
	"EventType": "Tracepoint event"
},
{
	"EventName": "block:block_bio_queue",
	"EventType": "Tracepoint event"
},
{
	"EventName": "block:block_bio_remap",
	"EventType": "Tracepoint event"
},
{
	"EventName": "block:block_dirty_buffer",
	"EventType": "Tracepoint event"
},
{
	"EventName": "block:block_getrq",
	"EventType": "Tracepoint event"
},
{
	"EventName": "block:block_io_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "block:block_io_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "block:block_plug",
	"EventType": "Tracepoint event"
},
{
	"EventName": "block:block_rq_complete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "block:block_rq_error",
	"EventType": "Tracepoint event"
},
{
	"EventName": "block:block_rq_insert",
	"EventType": "Tracepoint event"
},
{
	"EventName": "block:block_rq_issue",
	"EventType": "Tracepoint event"
},
{
	"EventName": "block:block_rq_merge",
	"EventType": "Tracepoint event"
},
{
	"EventName": "block:block_rq_remap",
	"EventType": "Tracepoint event"
},
{
	"EventName": "block:block_rq_requeue",
	"EventType": "Tracepoint event"
},
{
	"EventName": "block:block_split",
	"EventType": "Tracepoint event"
},
{
	"EventName": "block:block_touch_buffer",
	"EventType": "Tracepoint event"
},
{
	"EventName": "block:block_unplug",
	"EventType": "Tracepoint event"
},
{
	"EventName": "bpf_test_run:bpf_test_finish",
	"EventType": "Tracepoint event"
},
{
	"EventName": "bpf_trace:bpf_trace_printk",
	"EventType": "Tracepoint event"
},
{
	"EventName": "bridge:br_fdb_add",
	"EventType": "Tracepoint event"
},
{
	"EventName": "bridge:br_fdb_external_learn_add",
	"EventType": "Tracepoint event"
},
{
	"EventName": "bridge:br_fdb_update",
	"EventType": "Tracepoint event"
},
{
	"EventName": "bridge:br_mdb_full",
	"EventType": "Tracepoint event"
},
{
	"EventName": "bridge:fdb_delete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_assoc_comeback",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_bss_color_notify",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_cac_event",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_ch_switch_notify",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_ch_switch_started_notify",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_chandef_dfs_required",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_control_port_tx_status",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_cqm_pktloss_notify",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_cqm_rssi_notify",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_del_sta",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_ft_event",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_get_bss",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_gtk_rekey_notify",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_ibss_joined",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_inform_bss_frame",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_links_removed",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_mgmt_tx_status",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_michael_mic_failure",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_new_sta",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_notify_new_peer_candidate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_pmksa_candidate_notify",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_pmsr_complete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_pmsr_report",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_probe_status",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_radar_event",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_ready_on_channel",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_ready_on_channel_expired",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_reg_can_beacon",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_report_obss_beacon",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_report_wowlan_wakeup",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_return_bool",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_return_bss",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_return_u32",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_return_uint",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_rx_control_port",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_rx_mgmt",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_rx_mlme_mgmt",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_rx_spurious_frame",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_rx_unexpected_4addr_frame",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_rx_unprot_mlme_mgmt",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_scan_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_sched_scan_results",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_sched_scan_stopped",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_send_assoc_failure",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_send_auth_timeout",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_send_rx_assoc",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_send_rx_auth",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_stop_iface",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_tdls_oper_request",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_tx_mgmt_expired",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_tx_mlme_mgmt",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:cfg80211_update_owe_info_event",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_abort_pmsr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_abort_scan",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_add_intf_link",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_add_key",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_add_link_station",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_add_mpath",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_add_nan_func",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_add_station",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_add_tx_ts",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_add_virtual_intf",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_assoc",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_auth",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_cancel_remain_on_channel",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_change_beacon",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_change_bss",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_change_mpath",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_change_station",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_change_virtual_intf",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_channel_switch",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_color_change",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_connect",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_crit_proto_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_crit_proto_stop",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_deauth",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_del_intf_link",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_del_key",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_del_link_station",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_del_mpath",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_del_nan_func",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_del_pmk",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_del_pmksa",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_del_station",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_del_tx_ts",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_del_virtual_intf",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_disassoc",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_disconnect",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_dump_mpath",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_dump_mpp",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_dump_station",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_dump_survey",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_end_cac",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_external_auth",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_flush_pmksa",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_get_antenna",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_get_channel",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_get_ftm_responder_stats",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_get_key",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_get_mesh_config",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_get_mpath",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_get_mpp",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_get_station",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_get_tx_power",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_get_txq_stats",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_inform_bss",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_join_ibss",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_join_mesh",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_join_ocb",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_leave_ibss",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_leave_mesh",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_leave_ocb",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_libertas_set_mesh_channel",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_mgmt_tx",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_mgmt_tx_cancel_wait",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_mod_link_station",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_nan_change_conf",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_probe_client",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_probe_mesh_link",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_remain_on_channel",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_reset_tid_config",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_resume",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_return_chandef",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_return_int",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_return_int_cookie",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_return_int_int",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_return_int_mesh_config",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_return_int_mpath_info",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_return_int_station_info",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_return_int_survey_info",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_return_int_tx_rx",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_return_void",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_return_void_tx_rx",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_return_wdev",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_rfkill_poll",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_scan",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_sched_scan_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_sched_scan_stop",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_antenna",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_ap_chanwidth",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_bitrate_mask",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_coalesce",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_cqm_rssi_config",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_cqm_rssi_range_config",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_cqm_txe_config",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_default_beacon_key",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_default_key",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_default_mgmt_key",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_fils_aad",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_hw_timestamp",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_mac_acl",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_mcast_rate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_monitor_channel",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_multicast_to_unicast",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_noack_map",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_pmk",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_pmksa",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_power_mgmt",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_qos_map",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_radar_background",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_rekey_data",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_sar_specs",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_tid_config",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_tx_power",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_txq_params",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_wakeup",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_set_wiphy_params",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_start_ap",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_start_nan",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_start_p2p_device",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_start_pmsr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_start_radar_detection",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_stop_ap",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_stop_nan",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_stop_p2p_device",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_suspend",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_tdls_cancel_channel_switch",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_tdls_channel_switch",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_tdls_mgmt",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_tdls_oper",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_tx_control_port",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_update_connect_params",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_update_ft_ies",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_update_mesh_config",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_update_mgmt_frame_registrations",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cfg80211:rdev_update_owe_info",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cgroup:cgroup_attach_task",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cgroup:cgroup_destroy_root",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cgroup:cgroup_freeze",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cgroup:cgroup_mkdir",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cgroup:cgroup_notify_frozen",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cgroup:cgroup_notify_populated",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cgroup:cgroup_release",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cgroup:cgroup_remount",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cgroup:cgroup_rename",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cgroup:cgroup_rmdir",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cgroup:cgroup_setup_root",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cgroup:cgroup_transfer_tasks",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cgroup:cgroup_unfreeze",
	"EventType": "Tracepoint event"
},
{
	"EventName": "clk:clk_disable",
	"EventType": "Tracepoint event"
},
{
	"EventName": "clk:clk_disable_complete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "clk:clk_enable",
	"EventType": "Tracepoint event"
},
{
	"EventName": "clk:clk_enable_complete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "clk:clk_prepare",
	"EventType": "Tracepoint event"
},
{
	"EventName": "clk:clk_prepare_complete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "clk:clk_rate_request_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "clk:clk_rate_request_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "clk:clk_set_duty_cycle",
	"EventType": "Tracepoint event"
},
{
	"EventName": "clk:clk_set_duty_cycle_complete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "clk:clk_set_max_rate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "clk:clk_set_min_rate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "clk:clk_set_parent",
	"EventType": "Tracepoint event"
},
{
	"EventName": "clk:clk_set_parent_complete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "clk:clk_set_phase",
	"EventType": "Tracepoint event"
},
{
	"EventName": "clk:clk_set_phase_complete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "clk:clk_set_rate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "clk:clk_set_rate_complete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "clk:clk_set_rate_range",
	"EventType": "Tracepoint event"
},
{
	"EventName": "clk:clk_unprepare",
	"EventType": "Tracepoint event"
},
{
	"EventName": "clk:clk_unprepare_complete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "compaction:mm_compaction_begin",
	"EventType": "Tracepoint event"
},
{
	"EventName": "compaction:mm_compaction_defer_compaction",
	"EventType": "Tracepoint event"
},
{
	"EventName": "compaction:mm_compaction_defer_reset",
	"EventType": "Tracepoint event"
},
{
	"EventName": "compaction:mm_compaction_deferred",
	"EventType": "Tracepoint event"
},
{
	"EventName": "compaction:mm_compaction_end",
	"EventType": "Tracepoint event"
},
{
	"EventName": "compaction:mm_compaction_fast_isolate_freepages",
	"EventType": "Tracepoint event"
},
{
	"EventName": "compaction:mm_compaction_finished",
	"EventType": "Tracepoint event"
},
{
	"EventName": "compaction:mm_compaction_isolate_freepages",
	"EventType": "Tracepoint event"
},
{
	"EventName": "compaction:mm_compaction_isolate_migratepages",
	"EventType": "Tracepoint event"
},
{
	"EventName": "compaction:mm_compaction_kcompactd_sleep",
	"EventType": "Tracepoint event"
},
{
	"EventName": "compaction:mm_compaction_kcompactd_wake",
	"EventType": "Tracepoint event"
},
{
	"EventName": "compaction:mm_compaction_migratepages",
	"EventType": "Tracepoint event"
},
{
	"EventName": "compaction:mm_compaction_suitable",
	"EventType": "Tracepoint event"
},
{
	"EventName": "compaction:mm_compaction_try_to_compact_pages",
	"EventType": "Tracepoint event"
},
{
	"EventName": "compaction:mm_compaction_wakeup_kcompactd",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cpuhp:cpuhp_enter",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cpuhp:cpuhp_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cpuhp:cpuhp_multi_enter",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cros_ec:cros_ec_request_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "cros_ec:cros_ec_request_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "csd:csd_function_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "csd:csd_function_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "csd:csd_queue_cpu",
	"EventType": "Tracepoint event"
},
{
	"EventName": "dev:devres_log",
	"EventType": "Tracepoint event"
},
{
	"EventName": "devfreq:devfreq_frequency",
	"EventType": "Tracepoint event"
},
{
	"EventName": "devfreq:devfreq_monitor",
	"EventType": "Tracepoint event"
},
{
	"EventName": "devlink:devlink_health_recover_aborted",
	"EventType": "Tracepoint event"
},
{
	"EventName": "devlink:devlink_health_report",
	"EventType": "Tracepoint event"
},
{
	"EventName": "devlink:devlink_health_reporter_state_update",
	"EventType": "Tracepoint event"
},
{
	"EventName": "devlink:devlink_hwerr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "devlink:devlink_hwmsg",
	"EventType": "Tracepoint event"
},
{
	"EventName": "devlink:devlink_trap_report",
	"EventType": "Tracepoint event"
},
{
	"EventName": "dma_fence:dma_fence_destroy",
	"EventType": "Tracepoint event"
},
{
	"EventName": "dma_fence:dma_fence_emit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "dma_fence:dma_fence_enable_signal",
	"EventType": "Tracepoint event"
},
{
	"EventName": "dma_fence:dma_fence_init",
	"EventType": "Tracepoint event"
},
{
	"EventName": "dma_fence:dma_fence_signaled",
	"EventType": "Tracepoint event"
},
{
	"EventName": "dma_fence:dma_fence_wait_end",
	"EventType": "Tracepoint event"
},
{
	"EventName": "dma_fence:dma_fence_wait_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "drm:drm_vblank_event",
	"EventType": "Tracepoint event"
},
{
	"EventName": "drm:drm_vblank_event_delivered",
	"EventType": "Tracepoint event"
},
{
	"EventName": "drm:drm_vblank_event_queued",
	"EventType": "Tracepoint event"
},
{
	"EventName": "error_report:error_report_end",
	"EventType": "Tracepoint event"
},
{
	"EventName": "exceptions:page_fault_kernel",
	"EventType": "Tracepoint event"
},
{
	"EventName": "exceptions:page_fault_user",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_alloc_da_blocks",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_allocate_blocks",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_allocate_inode",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_begin_ordered_truncate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_collapse_range",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_da_release_space",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_da_reserve_space",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_da_update_reserve_space",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_da_write_begin",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_da_write_end",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_da_write_pages",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_da_write_pages_extent",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_discard_blocks",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_discard_preallocations",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_drop_inode",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_error",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_es_cache_extent",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_es_find_extent_range_enter",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_es_find_extent_range_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_es_insert_delayed_block",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_es_insert_extent",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_es_lookup_extent_enter",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_es_lookup_extent_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_es_remove_extent",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_es_shrink",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_es_shrink_count",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_es_shrink_scan_enter",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_es_shrink_scan_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_evict_inode",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_ext_convert_to_initialized_enter",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_ext_convert_to_initialized_fastpath",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_ext_handle_unwritten_extents",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_ext_load_extent",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_ext_map_blocks_enter",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_ext_map_blocks_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_ext_remove_space",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_ext_remove_space_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_ext_rm_idx",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_ext_rm_leaf",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_ext_show_extent",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_fallocate_enter",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_fallocate_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_fc_cleanup",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_fc_commit_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_fc_commit_stop",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_fc_replay",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_fc_replay_scan",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_fc_stats",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_fc_track_create",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_fc_track_inode",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_fc_track_link",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_fc_track_range",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_fc_track_unlink",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_forget",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_free_blocks",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_free_inode",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_fsmap_high_key",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_fsmap_low_key",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_fsmap_mapping",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_get_implied_cluster_alloc_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_getfsmap_high_key",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_getfsmap_low_key",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_getfsmap_mapping",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_ind_map_blocks_enter",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_ind_map_blocks_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_insert_range",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_invalidate_folio",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_journal_start_inode",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_journal_start_reserved",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_journal_start_sb",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_journalled_invalidate_folio",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_journalled_write_end",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_lazy_itable_init",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_load_inode",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_load_inode_bitmap",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_mark_inode_dirty",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_mb_bitmap_load",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_mb_buddy_bitmap_load",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_mb_discard_preallocations",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_mb_new_group_pa",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_mb_new_inode_pa",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_mb_release_group_pa",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_mb_release_inode_pa",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_mballoc_alloc",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_mballoc_discard",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_mballoc_free",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_mballoc_prealloc",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_nfs_commit_metadata",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_other_inode_update_time",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_prefetch_bitmaps",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_punch_hole",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_read_block_bitmap_load",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_read_folio",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_release_folio",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_remove_blocks",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_request_blocks",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_request_inode",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_shutdown",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_sync_file_enter",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_sync_file_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_sync_fs",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_trim_all_free",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_trim_extent",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_truncate_enter",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_truncate_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_unlink_enter",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_unlink_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_update_sb",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_write_begin",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_write_end",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_writepages",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_writepages_result",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ext4:ext4_zero_range",
	"EventType": "Tracepoint event"
},
{
	"EventName": "fib:fib_table_lookup",
	"EventType": "Tracepoint event"
},
{
	"EventName": "fib6:fib6_table_lookup",
	"EventType": "Tracepoint event"
},
{
	"EventName": "filelock:break_lease_block",
	"EventType": "Tracepoint event"
},
{
	"EventName": "filelock:break_lease_noblock",
	"EventType": "Tracepoint event"
},
{
	"EventName": "filelock:break_lease_unblock",
	"EventType": "Tracepoint event"
},
{
	"EventName": "filelock:fcntl_setlk",
	"EventType": "Tracepoint event"
},
{
	"EventName": "filelock:flock_lock_inode",
	"EventType": "Tracepoint event"
},
{
	"EventName": "filelock:generic_add_lease",
	"EventType": "Tracepoint event"
},
{
	"EventName": "filelock:generic_delete_lease",
	"EventType": "Tracepoint event"
},
{
	"EventName": "filelock:leases_conflict",
	"EventType": "Tracepoint event"
},
{
	"EventName": "filelock:locks_get_lock_context",
	"EventType": "Tracepoint event"
},
{
	"EventName": "filelock:locks_remove_posix",
	"EventType": "Tracepoint event"
},
{
	"EventName": "filelock:posix_lock_inode",
	"EventType": "Tracepoint event"
},
{
	"EventName": "filelock:time_out_leases",
	"EventType": "Tracepoint event"
},
{
	"EventName": "filemap:file_check_and_advance_wb_err",
	"EventType": "Tracepoint event"
},
{
	"EventName": "filemap:filemap_set_wb_err",
	"EventType": "Tracepoint event"
},
{
	"EventName": "filemap:mm_filemap_add_to_page_cache",
	"EventType": "Tracepoint event"
},
{
	"EventName": "filemap:mm_filemap_delete_from_page_cache",
	"EventType": "Tracepoint event"
},
{
	"EventName": "fs_dax:dax_insert_mapping",
	"EventType": "Tracepoint event"
},
{
	"EventName": "fs_dax:dax_insert_pfn_mkwrite",
	"EventType": "Tracepoint event"
},
{
	"EventName": "fs_dax:dax_insert_pfn_mkwrite_no_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "fs_dax:dax_load_hole",
	"EventType": "Tracepoint event"
},
{
	"EventName": "fs_dax:dax_pmd_fault",
	"EventType": "Tracepoint event"
},
{
	"EventName": "fs_dax:dax_pmd_fault_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "fs_dax:dax_pmd_insert_mapping",
	"EventType": "Tracepoint event"
},
{
	"EventName": "fs_dax:dax_pmd_load_hole",
	"EventType": "Tracepoint event"
},
{
	"EventName": "fs_dax:dax_pmd_load_hole_fallback",
	"EventType": "Tracepoint event"
},
{
	"EventName": "fs_dax:dax_pte_fault",
	"EventType": "Tracepoint event"
},
{
	"EventName": "fs_dax:dax_pte_fault_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "fs_dax:dax_writeback_one",
	"EventType": "Tracepoint event"
},
{
	"EventName": "fs_dax:dax_writeback_range",
	"EventType": "Tracepoint event"
},
{
	"EventName": "fs_dax:dax_writeback_range_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ftrace:function",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ftrace:print",
	"EventType": "Tracepoint event"
},
{
	"EventName": "gpio:gpio_direction",
	"EventType": "Tracepoint event"
},
{
	"EventName": "gpio:gpio_value",
	"EventType": "Tracepoint event"
},
{
	"EventName": "handshake:handshake_cancel",
	"EventType": "Tracepoint event"
},
{
	"EventName": "handshake:handshake_cancel_busy",
	"EventType": "Tracepoint event"
},
{
	"EventName": "handshake:handshake_cancel_none",
	"EventType": "Tracepoint event"
},
{
	"EventName": "handshake:handshake_cmd_accept",
	"EventType": "Tracepoint event"
},
{
	"EventName": "handshake:handshake_cmd_accept_err",
	"EventType": "Tracepoint event"
},
{
	"EventName": "handshake:handshake_cmd_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "handshake:handshake_cmd_done_err",
	"EventType": "Tracepoint event"
},
{
	"EventName": "handshake:handshake_complete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "handshake:handshake_destruct",
	"EventType": "Tracepoint event"
},
{
	"EventName": "handshake:handshake_notify_err",
	"EventType": "Tracepoint event"
},
{
	"EventName": "handshake:handshake_submit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "handshake:handshake_submit_err",
	"EventType": "Tracepoint event"
},
{
	"EventName": "hda:hda_get_response",
	"EventType": "Tracepoint event"
},
{
	"EventName": "hda:hda_send_cmd",
	"EventType": "Tracepoint event"
},
{
	"EventName": "hda:hda_unsol_event",
	"EventType": "Tracepoint event"
},
{
	"EventName": "hda:snd_hdac_stream_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "hda:snd_hdac_stream_stop",
	"EventType": "Tracepoint event"
},
{
	"EventName": "hda_controller:azx_get_position",
	"EventType": "Tracepoint event"
},
{
	"EventName": "hda_controller:azx_pcm_close",
	"EventType": "Tracepoint event"
},
{
	"EventName": "hda_controller:azx_pcm_hw_params",
	"EventType": "Tracepoint event"
},
{
	"EventName": "hda_controller:azx_pcm_open",
	"EventType": "Tracepoint event"
},
{
	"EventName": "hda_controller:azx_pcm_prepare",
	"EventType": "Tracepoint event"
},
{
	"EventName": "hda_controller:azx_pcm_trigger",
	"EventType": "Tracepoint event"
},
{
	"EventName": "hda_intel:azx_resume",
	"EventType": "Tracepoint event"
},
{
	"EventName": "hda_intel:azx_runtime_resume",
	"EventType": "Tracepoint event"
},
{
	"EventName": "hda_intel:azx_runtime_suspend",
	"EventType": "Tracepoint event"
},
{
	"EventName": "hda_intel:azx_suspend",
	"EventType": "Tracepoint event"
},
{
	"EventName": "huge_memory:mm_collapse_huge_page",
	"EventType": "Tracepoint event"
},
{
	"EventName": "huge_memory:mm_collapse_huge_page_isolate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "huge_memory:mm_collapse_huge_page_swapin",
	"EventType": "Tracepoint event"
},
{
	"EventName": "huge_memory:mm_khugepaged_collapse_file",
	"EventType": "Tracepoint event"
},
{
	"EventName": "huge_memory:mm_khugepaged_scan_file",
	"EventType": "Tracepoint event"
},
{
	"EventName": "huge_memory:mm_khugepaged_scan_pmd",
	"EventType": "Tracepoint event"
},
{
	"EventName": "hwmon:hwmon_attr_show",
	"EventType": "Tracepoint event"
},
{
	"EventName": "hwmon:hwmon_attr_show_string",
	"EventType": "Tracepoint event"
},
{
	"EventName": "hwmon:hwmon_attr_store",
	"EventType": "Tracepoint event"
},
{
	"EventName": "hyperv:hyperv_mmu_flush_tlb_multi",
	"EventType": "Tracepoint event"
},
{
	"EventName": "hyperv:hyperv_nested_flush_guest_mapping",
	"EventType": "Tracepoint event"
},
{
	"EventName": "hyperv:hyperv_nested_flush_guest_mapping_range",
	"EventType": "Tracepoint event"
},
{
	"EventName": "hyperv:hyperv_send_ipi_mask",
	"EventType": "Tracepoint event"
},
{
	"EventName": "hyperv:hyperv_send_ipi_one",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i2c:i2c_read",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i2c:i2c_reply",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i2c:i2c_result",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i2c:i2c_write",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:g4x_wm",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:i915_context_create",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:i915_context_free",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:i915_gem_evict",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:i915_gem_evict_node",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:i915_gem_evict_vm",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:i915_gem_object_clflush",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:i915_gem_object_create",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:i915_gem_object_destroy",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:i915_gem_object_fault",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:i915_gem_object_pread",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:i915_gem_object_pwrite",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:i915_gem_shrink",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:i915_ppgtt_create",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:i915_ppgtt_release",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:i915_reg_rw",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:i915_request_add",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:i915_request_queue",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:i915_request_retire",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:i915_request_wait_begin",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:i915_request_wait_end",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:i915_vma_bind",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:i915_vma_unbind",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:intel_cpu_fifo_underrun",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:intel_crtc_vblank_work_end",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:intel_crtc_vblank_work_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:intel_fbc_activate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:intel_fbc_deactivate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:intel_fbc_nuke",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:intel_frontbuffer_flush",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:intel_frontbuffer_invalidate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:intel_memory_cxsr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:intel_pch_fifo_underrun",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:intel_pipe_crc",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:intel_pipe_disable",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:intel_pipe_enable",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:intel_pipe_update_end",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:intel_pipe_update_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:intel_pipe_update_vblank_evaded",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:intel_plane_disable_arm",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:intel_plane_update_arm",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:intel_plane_update_noarm",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:vlv_fifo_size",
	"EventType": "Tracepoint event"
},
{
	"EventName": "i915:vlv_wm",
	"EventType": "Tracepoint event"
},
{
	"EventName": "initcall:initcall_finish",
	"EventType": "Tracepoint event"
},
{
	"EventName": "initcall:initcall_level",
	"EventType": "Tracepoint event"
},
{
	"EventName": "initcall:initcall_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "intel-sst:sst_ipc_inbox_rdata",
	"EventType": "Tracepoint event"
},
{
	"EventName": "intel-sst:sst_ipc_inbox_read",
	"EventType": "Tracepoint event"
},
{
	"EventName": "intel-sst:sst_ipc_inbox_wdata",
	"EventType": "Tracepoint event"
},
{
	"EventName": "intel-sst:sst_ipc_inbox_write",
	"EventType": "Tracepoint event"
},
{
	"EventName": "intel-sst:sst_ipc_msg_rx",
	"EventType": "Tracepoint event"
},
{
	"EventName": "intel-sst:sst_ipc_msg_tx",
	"EventType": "Tracepoint event"
},
{
	"EventName": "intel-sst:sst_ipc_outbox_rdata",
	"EventType": "Tracepoint event"
},
{
	"EventName": "intel-sst:sst_ipc_outbox_read",
	"EventType": "Tracepoint event"
},
{
	"EventName": "intel-sst:sst_ipc_outbox_wdata",
	"EventType": "Tracepoint event"
},
{
	"EventName": "intel-sst:sst_ipc_outbox_write",
	"EventType": "Tracepoint event"
},
{
	"EventName": "intel_avs:avs_d0ix",
	"EventType": "Tracepoint event"
},
{
	"EventName": "intel_avs:avs_dsp_core_op",
	"EventType": "Tracepoint event"
},
{
	"EventName": "intel_avs:avs_ipc_msg_payload",
	"EventType": "Tracepoint event"
},
{
	"EventName": "intel_avs:avs_ipc_notify_msg",
	"EventType": "Tracepoint event"
},
{
	"EventName": "intel_avs:avs_ipc_reply_msg",
	"EventType": "Tracepoint event"
},
{
	"EventName": "intel_avs:avs_ipc_request_msg",
	"EventType": "Tracepoint event"
},
{
	"EventName": "intel_iommu:prq_report",
	"EventType": "Tracepoint event"
},
{
	"EventName": "intel_iommu:qi_submit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "interconnect:icc_set_bw",
	"EventType": "Tracepoint event"
},
{
	"EventName": "interconnect:icc_set_bw_end",
	"EventType": "Tracepoint event"
},
{
	"EventName": "io_uring:io_uring_complete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "io_uring:io_uring_cqe_overflow",
	"EventType": "Tracepoint event"
},
{
	"EventName": "io_uring:io_uring_cqring_wait",
	"EventType": "Tracepoint event"
},
{
	"EventName": "io_uring:io_uring_create",
	"EventType": "Tracepoint event"
},
{
	"EventName": "io_uring:io_uring_defer",
	"EventType": "Tracepoint event"
},
{
	"EventName": "io_uring:io_uring_fail_link",
	"EventType": "Tracepoint event"
},
{
	"EventName": "io_uring:io_uring_file_get",
	"EventType": "Tracepoint event"
},
{
	"EventName": "io_uring:io_uring_link",
	"EventType": "Tracepoint event"
},
{
	"EventName": "io_uring:io_uring_local_work_run",
	"EventType": "Tracepoint event"
},
{
	"EventName": "io_uring:io_uring_poll_arm",
	"EventType": "Tracepoint event"
},
{
	"EventName": "io_uring:io_uring_queue_async_work",
	"EventType": "Tracepoint event"
},
{
	"EventName": "io_uring:io_uring_register",
	"EventType": "Tracepoint event"
},
{
	"EventName": "io_uring:io_uring_req_failed",
	"EventType": "Tracepoint event"
},
{
	"EventName": "io_uring:io_uring_short_write",
	"EventType": "Tracepoint event"
},
{
	"EventName": "io_uring:io_uring_submit_req",
	"EventType": "Tracepoint event"
},
{
	"EventName": "io_uring:io_uring_task_add",
	"EventType": "Tracepoint event"
},
{
	"EventName": "io_uring:io_uring_task_work_run",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iocost:iocost_inuse_adjust",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iocost:iocost_inuse_shortage",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iocost:iocost_inuse_transfer",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iocost:iocost_ioc_vrate_adj",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iocost:iocost_iocg_activate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iocost:iocost_iocg_forgive_debt",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iocost:iocost_iocg_idle",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iomap:iomap_dio_complete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iomap:iomap_dio_invalidate_fail",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iomap:iomap_dio_rw_begin",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iomap:iomap_dio_rw_queued",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iomap:iomap_invalidate_folio",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iomap:iomap_iter",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iomap:iomap_iter_dstmap",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iomap:iomap_iter_srcmap",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iomap:iomap_readahead",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iomap:iomap_readpage",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iomap:iomap_release_folio",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iomap:iomap_writepage",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iomap:iomap_writepage_map",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iommu:add_device_to_group",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iommu:attach_device_to_domain",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iommu:io_page_fault",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iommu:map",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iommu:remove_device_from_group",
	"EventType": "Tracepoint event"
},
{
	"EventName": "iommu:unmap",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ipi:ipi_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ipi:ipi_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ipi:ipi_raise",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ipi:ipi_send_cpu",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ipi:ipi_send_cpumask",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq:irq_handler_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq:irq_handler_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq:softirq_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq:softirq_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq:softirq_raise",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq:tasklet_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq:tasklet_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_matrix:irq_matrix_alloc",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_matrix:irq_matrix_alloc_managed",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_matrix:irq_matrix_alloc_reserved",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_matrix:irq_matrix_assign",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_matrix:irq_matrix_assign_system",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_matrix:irq_matrix_free",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_matrix:irq_matrix_offline",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_matrix:irq_matrix_online",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_matrix:irq_matrix_remove_managed",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_matrix:irq_matrix_remove_reserved",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_matrix:irq_matrix_reserve",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_matrix:irq_matrix_reserve_managed",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:call_function_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:call_function_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:call_function_single_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:call_function_single_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:deferred_error_apic_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:deferred_error_apic_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:error_apic_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:error_apic_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:irq_work_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:irq_work_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:local_timer_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:local_timer_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:reschedule_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:reschedule_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:spurious_apic_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:spurious_apic_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:thermal_apic_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:thermal_apic_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:threshold_apic_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:threshold_apic_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:vector_activate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:vector_alloc",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:vector_alloc_managed",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:vector_clear",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:vector_config",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:vector_deactivate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:vector_free_moved",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:vector_reserve",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:vector_reserve_managed",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:vector_setup",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:vector_teardown",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:vector_update",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:x86_platform_ipi_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "irq_vectors:x86_platform_ipi_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "jbd2:jbd2_checkpoint",
	"EventType": "Tracepoint event"
},
{
	"EventName": "jbd2:jbd2_checkpoint_stats",
	"EventType": "Tracepoint event"
},
{
	"EventName": "jbd2:jbd2_commit_flushing",
	"EventType": "Tracepoint event"
},
{
	"EventName": "jbd2:jbd2_commit_locking",
	"EventType": "Tracepoint event"
},
{
	"EventName": "jbd2:jbd2_commit_logging",
	"EventType": "Tracepoint event"
},
{
	"EventName": "jbd2:jbd2_drop_transaction",
	"EventType": "Tracepoint event"
},
{
	"EventName": "jbd2:jbd2_end_commit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "jbd2:jbd2_handle_extend",
	"EventType": "Tracepoint event"
},
{
	"EventName": "jbd2:jbd2_handle_restart",
	"EventType": "Tracepoint event"
},
{
	"EventName": "jbd2:jbd2_handle_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "jbd2:jbd2_handle_stats",
	"EventType": "Tracepoint event"
},
{
	"EventName": "jbd2:jbd2_lock_buffer_stall",
	"EventType": "Tracepoint event"
},
{
	"EventName": "jbd2:jbd2_run_stats",
	"EventType": "Tracepoint event"
},
{
	"EventName": "jbd2:jbd2_shrink_checkpoint_list",
	"EventType": "Tracepoint event"
},
{
	"EventName": "jbd2:jbd2_shrink_count",
	"EventType": "Tracepoint event"
},
{
	"EventName": "jbd2:jbd2_shrink_scan_enter",
	"EventType": "Tracepoint event"
},
{
	"EventName": "jbd2:jbd2_shrink_scan_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "jbd2:jbd2_start_commit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "jbd2:jbd2_submit_inode_data",
	"EventType": "Tracepoint event"
},
{
	"EventName": "jbd2:jbd2_update_log_tail",
	"EventType": "Tracepoint event"
},
{
	"EventName": "jbd2:jbd2_write_superblock",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kmem:kfree",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kmem:kmalloc",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kmem:kmem_cache_alloc",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kmem:kmem_cache_free",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kmem:mm_page_alloc",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kmem:mm_page_alloc_extfrag",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kmem:mm_page_alloc_zone_locked",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kmem:mm_page_free",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kmem:mm_page_free_batched",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kmem:mm_page_pcpu_drain",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kmem:rss_stat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ksm:ksm_enter",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ksm:ksm_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ksm:ksm_merge_one_page",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ksm:ksm_merge_with_ksm_page",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ksm:ksm_remove_ksm_page",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ksm:ksm_remove_rmap_item",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ksm:ksm_start_scan",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ksm:ksm_stop_scan",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_ack_irq",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_age_hva",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_apic",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_apic_accept_irq",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_apic_ipi",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_apicv_accept_irq",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_apicv_inhibit_changed",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_async_pf_completed",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_async_pf_not_present",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_async_pf_ready",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_async_pf_repeated_fault",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_avic_doorbell",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_avic_ga_log",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_avic_incomplete_ipi",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_avic_kick_vcpu_slowpath",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_avic_unaccelerated_access",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_cpuid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_cr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_dirty_ring_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_dirty_ring_push",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_dirty_ring_reset",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_emulate_insn",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_eoi",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_fast_mmio",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_fpu",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_halt_poll_ns",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_hv_flush_tlb",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_hv_flush_tlb_ex",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_hv_hypercall",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_hv_hypercall_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_hv_notify_acked_sint",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_hv_send_ipi",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_hv_send_ipi_ex",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_hv_stimer_callback",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_hv_stimer_cleanup",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_hv_stimer_expiration",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_hv_stimer_set_config",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_hv_stimer_set_count",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_hv_stimer_start_one_shot",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_hv_stimer_start_periodic",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_hv_syndbg_get_msr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_hv_syndbg_set_msr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_hv_synic_send_eoi",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_hv_synic_set_irq",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_hv_synic_set_msr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_hv_timer_state",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_hypercall",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_inj_exception",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_inj_virq",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_invlpga",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_ioapic_delayed_eoi_inj",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_ioapic_set_irq",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_mmio",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_msi_set_irq",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_msr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_nested_intercepts",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_nested_intr_vmexit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_nested_vmenter",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_nested_vmenter_failed",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_nested_vmexit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_nested_vmexit_inject",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_page_fault",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_pi_irte_update",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_pic_set_irq",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_pio",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_ple_window_update",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_pml_full",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_pv_eoi",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_pv_tlb_flush",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_pvclock_update",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_set_irq",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_set_spte_hva",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_skinit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_smm_transition",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_test_age_hva",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_track_tsc",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_try_async_get_page",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_unmap_hva_range",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_update_master_clock",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_userspace_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_vcpu_wakeup",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_vmgexit_enter",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_vmgexit_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_vmgexit_msr_protocol_enter",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_vmgexit_msr_protocol_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_wait_lapic_expire",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_write_tsc_offset",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:kvm_xen_hypercall",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvm:vcpu_match_mmio",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvmmmu:check_mmio_spte",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvmmmu:fast_page_fault",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvmmmu:handle_mmio_page_fault",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvmmmu:kvm_mmu_get_page",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvmmmu:kvm_mmu_pagetable_walk",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvmmmu:kvm_mmu_paging_element",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvmmmu:kvm_mmu_prepare_zap_page",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvmmmu:kvm_mmu_set_accessed_bit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvmmmu:kvm_mmu_set_dirty_bit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvmmmu:kvm_mmu_set_spte",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvmmmu:kvm_mmu_split_huge_page",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvmmmu:kvm_mmu_spte_requested",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvmmmu:kvm_mmu_sync_page",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvmmmu:kvm_mmu_unsync_page",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvmmmu:kvm_mmu_walker_error",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvmmmu:kvm_mmu_zap_all_fast",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvmmmu:kvm_tdp_mmu_spte_changed",
	"EventType": "Tracepoint event"
},
{
	"EventName": "kvmmmu:mark_mmio_spte",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_bmdma_setup",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_bmdma_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_bmdma_status",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_bmdma_stop",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_eh_about_to_do",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_eh_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_eh_link_autopsy",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_eh_link_autopsy_qc",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_exec_command",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_link_hardreset_begin",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_link_hardreset_end",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_link_postreset",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_link_softreset_begin",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_link_softreset_end",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_port_freeze",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_port_thaw",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_qc_complete_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_qc_complete_failed",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_qc_complete_internal",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_qc_issue",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_qc_prep",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_sff_flush_pio_task",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_sff_hsm_command_complete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_sff_hsm_state",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_sff_pio_transfer_data",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_sff_port_intr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_slave_hardreset_begin",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_slave_hardreset_end",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_slave_postreset",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_std_sched_eh",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:ata_tf_load",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:atapi_pio_transfer_data",
	"EventType": "Tracepoint event"
},
{
	"EventName": "libata:atapi_send_cdb",
	"EventType": "Tracepoint event"
},
{
	"EventName": "lock:contention_begin",
	"EventType": "Tracepoint event"
},
{
	"EventName": "lock:contention_end",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:api_beacon_loss",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:api_chswitch_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:api_connection_loss",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:api_cqm_beacon_loss_notify",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:api_cqm_rssi_notify",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:api_disconnect",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:api_enable_rssi_reports",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:api_eosp",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:api_gtk_rekey_notify",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:api_radar_detected",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:api_ready_on_channel",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:api_remain_on_channel_expired",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:api_restart_hw",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:api_scan_completed",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:api_sched_scan_results",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:api_sched_scan_stopped",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:api_send_eosp_nullfunc",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:api_sta_block_awake",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:api_sta_set_buffered",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:api_start_tx_ba_cb",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:api_start_tx_ba_session",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:api_stop_tx_ba_cb",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:api_stop_tx_ba_session",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_abort_channel_switch",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_abort_pmsr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_add_chanctx",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_add_interface",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_add_nan_func",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_add_twt_setup",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_allow_buffered_frames",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_ampdu_action",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_assign_vif_chanctx",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_cancel_hw_scan",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_cancel_remain_on_channel",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_change_chanctx",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_change_interface",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_change_sta_links",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_change_vif_links",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_channel_switch",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_channel_switch_beacon",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_channel_switch_rx_beacon",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_conf_tx",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_config",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_config_iface_filter",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_configure_filter",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_del_nan_func",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_event_callback",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_flush",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_flush_sta",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_get_antenna",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_get_et_sset_count",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_get_et_stats",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_get_et_strings",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_get_expected_throughput",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_get_ftm_responder_stats",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_get_key_seq",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_get_ringparam",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_get_stats",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_get_survey",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_get_tsf",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_get_txpower",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_hw_scan",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_ipv6_addr_change",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_join_ibss",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_leave_ibss",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_link_info_changed",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_mgd_complete_tx",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_mgd_prepare_tx",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_mgd_protect_tdls_discover",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_nan_change_conf",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_net_fill_forward_path",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_net_setup_tc",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_offchannel_tx_cancel_wait",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_offset_tsf",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_post_channel_switch",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_pre_channel_switch",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_prepare_multicast",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_reconfig_complete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_release_buffered_frames",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_remain_on_channel",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_remove_chanctx",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_remove_interface",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_reset_tsf",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_resume",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_return_bool",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_return_int",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_return_u32",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_return_u64",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_return_void",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_sched_scan_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_sched_scan_stop",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_set_antenna",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_set_bitrate_mask",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_set_coverage_class",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_set_default_unicast_key",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_set_frag_threshold",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_set_key",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_set_rekey_data",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_set_ringparam",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_set_rts_threshold",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_set_tim",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_set_tsf",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_set_wakeup",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_sta_add",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_sta_notify",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_sta_pre_rcu_remove",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_sta_rate_tbl_update",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_sta_rc_update",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_sta_remove",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_sta_set_4addr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_sta_set_decap_offload",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_sta_set_txpwr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_sta_state",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_sta_statistics",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_start_ap",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_start_nan",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_start_pmsr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_stop",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_stop_ap",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_stop_nan",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_suspend",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_sw_scan_complete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_sw_scan_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_switch_vif_chanctx",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_sync_rx_queues",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_tdls_cancel_channel_switch",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_tdls_channel_switch",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_tdls_recv_channel_switch",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_twt_teardown_request",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_tx_frames_pending",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_tx_last_beacon",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_unassign_vif_chanctx",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_update_tkip_key",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_update_vif_offload",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_vif_cfg_changed",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:drv_wake_tx_queue",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:stop_queue",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211:wake_queue",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211_msg:mac80211_dbg",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211_msg:mac80211_err",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mac80211_msg:mac80211_info",
	"EventType": "Tracepoint event"
},
{
	"EventName": "maple_tree:ma_op",
	"EventType": "Tracepoint event"
},
{
	"EventName": "maple_tree:ma_read",
	"EventType": "Tracepoint event"
},
{
	"EventName": "maple_tree:ma_write",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mce:mce_record",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mctp:mctp_key_acquire",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mctp:mctp_key_release",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mdio:mdio_access",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mei:mei_pci_cfg_read",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mei:mei_reg_read",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mei:mei_reg_write",
	"EventType": "Tracepoint event"
},
{
	"EventName": "migrate:mm_migrate_pages",
	"EventType": "Tracepoint event"
},
{
	"EventName": "migrate:mm_migrate_pages_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "migrate:remove_migration_pte",
	"EventType": "Tracepoint event"
},
{
	"EventName": "migrate:set_migration_pte",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mmap:exit_mmap",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mmap:vm_unmapped_area",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mmap:vma_mas_szero",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mmap:vma_store",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mmap_lock:mmap_lock_acquire_returned",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mmap_lock:mmap_lock_released",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mmap_lock:mmap_lock_start_locking",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mmc:mmc_request_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mmc:mmc_request_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "module:module_free",
	"EventType": "Tracepoint event"
},
{
	"EventName": "module:module_get",
	"EventType": "Tracepoint event"
},
{
	"EventName": "module:module_load",
	"EventType": "Tracepoint event"
},
{
	"EventName": "module:module_put",
	"EventType": "Tracepoint event"
},
{
	"EventName": "module:module_request",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mptcp:ack_update_msk",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mptcp:get_mapping_status",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mptcp:mptcp_sendmsg_frag",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mptcp:mptcp_subflow_get_send",
	"EventType": "Tracepoint event"
},
{
	"EventName": "mptcp:subflow_check_data_avail",
	"EventType": "Tracepoint event"
},
{
	"EventName": "msr:rdpmc",
	"EventType": "Tracepoint event"
},
{
	"EventName": "msr:read_msr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "msr:write_msr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "napi:napi_poll",
	"EventType": "Tracepoint event"
},
{
	"EventName": "neigh:neigh_cleanup_and_release",
	"EventType": "Tracepoint event"
},
{
	"EventName": "neigh:neigh_create",
	"EventType": "Tracepoint event"
},
{
	"EventName": "neigh:neigh_event_send_dead",
	"EventType": "Tracepoint event"
},
{
	"EventName": "neigh:neigh_event_send_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "neigh:neigh_timer_handler",
	"EventType": "Tracepoint event"
},
{
	"EventName": "neigh:neigh_update",
	"EventType": "Tracepoint event"
},
{
	"EventName": "neigh:neigh_update_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "net:napi_gro_frags_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "net:napi_gro_frags_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "net:napi_gro_receive_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "net:napi_gro_receive_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "net:net_dev_queue",
	"EventType": "Tracepoint event"
},
{
	"EventName": "net:net_dev_start_xmit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "net:net_dev_xmit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "net:net_dev_xmit_timeout",
	"EventType": "Tracepoint event"
},
{
	"EventName": "net:netif_receive_skb",
	"EventType": "Tracepoint event"
},
{
	"EventName": "net:netif_receive_skb_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "net:netif_receive_skb_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "net:netif_receive_skb_list_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "net:netif_receive_skb_list_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "net:netif_rx",
	"EventType": "Tracepoint event"
},
{
	"EventName": "net:netif_rx_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "net:netif_rx_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "netlink:netlink_extack",
	"EventType": "Tracepoint event"
},
{
	"EventName": "nmi:nmi_handler",
	"EventType": "Tracepoint event"
},
{
	"EventName": "notifier:notifier_register",
	"EventType": "Tracepoint event"
},
{
	"EventName": "notifier:notifier_run",
	"EventType": "Tracepoint event"
},
{
	"EventName": "notifier:notifier_unregister",
	"EventType": "Tracepoint event"
},
{
	"EventName": "oom:compact_retry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "oom:finish_task_reaping",
	"EventType": "Tracepoint event"
},
{
	"EventName": "oom:mark_victim",
	"EventType": "Tracepoint event"
},
{
	"EventName": "oom:oom_score_adj_update",
	"EventType": "Tracepoint event"
},
{
	"EventName": "oom:reclaim_retry_zone",
	"EventType": "Tracepoint event"
},
{
	"EventName": "oom:skip_task_reaping",
	"EventType": "Tracepoint event"
},
{
	"EventName": "oom:start_task_reaping",
	"EventType": "Tracepoint event"
},
{
	"EventName": "oom:wake_reaper",
	"EventType": "Tracepoint event"
},
{
	"EventName": "osnoise:irq_noise",
	"EventType": "Tracepoint event"
},
{
	"EventName": "osnoise:nmi_noise",
	"EventType": "Tracepoint event"
},
{
	"EventName": "osnoise:sample_threshold",
	"EventType": "Tracepoint event"
},
{
	"EventName": "osnoise:softirq_noise",
	"EventType": "Tracepoint event"
},
{
	"EventName": "osnoise:thread_noise",
	"EventType": "Tracepoint event"
},
{
	"EventName": "page_isolation:test_pages_isolated",
	"EventType": "Tracepoint event"
},
{
	"EventName": "page_pool:page_pool_release",
	"EventType": "Tracepoint event"
},
{
	"EventName": "page_pool:page_pool_state_hold",
	"EventType": "Tracepoint event"
},
{
	"EventName": "page_pool:page_pool_state_release",
	"EventType": "Tracepoint event"
},
{
	"EventName": "page_pool:page_pool_update_nid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "pagemap:mm_lru_activate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "pagemap:mm_lru_insertion",
	"EventType": "Tracepoint event"
},
{
	"EventName": "percpu:percpu_alloc_percpu",
	"EventType": "Tracepoint event"
},
{
	"EventName": "percpu:percpu_alloc_percpu_fail",
	"EventType": "Tracepoint event"
},
{
	"EventName": "percpu:percpu_create_chunk",
	"EventType": "Tracepoint event"
},
{
	"EventName": "percpu:percpu_destroy_chunk",
	"EventType": "Tracepoint event"
},
{
	"EventName": "percpu:percpu_free_percpu",
	"EventType": "Tracepoint event"
},
{
	"EventName": "power:clock_disable",
	"EventType": "Tracepoint event"
},
{
	"EventName": "power:clock_enable",
	"EventType": "Tracepoint event"
},
{
	"EventName": "power:clock_set_rate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "power:cpu_frequency",
	"EventType": "Tracepoint event"
},
{
	"EventName": "power:cpu_frequency_limits",
	"EventType": "Tracepoint event"
},
{
	"EventName": "power:cpu_idle",
	"EventType": "Tracepoint event"
},
{
	"EventName": "power:cpu_idle_miss",
	"EventType": "Tracepoint event"
},
{
	"EventName": "power:dev_pm_qos_add_request",
	"EventType": "Tracepoint event"
},
{
	"EventName": "power:dev_pm_qos_remove_request",
	"EventType": "Tracepoint event"
},
{
	"EventName": "power:dev_pm_qos_update_request",
	"EventType": "Tracepoint event"
},
{
	"EventName": "power:device_pm_callback_end",
	"EventType": "Tracepoint event"
},
{
	"EventName": "power:device_pm_callback_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "power:guest_halt_poll_ns",
	"EventType": "Tracepoint event"
},
{
	"EventName": "power:pm_qos_add_request",
	"EventType": "Tracepoint event"
},
{
	"EventName": "power:pm_qos_remove_request",
	"EventType": "Tracepoint event"
},
{
	"EventName": "power:pm_qos_update_flags",
	"EventType": "Tracepoint event"
},
{
	"EventName": "power:pm_qos_update_request",
	"EventType": "Tracepoint event"
},
{
	"EventName": "power:pm_qos_update_target",
	"EventType": "Tracepoint event"
},
{
	"EventName": "power:power_domain_target",
	"EventType": "Tracepoint event"
},
{
	"EventName": "power:powernv_throttle",
	"EventType": "Tracepoint event"
},
{
	"EventName": "power:pstate_sample",
	"EventType": "Tracepoint event"
},
{
	"EventName": "power:suspend_resume",
	"EventType": "Tracepoint event"
},
{
	"EventName": "power:wakeup_source_activate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "power:wakeup_source_deactivate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "printk:console",
	"EventType": "Tracepoint event"
},
{
	"EventName": "pwm:pwm_apply",
	"EventType": "Tracepoint event"
},
{
	"EventName": "pwm:pwm_get",
	"EventType": "Tracepoint event"
},
{
	"EventName": "qdisc:qdisc_create",
	"EventType": "Tracepoint event"
},
{
	"EventName": "qdisc:qdisc_dequeue",
	"EventType": "Tracepoint event"
},
{
	"EventName": "qdisc:qdisc_destroy",
	"EventType": "Tracepoint event"
},
{
	"EventName": "qdisc:qdisc_enqueue",
	"EventType": "Tracepoint event"
},
{
	"EventName": "qdisc:qdisc_reset",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ras:aer_event",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ras:arm_event",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ras:extlog_mem_event",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ras:mc_event",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ras:memory_failure_event",
	"EventType": "Tracepoint event"
},
{
	"EventName": "ras:non_standard_event",
	"EventType": "Tracepoint event"
},
{
	"EventName": "raw_syscalls:sys_enter",
	"EventType": "Tracepoint event"
},
{
	"EventName": "raw_syscalls:sys_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "rcu:rcu_stall_warning",
	"EventType": "Tracepoint event"
},
{
	"EventName": "rcu:rcu_utilization",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regmap:regcache_drop_region",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regmap:regcache_sync",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regmap:regmap_async_complete_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regmap:regmap_async_complete_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regmap:regmap_async_io_complete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regmap:regmap_async_write_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regmap:regmap_bulk_read",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regmap:regmap_bulk_write",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regmap:regmap_cache_bypass",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regmap:regmap_cache_only",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regmap:regmap_hw_read_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regmap:regmap_hw_read_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regmap:regmap_hw_write_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regmap:regmap_hw_write_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regmap:regmap_reg_read",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regmap:regmap_reg_read_cache",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regmap:regmap_reg_write",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regulator:regulator_bypass_disable",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regulator:regulator_bypass_disable_complete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regulator:regulator_bypass_enable",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regulator:regulator_bypass_enable_complete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regulator:regulator_disable",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regulator:regulator_disable_complete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regulator:regulator_enable",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regulator:regulator_enable_complete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regulator:regulator_enable_delay",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regulator:regulator_set_voltage",
	"EventType": "Tracepoint event"
},
{
	"EventName": "regulator:regulator_set_voltage_complete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "resctrl:pseudo_lock_l2",
	"EventType": "Tracepoint event"
},
{
	"EventName": "resctrl:pseudo_lock_l3",
	"EventType": "Tracepoint event"
},
{
	"EventName": "resctrl:pseudo_lock_mem_latency",
	"EventType": "Tracepoint event"
},
{
	"EventName": "rpm:rpm_idle",
	"EventType": "Tracepoint event"
},
{
	"EventName": "rpm:rpm_resume",
	"EventType": "Tracepoint event"
},
{
	"EventName": "rpm:rpm_return_int",
	"EventType": "Tracepoint event"
},
{
	"EventName": "rpm:rpm_suspend",
	"EventType": "Tracepoint event"
},
{
	"EventName": "rpm:rpm_usage",
	"EventType": "Tracepoint event"
},
{
	"EventName": "rseq:rseq_ip_fixup",
	"EventType": "Tracepoint event"
},
{
	"EventName": "rseq:rseq_update",
	"EventType": "Tracepoint event"
},
{
	"EventName": "rtc:rtc_alarm_irq_enable",
	"EventType": "Tracepoint event"
},
{
	"EventName": "rtc:rtc_irq_set_freq",
	"EventType": "Tracepoint event"
},
{
	"EventName": "rtc:rtc_irq_set_state",
	"EventType": "Tracepoint event"
},
{
	"EventName": "rtc:rtc_read_alarm",
	"EventType": "Tracepoint event"
},
{
	"EventName": "rtc:rtc_read_offset",
	"EventType": "Tracepoint event"
},
{
	"EventName": "rtc:rtc_read_time",
	"EventType": "Tracepoint event"
},
{
	"EventName": "rtc:rtc_set_alarm",
	"EventType": "Tracepoint event"
},
{
	"EventName": "rtc:rtc_set_offset",
	"EventType": "Tracepoint event"
},
{
	"EventName": "rtc:rtc_set_time",
	"EventType": "Tracepoint event"
},
{
	"EventName": "rtc:rtc_timer_dequeue",
	"EventType": "Tracepoint event"
},
{
	"EventName": "rtc:rtc_timer_enqueue",
	"EventType": "Tracepoint event"
},
{
	"EventName": "rtc:rtc_timer_fired",
	"EventType": "Tracepoint event"
},
{
	"EventName": "rv:error_wwnr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "rv:event_wwnr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_kthread_stop",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_kthread_stop_ret",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_kthread_work_execute_end",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_kthread_work_execute_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_kthread_work_queue_work",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_migrate_task",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_move_numa",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_pi_setprio",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_process_exec",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_process_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_process_fork",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_process_free",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_process_hang",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_process_wait",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_stat_blocked",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_stat_iowait",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_stat_runtime",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_stat_sleep",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_stat_wait",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_stick_numa",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_swap_numa",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_switch",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_wait_task",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_wake_idle_without_ipi",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_wakeup",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_wakeup_new",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sched:sched_waking",
	"EventType": "Tracepoint event"
},
{
	"EventName": "scsi:scsi_dispatch_cmd_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "scsi:scsi_dispatch_cmd_error",
	"EventType": "Tracepoint event"
},
{
	"EventName": "scsi:scsi_dispatch_cmd_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "scsi:scsi_dispatch_cmd_timeout",
	"EventType": "Tracepoint event"
},
{
	"EventName": "scsi:scsi_eh_wakeup",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sd:scsi_prepare_zone_append",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sd:scsi_zone_wp_update",
	"EventType": "Tracepoint event"
},
{
	"EventName": "signal:signal_deliver",
	"EventType": "Tracepoint event"
},
{
	"EventName": "signal:signal_generate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "skb:consume_skb",
	"EventType": "Tracepoint event"
},
{
	"EventName": "skb:kfree_skb",
	"EventType": "Tracepoint event"
},
{
	"EventName": "skb:skb_copy_datagram_iovec",
	"EventType": "Tracepoint event"
},
{
	"EventName": "smbus:smbus_read",
	"EventType": "Tracepoint event"
},
{
	"EventName": "smbus:smbus_reply",
	"EventType": "Tracepoint event"
},
{
	"EventName": "smbus:smbus_result",
	"EventType": "Tracepoint event"
},
{
	"EventName": "smbus:smbus_write",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sock:inet_sk_error_report",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sock:inet_sock_set_state",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sock:sk_data_ready",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sock:sock_exceed_buf_limit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sock:sock_rcvqueue_full",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sock:sock_recv_length",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sock:sock_send_length",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sof:sof_ipc3_period_elapsed_position",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sof:sof_ipc4_fw_config",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sof:sof_pcm_pointer_position",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sof:sof_stream_position_ipc_rx",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sof:sof_widget_free",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sof:sof_widget_setup",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sof_intel:sof_intel_D0I3C_updated",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sof_intel:sof_intel_hda_dsp_check_stream_irq",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sof_intel:sof_intel_hda_dsp_pcm",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sof_intel:sof_intel_hda_dsp_stream_status",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sof_intel:sof_intel_hda_irq",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sof_intel:sof_intel_hda_irq_ipc_check",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sof_intel:sof_intel_ipc_firmware_initiated",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sof_intel:sof_intel_ipc_firmware_response",
	"EventType": "Tracepoint event"
},
{
	"EventName": "spi:spi_controller_busy",
	"EventType": "Tracepoint event"
},
{
	"EventName": "spi:spi_controller_idle",
	"EventType": "Tracepoint event"
},
{
	"EventName": "spi:spi_message_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "spi:spi_message_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "spi:spi_message_submit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "spi:spi_set_cs",
	"EventType": "Tracepoint event"
},
{
	"EventName": "spi:spi_setup",
	"EventType": "Tracepoint event"
},
{
	"EventName": "spi:spi_transfer_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "spi:spi_transfer_stop",
	"EventType": "Tracepoint event"
},
{
	"EventName": "swiotlb:swiotlb_bounced",
	"EventType": "Tracepoint event"
},
{
	"EventName": "sync_trace:sync_timeline",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_accept",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_accept4",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_access",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_acct",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_add_key",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_adjtimex",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_alarm",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_arch_prctl",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_bind",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_bpf",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_brk",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_cachestat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_capget",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_capset",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_chdir",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_chmod",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_chown",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_chroot",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_clock_adjtime",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_clock_getres",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_clock_gettime",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_clock_nanosleep",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_clock_settime",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_clone",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_clone3",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_close",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_close_range",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_connect",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_copy_file_range",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_creat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_delete_module",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_dup",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_dup2",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_dup3",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_epoll_create",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_epoll_create1",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_epoll_ctl",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_epoll_pwait",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_epoll_pwait2",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_epoll_wait",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_eventfd",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_eventfd2",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_execve",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_execveat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_exit_group",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_faccessat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_faccessat2",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_fadvise64",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_fallocate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_fanotify_init",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_fanotify_mark",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_fchdir",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_fchmod",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_fchmodat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_fchown",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_fchownat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_fcntl",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_fdatasync",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_fgetxattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_finit_module",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_flistxattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_flock",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_fork",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_fremovexattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_fsconfig",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_fsetxattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_fsmount",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_fsopen",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_fspick",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_fstatfs",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_fsync",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_ftruncate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_futex",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_futex_waitv",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_futimesat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_get_mempolicy",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_get_robust_list",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_getcpu",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_getcwd",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_getdents",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_getdents64",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_getegid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_geteuid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_getgid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_getgroups",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_getitimer",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_getpeername",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_getpgid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_getpgrp",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_getpid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_getppid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_getpriority",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_getrandom",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_getresgid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_getresuid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_getrlimit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_getrusage",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_getsid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_getsockname",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_getsockopt",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_gettid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_gettimeofday",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_getuid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_getxattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_init_module",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_inotify_add_watch",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_inotify_init",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_inotify_init1",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_inotify_rm_watch",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_io_cancel",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_io_destroy",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_io_getevents",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_io_pgetevents",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_io_setup",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_io_submit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_io_uring_enter",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_io_uring_register",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_io_uring_setup",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_ioctl",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_ioperm",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_iopl",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_ioprio_get",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_ioprio_set",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_kcmp",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_kexec_file_load",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_kexec_load",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_keyctl",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_kill",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_landlock_add_rule",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_landlock_create_ruleset",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_landlock_restrict_self",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_lchown",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_lgetxattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_link",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_linkat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_listen",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_listxattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_llistxattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_lremovexattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_lseek",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_lsetxattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_madvise",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_mbind",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_membarrier",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_memfd_create",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_memfd_secret",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_migrate_pages",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_mincore",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_mkdir",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_mkdirat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_mknod",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_mknodat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_mlock",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_mlock2",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_mlockall",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_mmap",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_modify_ldt",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_mount",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_mount_setattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_move_mount",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_move_pages",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_mprotect",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_mq_getsetattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_mq_notify",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_mq_open",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_mq_timedreceive",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_mq_timedsend",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_mq_unlink",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_mremap",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_msgctl",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_msgget",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_msgrcv",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_msgsnd",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_msync",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_munlock",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_munlockall",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_munmap",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_name_to_handle_at",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_nanosleep",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_newfstat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_newfstatat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_newlstat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_newstat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_newuname",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_open",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_open_by_handle_at",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_open_tree",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_openat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_openat2",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_pause",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_perf_event_open",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_personality",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_pidfd_getfd",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_pidfd_open",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_pidfd_send_signal",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_pipe",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_pipe2",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_pivot_root",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_pkey_alloc",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_pkey_free",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_pkey_mprotect",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_poll",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_ppoll",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_prctl",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_pread64",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_preadv",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_preadv2",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_prlimit64",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_process_madvise",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_process_mrelease",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_process_vm_readv",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_process_vm_writev",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_pselect6",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_ptrace",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_pwrite64",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_pwritev",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_pwritev2",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_quotactl",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_quotactl_fd",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_read",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_readahead",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_readlink",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_readlinkat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_readv",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_reboot",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_recvfrom",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_recvmmsg",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_recvmsg",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_remap_file_pages",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_removexattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_rename",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_renameat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_renameat2",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_request_key",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_restart_syscall",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_rmdir",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_rseq",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_rt_sigaction",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_rt_sigpending",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_rt_sigprocmask",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_rt_sigqueueinfo",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_rt_sigreturn",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_rt_sigsuspend",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_rt_sigtimedwait",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_rt_tgsigqueueinfo",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_sched_get_priority_max",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_sched_get_priority_min",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_sched_getaffinity",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_sched_getattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_sched_getparam",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_sched_getscheduler",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_sched_rr_get_interval",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_sched_setaffinity",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_sched_setattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_sched_setparam",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_sched_setscheduler",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_sched_yield",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_seccomp",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_select",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_semctl",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_semget",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_semop",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_semtimedop",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_sendfile64",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_sendmmsg",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_sendmsg",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_sendto",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_set_mempolicy",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_set_mempolicy_home_node",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_set_robust_list",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_set_tid_address",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_setdomainname",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_setfsgid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_setfsuid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_setgid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_setgroups",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_sethostname",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_setitimer",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_setns",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_setpgid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_setpriority",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_setregid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_setresgid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_setresuid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_setreuid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_setrlimit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_setsid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_setsockopt",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_settimeofday",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_setuid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_setxattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_shmat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_shmctl",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_shmdt",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_shmget",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_shutdown",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_sigaltstack",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_signalfd",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_signalfd4",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_socket",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_socketpair",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_splice",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_statfs",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_statx",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_swapoff",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_swapon",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_symlink",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_symlinkat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_sync",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_sync_file_range",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_syncfs",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_sysfs",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_sysinfo",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_syslog",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_tee",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_tgkill",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_time",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_timer_create",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_timer_delete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_timer_getoverrun",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_timer_gettime",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_timer_settime",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_timerfd_create",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_timerfd_gettime",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_timerfd_settime",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_times",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_tkill",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_truncate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_umask",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_umount",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_unlink",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_unlinkat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_unshare",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_userfaultfd",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_ustat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_utime",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_utimensat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_utimes",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_vfork",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_vhangup",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_vmsplice",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_wait4",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_waitid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_write",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_enter_writev",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_accept",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_accept4",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_access",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_acct",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_add_key",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_adjtimex",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_alarm",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_arch_prctl",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_bind",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_bpf",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_brk",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_cachestat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_capget",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_capset",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_chdir",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_chmod",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_chown",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_chroot",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_clock_adjtime",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_clock_getres",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_clock_gettime",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_clock_nanosleep",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_clock_settime",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_clone",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_clone3",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_close",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_close_range",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_connect",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_copy_file_range",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_creat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_delete_module",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_dup",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_dup2",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_dup3",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_epoll_create",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_epoll_create1",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_epoll_ctl",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_epoll_pwait",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_epoll_pwait2",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_epoll_wait",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_eventfd",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_eventfd2",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_execve",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_execveat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_exit_group",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_faccessat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_faccessat2",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_fadvise64",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_fallocate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_fanotify_init",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_fanotify_mark",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_fchdir",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_fchmod",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_fchmodat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_fchown",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_fchownat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_fcntl",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_fdatasync",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_fgetxattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_finit_module",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_flistxattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_flock",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_fork",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_fremovexattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_fsconfig",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_fsetxattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_fsmount",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_fsopen",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_fspick",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_fstatfs",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_fsync",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_ftruncate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_futex",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_futex_waitv",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_futimesat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_get_mempolicy",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_get_robust_list",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_getcpu",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_getcwd",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_getdents",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_getdents64",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_getegid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_geteuid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_getgid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_getgroups",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_getitimer",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_getpeername",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_getpgid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_getpgrp",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_getpid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_getppid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_getpriority",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_getrandom",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_getresgid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_getresuid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_getrlimit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_getrusage",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_getsid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_getsockname",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_getsockopt",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_gettid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_gettimeofday",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_getuid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_getxattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_init_module",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_inotify_add_watch",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_inotify_init",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_inotify_init1",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_inotify_rm_watch",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_io_cancel",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_io_destroy",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_io_getevents",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_io_pgetevents",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_io_setup",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_io_submit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_io_uring_enter",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_io_uring_register",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_io_uring_setup",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_ioctl",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_ioperm",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_iopl",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_ioprio_get",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_ioprio_set",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_kcmp",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_kexec_file_load",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_kexec_load",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_keyctl",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_kill",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_landlock_add_rule",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_landlock_create_ruleset",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_landlock_restrict_self",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_lchown",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_lgetxattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_link",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_linkat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_listen",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_listxattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_llistxattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_lremovexattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_lseek",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_lsetxattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_madvise",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_mbind",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_membarrier",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_memfd_create",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_memfd_secret",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_migrate_pages",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_mincore",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_mkdir",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_mkdirat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_mknod",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_mknodat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_mlock",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_mlock2",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_mlockall",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_mmap",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_modify_ldt",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_mount",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_mount_setattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_move_mount",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_move_pages",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_mprotect",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_mq_getsetattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_mq_notify",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_mq_open",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_mq_timedreceive",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_mq_timedsend",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_mq_unlink",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_mremap",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_msgctl",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_msgget",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_msgrcv",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_msgsnd",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_msync",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_munlock",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_munlockall",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_munmap",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_name_to_handle_at",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_nanosleep",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_newfstat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_newfstatat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_newlstat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_newstat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_newuname",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_open",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_open_by_handle_at",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_open_tree",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_openat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_openat2",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_pause",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_perf_event_open",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_personality",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_pidfd_getfd",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_pidfd_open",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_pidfd_send_signal",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_pipe",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_pipe2",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_pivot_root",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_pkey_alloc",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_pkey_free",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_pkey_mprotect",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_poll",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_ppoll",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_prctl",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_pread64",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_preadv",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_preadv2",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_prlimit64",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_process_madvise",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_process_mrelease",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_process_vm_readv",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_process_vm_writev",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_pselect6",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_ptrace",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_pwrite64",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_pwritev",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_pwritev2",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_quotactl",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_quotactl_fd",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_read",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_readahead",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_readlink",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_readlinkat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_readv",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_reboot",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_recvfrom",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_recvmmsg",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_recvmsg",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_remap_file_pages",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_removexattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_rename",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_renameat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_renameat2",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_request_key",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_restart_syscall",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_rmdir",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_rseq",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_rt_sigaction",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_rt_sigpending",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_rt_sigprocmask",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_rt_sigqueueinfo",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_rt_sigreturn",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_rt_sigsuspend",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_rt_sigtimedwait",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_rt_tgsigqueueinfo",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_sched_get_priority_max",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_sched_get_priority_min",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_sched_getaffinity",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_sched_getattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_sched_getparam",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_sched_getscheduler",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_sched_rr_get_interval",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_sched_setaffinity",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_sched_setattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_sched_setparam",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_sched_setscheduler",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_sched_yield",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_seccomp",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_select",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_semctl",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_semget",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_semop",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_semtimedop",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_sendfile64",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_sendmmsg",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_sendmsg",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_sendto",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_set_mempolicy",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_set_mempolicy_home_node",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_set_robust_list",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_set_tid_address",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_setdomainname",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_setfsgid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_setfsuid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_setgid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_setgroups",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_sethostname",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_setitimer",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_setns",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_setpgid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_setpriority",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_setregid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_setresgid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_setresuid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_setreuid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_setrlimit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_setsid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_setsockopt",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_settimeofday",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_setuid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_setxattr",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_shmat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_shmctl",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_shmdt",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_shmget",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_shutdown",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_sigaltstack",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_signalfd",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_signalfd4",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_socket",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_socketpair",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_splice",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_statfs",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_statx",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_swapoff",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_swapon",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_symlink",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_symlinkat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_sync",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_sync_file_range",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_syncfs",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_sysfs",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_sysinfo",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_syslog",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_tee",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_tgkill",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_time",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_timer_create",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_timer_delete",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_timer_getoverrun",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_timer_gettime",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_timer_settime",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_timerfd_create",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_timerfd_gettime",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_timerfd_settime",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_times",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_tkill",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_truncate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_umask",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_umount",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_unlink",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_unlinkat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_unshare",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_userfaultfd",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_ustat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_utime",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_utimensat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_utimes",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_vfork",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_vhangup",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_vmsplice",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_wait4",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_waitid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_write",
	"EventType": "Tracepoint event"
},
{
	"EventName": "syscalls:sys_exit_writev",
	"EventType": "Tracepoint event"
},
{
	"EventName": "task:task_newtask",
	"EventType": "Tracepoint event"
},
{
	"EventName": "task:task_rename",
	"EventType": "Tracepoint event"
},
{
	"EventName": "tcp:tcp_bad_csum",
	"EventType": "Tracepoint event"
},
{
	"EventName": "tcp:tcp_cong_state_set",
	"EventType": "Tracepoint event"
},
{
	"EventName": "tcp:tcp_destroy_sock",
	"EventType": "Tracepoint event"
},
{
	"EventName": "tcp:tcp_probe",
	"EventType": "Tracepoint event"
},
{
	"EventName": "tcp:tcp_rcv_space_adjust",
	"EventType": "Tracepoint event"
},
{
	"EventName": "tcp:tcp_receive_reset",
	"EventType": "Tracepoint event"
},
{
	"EventName": "tcp:tcp_retransmit_skb",
	"EventType": "Tracepoint event"
},
{
	"EventName": "tcp:tcp_retransmit_synack",
	"EventType": "Tracepoint event"
},
{
	"EventName": "tcp:tcp_send_reset",
	"EventType": "Tracepoint event"
},
{
	"EventName": "thermal:cdev_update",
	"EventType": "Tracepoint event"
},
{
	"EventName": "thermal:thermal_power_devfreq_get_power",
	"EventType": "Tracepoint event"
},
{
	"EventName": "thermal:thermal_power_devfreq_limit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "thermal:thermal_temperature",
	"EventType": "Tracepoint event"
},
{
	"EventName": "thermal:thermal_zone_trip",
	"EventType": "Tracepoint event"
},
{
	"EventName": "thermal_power_allocator:thermal_power_allocator",
	"EventType": "Tracepoint event"
},
{
	"EventName": "thermal_power_allocator:thermal_power_allocator_pid",
	"EventType": "Tracepoint event"
},
{
	"EventName": "thp:hugepage_set_pmd",
	"EventType": "Tracepoint event"
},
{
	"EventName": "thp:hugepage_update",
	"EventType": "Tracepoint event"
},
{
	"EventName": "thp:remove_migration_pmd",
	"EventType": "Tracepoint event"
},
{
	"EventName": "thp:set_migration_pmd",
	"EventType": "Tracepoint event"
},
{
	"EventName": "timer:hrtimer_cancel",
	"EventType": "Tracepoint event"
},
{
	"EventName": "timer:hrtimer_expire_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "timer:hrtimer_expire_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "timer:hrtimer_init",
	"EventType": "Tracepoint event"
},
{
	"EventName": "timer:hrtimer_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "timer:itimer_expire",
	"EventType": "Tracepoint event"
},
{
	"EventName": "timer:itimer_state",
	"EventType": "Tracepoint event"
},
{
	"EventName": "timer:tick_stop",
	"EventType": "Tracepoint event"
},
{
	"EventName": "timer:timer_cancel",
	"EventType": "Tracepoint event"
},
{
	"EventName": "timer:timer_expire_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "timer:timer_expire_exit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "timer:timer_init",
	"EventType": "Tracepoint event"
},
{
	"EventName": "timer:timer_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "tlb:tlb_flush",
	"EventType": "Tracepoint event"
},
{
	"EventName": "udp:udp_fail_queue_rcv_skb",
	"EventType": "Tracepoint event"
},
{
	"EventName": "v4l2:v4l2_dqbuf",
	"EventType": "Tracepoint event"
},
{
	"EventName": "v4l2:v4l2_qbuf",
	"EventType": "Tracepoint event"
},
{
	"EventName": "v4l2:vb2_v4l2_buf_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "v4l2:vb2_v4l2_buf_queue",
	"EventType": "Tracepoint event"
},
{
	"EventName": "v4l2:vb2_v4l2_dqbuf",
	"EventType": "Tracepoint event"
},
{
	"EventName": "v4l2:vb2_v4l2_qbuf",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vb2:vb2_buf_done",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vb2:vb2_buf_queue",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vb2:vb2_dqbuf",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vb2:vb2_qbuf",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vmalloc:alloc_vmap_area",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vmalloc:free_vmap_area_noflush",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vmalloc:purge_vmap_area_lazy",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vmscan:mm_shrink_slab_end",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vmscan:mm_shrink_slab_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vmscan:mm_vmscan_direct_reclaim_begin",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vmscan:mm_vmscan_direct_reclaim_end",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vmscan:mm_vmscan_kswapd_sleep",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vmscan:mm_vmscan_kswapd_wake",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vmscan:mm_vmscan_lru_isolate",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vmscan:mm_vmscan_lru_shrink_active",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vmscan:mm_vmscan_lru_shrink_inactive",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vmscan:mm_vmscan_memcg_reclaim_begin",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vmscan:mm_vmscan_memcg_reclaim_end",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vmscan:mm_vmscan_memcg_softlimit_reclaim_begin",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vmscan:mm_vmscan_memcg_softlimit_reclaim_end",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vmscan:mm_vmscan_node_reclaim_begin",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vmscan:mm_vmscan_node_reclaim_end",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vmscan:mm_vmscan_throttled",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vmscan:mm_vmscan_wakeup_kswapd",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vmscan:mm_vmscan_write_folio",
	"EventType": "Tracepoint event"
},
{
	"EventName": "vsyscall:emulate_vsyscall",
	"EventType": "Tracepoint event"
},
{
	"EventName": "watchdog:watchdog_ping",
	"EventType": "Tracepoint event"
},
{
	"EventName": "watchdog:watchdog_set_timeout",
	"EventType": "Tracepoint event"
},
{
	"EventName": "watchdog:watchdog_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "watchdog:watchdog_stop",
	"EventType": "Tracepoint event"
},
{
	"EventName": "wbt:wbt_lat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "wbt:wbt_stat",
	"EventType": "Tracepoint event"
},
{
	"EventName": "wbt:wbt_step",
	"EventType": "Tracepoint event"
},
{
	"EventName": "wbt:wbt_timer",
	"EventType": "Tracepoint event"
},
{
	"EventName": "workqueue:workqueue_activate_work",
	"EventType": "Tracepoint event"
},
{
	"EventName": "workqueue:workqueue_execute_end",
	"EventType": "Tracepoint event"
},
{
	"EventName": "workqueue:workqueue_execute_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "workqueue:workqueue_queue_work",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:balance_dirty_pages",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:bdi_dirty_ratelimit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:flush_foreign",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:folio_wait_writeback",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:global_dirty_state",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:inode_foreign_history",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:inode_switch_wbs",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:sb_clear_inode_writeback",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:sb_mark_inode_writeback",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:track_foreign_dirty",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:wbc_writepage",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:writeback_bdi_register",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:writeback_dirty_folio",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:writeback_dirty_inode",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:writeback_dirty_inode_enqueue",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:writeback_dirty_inode_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:writeback_exec",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:writeback_lazytime",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:writeback_lazytime_iput",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:writeback_mark_inode_dirty",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:writeback_pages_written",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:writeback_queue",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:writeback_queue_io",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:writeback_sb_inodes_requeue",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:writeback_single_inode",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:writeback_single_inode_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:writeback_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:writeback_wait",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:writeback_wake_background",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:writeback_write_inode",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:writeback_write_inode_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "writeback:writeback_written",
	"EventType": "Tracepoint event"
},
{
	"EventName": "x86_fpu:x86_fpu_after_restore",
	"EventType": "Tracepoint event"
},
{
	"EventName": "x86_fpu:x86_fpu_after_save",
	"EventType": "Tracepoint event"
},
{
	"EventName": "x86_fpu:x86_fpu_before_restore",
	"EventType": "Tracepoint event"
},
{
	"EventName": "x86_fpu:x86_fpu_before_save",
	"EventType": "Tracepoint event"
},
{
	"EventName": "x86_fpu:x86_fpu_copy_dst",
	"EventType": "Tracepoint event"
},
{
	"EventName": "x86_fpu:x86_fpu_copy_src",
	"EventType": "Tracepoint event"
},
{
	"EventName": "x86_fpu:x86_fpu_dropped",
	"EventType": "Tracepoint event"
},
{
	"EventName": "x86_fpu:x86_fpu_init_state",
	"EventType": "Tracepoint event"
},
{
	"EventName": "x86_fpu:x86_fpu_regs_activated",
	"EventType": "Tracepoint event"
},
{
	"EventName": "x86_fpu:x86_fpu_regs_deactivated",
	"EventType": "Tracepoint event"
},
{
	"EventName": "x86_fpu:x86_fpu_xstate_check_failed",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xdp:mem_connect",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xdp:mem_disconnect",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xdp:mem_return_failed",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xdp:xdp_bulk_tx",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xdp:xdp_cpumap_enqueue",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xdp:xdp_cpumap_kthread",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xdp:xdp_devmap_xmit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xdp:xdp_exception",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xdp:xdp_redirect",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xdp:xdp_redirect_err",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xdp:xdp_redirect_map",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xdp:xdp_redirect_map_err",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_cpu_load_idt",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_cpu_set_ldt",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_cpu_write_gdt_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_cpu_write_idt_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_cpu_write_ldt_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_mc_batch",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_mc_callback",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_mc_entry",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_mc_entry_alloc",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_mc_extend_args",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_mc_flush",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_mc_flush_reason",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_mc_issue",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_mmu_alloc_ptpage",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_mmu_flush_tlb_multi",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_mmu_flush_tlb_one_user",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_mmu_pgd_pin",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_mmu_pgd_unpin",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_mmu_ptep_modify_prot_commit",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_mmu_ptep_modify_prot_start",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_mmu_release_ptpage",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_mmu_set_p4d",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_mmu_set_pmd",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_mmu_set_pte",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_mmu_set_pud",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xen:xen_mmu_write_cr3",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_add_endpoint",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_address_ctrl_ctx",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_address_ctx",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_alloc_dev",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_alloc_virt_device",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_configure_endpoint",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_configure_endpoint_ctrl_ctx",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_dbc_alloc_request",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_dbc_free_request",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_dbc_gadget_ep_queue",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_dbc_giveback_request",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_dbc_handle_event",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_dbc_handle_transfer",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_dbc_queue_request",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_dbg_address",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_dbg_cancel_urb",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_dbg_context_change",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_dbg_init",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_dbg_quirks",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_dbg_reset_ep",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_dbg_ring_expansion",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_discover_or_reset_device",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_free_dev",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_free_virt_device",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_get_port_status",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_handle_cmd_addr_dev",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_handle_cmd_config_ep",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_handle_cmd_disable_slot",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_handle_cmd_reset_dev",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_handle_cmd_reset_ep",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_handle_cmd_set_deq",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_handle_cmd_set_deq_ep",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_handle_cmd_stop_ep",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_handle_command",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_handle_event",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_handle_port_status",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_handle_transfer",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_hub_status_data",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_inc_deq",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_inc_enq",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_queue_trb",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_ring_alloc",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_ring_ep_doorbell",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_ring_expansion",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_ring_free",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_ring_host_doorbell",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_setup_addressable_virt_device",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_setup_device",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_setup_device_slot",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_stop_device",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_urb_dequeue",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_urb_enqueue",
	"EventType": "Tracepoint event"
},
{
	"EventName": "xhci-hcd:xhci_urb_giveback",
	"EventType": "Tracepoint event"
},
{
	"MetricGroup": "Backend",
	"MetricName": "tma_core_bound",
	"MetricExpr": "tma_backend_bound - tma_memory_bound",
	"MetricThreshold": "tma_core_bound > 0.1 & tma_backend_bound > 0.2",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where Core non-memory issues were of a bottleneck",
	"PublicDescription": "This metric represents fraction of slots where Core non-memory issues were of a bottleneck.  Shortage in hardware compute resources; or dependencies in software's instructions are both categorized under Core Bound. Hence it may indicate the machine ran out of an out-of-order resource; certain execution units are overloaded or dependencies in program's data- or instruction-flow are limiting the performance (e.g. FP-chained long-latency arithmetic operations)"
},
{
	"MetricGroup": "Backend",
	"MetricName": "tma_info_core_ilp",
	"MetricExpr": "UOPS_EXECUTED.THREAD / (UOPS_EXECUTED.CORE_CYCLES_GE_1 / 2 if #SMT_on else UOPS_EXECUTED.CORE_CYCLES_GE_1)",
	"BriefDescription": "Instruction-Level-Parallelism (average number of uops executed when there is execution) per-core"
},
{
	"MetricGroup": "Backend",
	"MetricName": "tma_info_memory_l2mpki",
	"MetricExpr": "1e3 * MEM_LOAD_RETIRED.L2_MISS / INST_RETIRED.ANY",
	"BriefDescription": "L2 cache true misses per kilo instruction for retired demand loads"
},
{
	"MetricGroup": "Backend",
	"MetricName": "tma_memory_bound",
	"MetricExpr": "(CYCLE_ACTIVITY.STALLS_MEM_ANY + EXE_ACTIVITY.BOUND_ON_STORES) / (CYCLE_ACTIVITY.STALLS_TOTAL + (EXE_ACTIVITY.1_PORTS_UTIL + tma_retiring * EXE_ACTIVITY.2_PORTS_UTIL) + EXE_ACTIVITY.BOUND_ON_STORES) * tma_backend_bound",
	"MetricThreshold": "tma_memory_bound > 0.2 & tma_backend_bound > 0.2",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the Memory subsystem within the Backend was a bottleneck",
	"PublicDescription": "This metric represents fraction of slots the Memory subsystem within the Backend was a bottleneck.  Memory Bound estimates fraction of slots where pipeline is likely stalled due to demand load or store instructions. This accounts mainly for (1) non-completed in-flight memory demand loads which coincides with execution units starvation; in addition to (2) cases where stores could impose backpressure on the pipeline when many of them get buffered at the same time (less common out of the two)"
},
{
	"MetricGroup": "Bad",
	"MetricName": "tma_info_bad_spec_branch_misprediction_cost",
	"MetricExpr": "(tma_branch_mispredicts + tma_fetch_latency * tma_mispredicts_resteers / (tma_branch_resteers + tma_dsb_switches + tma_icache_misses + tma_itlb_misses + tma_lcp + tma_ms_switches)) * tma_info_thread_slots / BR_MISP_RETIRED.ALL_BRANCHES",
	"BriefDescription": "Branch Misprediction Cost: Fraction of TMA slots wasted per non-speculative branch misprediction (retired JEClear)",
	"PublicDescription": "Branch Misprediction Cost: Fraction of TMA slots wasted per non-speculative branch misprediction (retired JEClear). Related metrics: tma_branch_mispredicts, tma_info_bottleneck_mispredictions, tma_mispredicts_resteers"
},
{
	"MetricGroup": "Bad",
	"MetricName": "tma_info_bad_spec_ipmisp_indirect",
	"MetricExpr": "tma_info_inst_mix_instructions / (UOPS_RETIRED.RETIRE_SLOTS / UOPS_ISSUED.ANY * cpu@BR_MISP_EXEC.ALL_BRANCHES\\,umask\\=0xE4@)",
	"MetricThreshold": "tma_info_bad_spec_ipmisp_indirect < 1e3",
	"BriefDescription": "Instructions per retired mispredicts for indirect CALL or JMP branches (lower number means higher occurrence rate)"
},
{
	"MetricGroup": "Bad",
	"MetricName": "tma_info_bad_spec_ipmispredict",
	"MetricExpr": "INST_RETIRED.ANY / BR_MISP_RETIRED.ALL_BRANCHES",
	"MetricThreshold": "tma_info_bad_spec_ipmispredict < 200",
	"BriefDescription": "Number of Instructions per non-speculative Branch Misprediction (JEClear) (lower number means higher occurrence rate)"
},
{
	"MetricGroup": "Bad",
	"MetricName": "tma_info_bottleneck_mispredictions",
	"MetricExpr": "100 * (tma_branch_mispredicts + tma_fetch_latency * tma_mispredicts_resteers / (tma_branch_resteers + tma_dsb_switches + tma_icache_misses + tma_itlb_misses + tma_lcp + tma_ms_switches))",
	"MetricThreshold": "tma_info_bottleneck_mispredictions > 20",
	"BriefDescription": "Total pipeline cost of Branch Misprediction related bottlenecks",
	"PublicDescription": "Total pipeline cost of Branch Misprediction related bottlenecks. Related metrics: tma_branch_mispredicts, tma_info_bad_spec_branch_misprediction_cost, tma_mispredicts_resteers"
},
{
	"MetricGroup": "Bad",
	"MetricName": "tma_info_branches_callret",
	"MetricExpr": "(BR_INST_RETIRED.NEAR_CALL + BR_INST_RETIRED.NEAR_RETURN) / BR_INST_RETIRED.ALL_BRANCHES",
	"BriefDescription": "Fraction of branches that are CALL or RET"
},
{
	"MetricGroup": "Bad",
	"MetricName": "tma_info_branches_cond_nt",
	"MetricExpr": "BR_INST_RETIRED.NOT_TAKEN / BR_INST_RETIRED.ALL_BRANCHES",
	"BriefDescription": "Fraction of branches that are non-taken conditionals"
},
{
	"MetricGroup": "Bad",
	"MetricName": "tma_info_branches_cond_tk",
	"MetricExpr": "(BR_INST_RETIRED.CONDITIONAL - BR_INST_RETIRED.NOT_TAKEN) / BR_INST_RETIRED.ALL_BRANCHES",
	"BriefDescription": "Fraction of branches that are taken conditionals"
},
{
	"MetricGroup": "Bad",
	"MetricName": "tma_info_branches_jump",
	"MetricExpr": "(BR_INST_RETIRED.NEAR_TAKEN - (BR_INST_RETIRED.CONDITIONAL - BR_INST_RETIRED.NOT_TAKEN) - 2 * BR_INST_RETIRED.NEAR_CALL) / BR_INST_RETIRED.ALL_BRANCHES",
	"BriefDescription": "Fraction of branches that are unconditional (direct or indirect) jumps"
},
{
	"MetricGroup": "BadSpec",
	"MetricName": "tma_branch_mispredicts",
	"MetricExpr": "BR_MISP_RETIRED.ALL_BRANCHES / (BR_MISP_RETIRED.ALL_BRANCHES + MACHINE_CLEARS.COUNT) * tma_bad_speculation",
	"MetricThreshold": "tma_branch_mispredicts > 0.1 & tma_bad_speculation > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU has wasted due to Branch Misprediction",
	"PublicDescription": "This metric represents fraction of slots the CPU has wasted due to Branch Misprediction.  These slots are either wasted by uops fetched from an incorrectly speculated program path; or stalls when the out-of-order part of the machine needs to recover its state from a speculative path. Sample with: BR_MISP_RETIRED.ALL_BRANCHES. Related metrics: tma_info_bad_spec_branch_misprediction_cost, tma_info_bottleneck_mispredictions, tma_mispredicts_resteers"
},
{
	"MetricGroup": "BadSpec",
	"MetricName": "tma_clears_resteers",
	"MetricExpr": "(1 - BR_MISP_RETIRED.ALL_BRANCHES / (BR_MISP_RETIRED.ALL_BRANCHES + MACHINE_CLEARS.COUNT)) * INT_MISC.CLEAR_RESTEER_CYCLES / tma_info_thread_clks",
	"MetricThreshold": "tma_clears_resteers > 0.05 & (tma_branch_resteers > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Machine Clears",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Machine Clears. Sample with: INT_MISC.CLEAR_RESTEER_CYCLES. Related metrics: tma_l1_bound, tma_machine_clears, tma_microcode_sequencer, tma_ms_switches"
},
{
	"MetricGroup": "BadSpec",
	"MetricName": "tma_info_bad_spec_ipmispredict",
	"MetricExpr": "INST_RETIRED.ANY / BR_MISP_RETIRED.ALL_BRANCHES",
	"MetricThreshold": "tma_info_bad_spec_ipmispredict < 200",
	"BriefDescription": "Number of Instructions per non-speculative Branch Misprediction (JEClear) (lower number means higher occurrence rate)"
},
{
	"MetricGroup": "BadSpec",
	"MetricName": "tma_info_bottleneck_mispredictions",
	"MetricExpr": "100 * (tma_branch_mispredicts + tma_fetch_latency * tma_mispredicts_resteers / (tma_branch_resteers + tma_dsb_switches + tma_icache_misses + tma_itlb_misses + tma_lcp + tma_ms_switches))",
	"MetricThreshold": "tma_info_bottleneck_mispredictions > 20",
	"BriefDescription": "Total pipeline cost of Branch Misprediction related bottlenecks",
	"PublicDescription": "Total pipeline cost of Branch Misprediction related bottlenecks. Related metrics: tma_branch_mispredicts, tma_info_bad_spec_branch_misprediction_cost, tma_mispredicts_resteers"
},
{
	"MetricGroup": "BadSpec",
	"MetricName": "tma_machine_clears",
	"MetricExpr": "tma_bad_speculation - tma_branch_mispredicts",
	"MetricThreshold": "tma_machine_clears > 0.1 & tma_bad_speculation > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU has wasted due to Machine Clears",
	"PublicDescription": "This metric represents fraction of slots the CPU has wasted due to Machine Clears.  These slots are either wasted by uops fetched prior to the clear; or stalls the out-of-order portion of the machine needs to recover its state after the clear. For example; this can happen due to memory ordering Nukes (e.g. Memory Disambiguation) or Self-Modifying-Code (SMC) nukes. Sample with: MACHINE_CLEARS.COUNT. Related metrics: tma_clears_resteers, tma_contested_accesses, tma_data_sharing, tma_false_sharing, tma_l1_bound, tma_microcode_sequencer, tma_ms_switches, tma_remote_cache"
},
{
	"MetricGroup": "BadSpec",
	"MetricName": "tma_mispredicts_resteers",
	"MetricExpr": "BR_MISP_RETIRED.ALL_BRANCHES / (BR_MISP_RETIRED.ALL_BRANCHES + MACHINE_CLEARS.COUNT) * INT_MISC.CLEAR_RESTEER_CYCLES / tma_info_thread_clks",
	"MetricThreshold": "tma_mispredicts_resteers > 0.05 & (tma_branch_resteers > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Branch Misprediction at execution stage",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Branch Misprediction at execution stage. Sample with: INT_MISC.CLEAR_RESTEER_CYCLES. Related metrics: tma_branch_mispredicts, tma_info_bad_spec_branch_misprediction_cost, tma_info_bottleneck_mispredictions"
},
{
	"MetricGroup": "BigFoot",
	"MetricName": "tma_icache_misses",
	"MetricExpr": "(ICACHE_16B.IFDATA_STALL + 2 * cpu@ICACHE_16B.IFDATA_STALL\\,cmask\\=1\\,edge@) / tma_info_thread_clks",
	"MetricThreshold": "tma_icache_misses > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to instruction cache misses",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to instruction cache misses. Sample with: FRONTEND_RETIRED.L2_MISS_PS;FRONTEND_RETIRED.L1I_MISS_PS"
},
{
	"MetricGroup": "BigFoot",
	"MetricName": "tma_info_bottleneck_big_code",
	"MetricExpr": "100 * tma_fetch_latency * (tma_itlb_misses + tma_icache_misses + tma_unknown_branches) / (tma_branch_resteers + tma_dsb_switches + tma_icache_misses + tma_itlb_misses + tma_lcp + tma_ms_switches)",
	"MetricThreshold": "tma_info_bottleneck_big_code > 20",
	"BriefDescription": "Total pipeline cost of instruction fetch related bottlenecks by large code footprint programs (i-side cache; TLB and BTB misses)",
	"PublicDescription": "Total pipeline cost of instruction fetch related bottlenecks by large code footprint programs (i-side cache; TLB and BTB misses). Related metrics: tma_info_bottleneck_branching_overhead"
},
{
	"MetricGroup": "BigFoot",
	"MetricName": "tma_itlb_misses",
	"MetricExpr": "ICACHE_64B.IFTAG_STALL / tma_info_thread_clks",
	"MetricThreshold": "tma_itlb_misses > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Instruction TLB (ITLB) misses",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to Instruction TLB (ITLB) misses. Sample with: FRONTEND_RETIRED.STLB_MISS_PS;FRONTEND_RETIRED.ITLB_MISS_PS"
},
{
	"MetricGroup": "BigFoot",
	"MetricName": "tma_unknown_branches",
	"MetricExpr": "9 * BACLEARS.ANY / tma_info_thread_clks",
	"MetricThreshold": "tma_unknown_branches > 0.05 & (tma_branch_resteers > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to new branch address clears",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to new branch address clears. These are fetched branches the Branch Prediction Unit was unable to recognize (e.g. first time the branch is fetched or hitting BTB capacity limit). Sample with: BACLEARS.ANY"
},
{
	"MetricGroup": "BrMispredicts",
	"MetricName": "tma_branch_mispredicts",
	"MetricExpr": "BR_MISP_RETIRED.ALL_BRANCHES / (BR_MISP_RETIRED.ALL_BRANCHES + MACHINE_CLEARS.COUNT) * tma_bad_speculation",
	"MetricThreshold": "tma_branch_mispredicts > 0.1 & tma_bad_speculation > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU has wasted due to Branch Misprediction",
	"PublicDescription": "This metric represents fraction of slots the CPU has wasted due to Branch Misprediction.  These slots are either wasted by uops fetched from an incorrectly speculated program path; or stalls when the out-of-order part of the machine needs to recover its state from a speculative path. Sample with: BR_MISP_RETIRED.ALL_BRANCHES. Related metrics: tma_info_bad_spec_branch_misprediction_cost, tma_info_bottleneck_mispredictions, tma_mispredicts_resteers"
},
{
	"MetricGroup": "BrMispredicts",
	"MetricName": "tma_info_bad_spec_branch_misprediction_cost",
	"MetricExpr": "(tma_branch_mispredicts + tma_fetch_latency * tma_mispredicts_resteers / (tma_branch_resteers + tma_dsb_switches + tma_icache_misses + tma_itlb_misses + tma_lcp + tma_ms_switches)) * tma_info_thread_slots / BR_MISP_RETIRED.ALL_BRANCHES",
	"BriefDescription": "Branch Misprediction Cost: Fraction of TMA slots wasted per non-speculative branch misprediction (retired JEClear)",
	"PublicDescription": "Branch Misprediction Cost: Fraction of TMA slots wasted per non-speculative branch misprediction (retired JEClear). Related metrics: tma_branch_mispredicts, tma_info_bottleneck_mispredictions, tma_mispredicts_resteers"
},
{
	"MetricGroup": "BrMispredicts",
	"MetricName": "tma_info_bad_spec_ipmisp_indirect",
	"MetricExpr": "tma_info_inst_mix_instructions / (UOPS_RETIRED.RETIRE_SLOTS / UOPS_ISSUED.ANY * cpu@BR_MISP_EXEC.ALL_BRANCHES\\,umask\\=0xE4@)",
	"MetricThreshold": "tma_info_bad_spec_ipmisp_indirect < 1e3",
	"BriefDescription": "Instructions per retired mispredicts for indirect CALL or JMP branches (lower number means higher occurrence rate)"
},
{
	"MetricGroup": "BrMispredicts",
	"MetricName": "tma_info_bad_spec_ipmispredict",
	"MetricExpr": "INST_RETIRED.ANY / BR_MISP_RETIRED.ALL_BRANCHES",
	"MetricThreshold": "tma_info_bad_spec_ipmispredict < 200",
	"BriefDescription": "Number of Instructions per non-speculative Branch Misprediction (JEClear) (lower number means higher occurrence rate)"
},
{
	"MetricGroup": "BrMispredicts",
	"MetricName": "tma_info_bottleneck_mispredictions",
	"MetricExpr": "100 * (tma_branch_mispredicts + tma_fetch_latency * tma_mispredicts_resteers / (tma_branch_resteers + tma_dsb_switches + tma_icache_misses + tma_itlb_misses + tma_lcp + tma_ms_switches))",
	"MetricThreshold": "tma_info_bottleneck_mispredictions > 20",
	"BriefDescription": "Total pipeline cost of Branch Misprediction related bottlenecks",
	"PublicDescription": "Total pipeline cost of Branch Misprediction related bottlenecks. Related metrics: tma_branch_mispredicts, tma_info_bad_spec_branch_misprediction_cost, tma_mispredicts_resteers"
},
{
	"MetricGroup": "BrMispredicts",
	"MetricName": "tma_mispredicts_resteers",
	"MetricExpr": "BR_MISP_RETIRED.ALL_BRANCHES / (BR_MISP_RETIRED.ALL_BRANCHES + MACHINE_CLEARS.COUNT) * INT_MISC.CLEAR_RESTEER_CYCLES / tma_info_thread_clks",
	"MetricThreshold": "tma_mispredicts_resteers > 0.05 & (tma_branch_resteers > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Branch Misprediction at execution stage",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Branch Misprediction at execution stage. Sample with: INT_MISC.CLEAR_RESTEER_CYCLES. Related metrics: tma_branch_mispredicts, tma_info_bad_spec_branch_misprediction_cost, tma_info_bottleneck_mispredictions"
},
{
	"MetricGroup": "Branches",
	"MetricName": "tma_info_branches_callret",
	"MetricExpr": "(BR_INST_RETIRED.NEAR_CALL + BR_INST_RETIRED.NEAR_RETURN) / BR_INST_RETIRED.ALL_BRANCHES",
	"BriefDescription": "Fraction of branches that are CALL or RET"
},
{
	"MetricGroup": "Branches",
	"MetricName": "tma_info_branches_cond_nt",
	"MetricExpr": "BR_INST_RETIRED.NOT_TAKEN / BR_INST_RETIRED.ALL_BRANCHES",
	"BriefDescription": "Fraction of branches that are non-taken conditionals"
},
{
	"MetricGroup": "Branches",
	"MetricName": "tma_info_branches_cond_tk",
	"MetricExpr": "(BR_INST_RETIRED.CONDITIONAL - BR_INST_RETIRED.NOT_TAKEN) / BR_INST_RETIRED.ALL_BRANCHES",
	"BriefDescription": "Fraction of branches that are taken conditionals"
},
{
	"MetricGroup": "Branches",
	"MetricName": "tma_info_branches_jump",
	"MetricExpr": "(BR_INST_RETIRED.NEAR_TAKEN - (BR_INST_RETIRED.CONDITIONAL - BR_INST_RETIRED.NOT_TAKEN) - 2 * BR_INST_RETIRED.NEAR_CALL) / BR_INST_RETIRED.ALL_BRANCHES",
	"BriefDescription": "Fraction of branches that are unconditional (direct or indirect) jumps"
},
{
	"MetricGroup": "Branches",
	"MetricName": "tma_info_inst_mix_bptkbranch",
	"MetricExpr": "BR_INST_RETIRED.ALL_BRANCHES / BR_INST_RETIRED.NEAR_TAKEN",
	"BriefDescription": "Branch instructions per taken branch"
},
{
	"MetricGroup": "Branches",
	"MetricName": "tma_info_inst_mix_ipbranch",
	"MetricExpr": "INST_RETIRED.ANY / BR_INST_RETIRED.ALL_BRANCHES",
	"MetricThreshold": "tma_info_inst_mix_ipbranch < 8",
	"BriefDescription": "Instructions per Branch (lower number means higher occurrence rate)"
},
{
	"MetricGroup": "Branches",
	"MetricName": "tma_info_inst_mix_ipcall",
	"MetricExpr": "INST_RETIRED.ANY / BR_INST_RETIRED.NEAR_CALL",
	"MetricThreshold": "tma_info_inst_mix_ipcall < 200",
	"BriefDescription": "Instructions per (near) call (lower number means higher occurrence rate)"
},
{
	"MetricGroup": "Branches",
	"MetricName": "tma_info_inst_mix_iptb",
	"MetricExpr": "INST_RETIRED.ANY / BR_INST_RETIRED.NEAR_TAKEN",
	"MetricThreshold": "tma_info_inst_mix_iptb < 9",
	"BriefDescription": "Instruction per taken branch",
	"PublicDescription": "Instruction per taken branch. Related metrics: tma_dsb_switches, tma_fetch_bandwidth, tma_info_botlnk_l2_dsb_misses, tma_info_frontend_dsb_coverage, tma_lcp"
},
{
	"MetricGroup": "Branches",
	"MetricName": "tma_info_system_ipfarbranch",
	"MetricExpr": "INST_RETIRED.ANY / BR_INST_RETIRED.FAR_BRANCH:u",
	"MetricThreshold": "tma_info_system_ipfarbranch < 1e6",
	"BriefDescription": "Instructions per Far Branch ( Far Branches apply upon transition from application to operating system, handling interrupts, exceptions) [lower number means higher occurrence rate]"
},
{
	"MetricGroup": "Branches",
	"MetricName": "tma_info_thread_uptb",
	"MetricExpr": "UOPS_RETIRED.RETIRE_SLOTS / BR_INST_RETIRED.NEAR_TAKEN",
	"MetricThreshold": "tma_info_thread_uptb < 6",
	"BriefDescription": "Instruction per taken branch"
},
{
	"MetricGroup": "CacheMisses",
	"MetricName": "tma_info_memory_fb_hpki",
	"MetricExpr": "1e3 * MEM_LOAD_RETIRED.FB_HIT / INST_RETIRED.ANY",
	"BriefDescription": "Fill Buffer (FB) hits per kilo instructions for retired demand loads (L1D misses that merge into ongoing miss-handling entries)"
},
{
	"MetricGroup": "CacheMisses",
	"MetricName": "tma_info_memory_l1mpki",
	"MetricExpr": "1e3 * MEM_LOAD_RETIRED.L1_MISS / INST_RETIRED.ANY",
	"BriefDescription": "L1 cache true misses per kilo instruction for retired demand loads"
},
{
	"MetricGroup": "CacheMisses",
	"MetricName": "tma_info_memory_l1mpki_load",
	"MetricExpr": "1e3 * L2_RQSTS.ALL_DEMAND_DATA_RD / INST_RETIRED.ANY",
	"BriefDescription": "L1 cache true misses per kilo instruction for all demand loads (including speculative)"
},
{
	"MetricGroup": "CacheMisses",
	"MetricName": "tma_info_memory_l2hpki_all",
	"MetricExpr": "1e3 * (L2_RQSTS.REFERENCES - L2_RQSTS.MISS) / INST_RETIRED.ANY",
	"BriefDescription": "L2 cache hits per kilo instruction for all request types (including speculative)"
},
{
	"MetricGroup": "CacheMisses",
	"MetricName": "tma_info_memory_l2hpki_load",
	"MetricExpr": "1e3 * L2_RQSTS.DEMAND_DATA_RD_HIT / INST_RETIRED.ANY",
	"BriefDescription": "L2 cache hits per kilo instruction for all demand loads  (including speculative)"
},
{
	"MetricGroup": "CacheMisses",
	"MetricName": "tma_info_memory_l2mpki",
	"MetricExpr": "1e3 * MEM_LOAD_RETIRED.L2_MISS / INST_RETIRED.ANY",
	"BriefDescription": "L2 cache true misses per kilo instruction for retired demand loads"
},
{
	"MetricGroup": "CacheMisses",
	"MetricName": "tma_info_memory_l2mpki_all",
	"MetricExpr": "1e3 * L2_RQSTS.MISS / INST_RETIRED.ANY",
	"BriefDescription": "L2 cache ([RKL+] true) misses per kilo instruction for all request types (including speculative)"
},
{
	"MetricGroup": "CacheMisses",
	"MetricName": "tma_info_memory_l2mpki_load",
	"MetricExpr": "1e3 * L2_RQSTS.DEMAND_DATA_RD_MISS / INST_RETIRED.ANY",
	"BriefDescription": "L2 cache ([RKL+] true) misses per kilo instruction for all demand loads  (including speculative)"
},
{
	"MetricGroup": "CacheMisses",
	"MetricName": "tma_info_memory_l3mpki",
	"MetricExpr": "1e3 * MEM_LOAD_RETIRED.L3_MISS / INST_RETIRED.ANY",
	"BriefDescription": "L3 cache true misses per kilo instruction for retired demand loads"
},
{
	"MetricGroup": "CacheMisses",
	"MetricName": "tma_l1_bound",
	"MetricExpr": "max((CYCLE_ACTIVITY.STALLS_MEM_ANY - CYCLE_ACTIVITY.STALLS_L1D_MISS) / tma_info_thread_clks, 0)",
	"MetricThreshold": "tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled without loads missing the L1 data cache",
	"PublicDescription": "This metric estimates how often the CPU was stalled without loads missing the L1 data cache.  The L1 data cache typically has the shortest latency.  However; in certain cases like loads blocked on older stores; a load might suffer due to high latency even though it is being satisfied by the L1. Another example is loads who miss in the TLB. These cases are characterized by execution unit stalls; while some non-completed demand load lives in the machine without having that demand load missing the L1 cache. Sample with: MEM_LOAD_RETIRED.L1_HIT_PS;MEM_LOAD_RETIRED.FB_HIT_PS. Related metrics: tma_clears_resteers, tma_machine_clears, tma_microcode_sequencer, tma_ms_switches, tma_ports_utilized_1"
},
{
	"MetricGroup": "CacheMisses",
	"MetricName": "tma_l2_bound",
	"MetricExpr": "MEM_LOAD_RETIRED.L2_HIT * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS) / (MEM_LOAD_RETIRED.L2_HIT * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS) + cpu@L1D_PEND_MISS.FB_FULL\\,cmask\\=1@) * ((CYCLE_ACTIVITY.STALLS_L1D_MISS - CYCLE_ACTIVITY.STALLS_L2_MISS) / tma_info_thread_clks)",
	"MetricThreshold": "tma_l2_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled due to L2 cache accesses by loads",
	"PublicDescription": "This metric estimates how often the CPU was stalled due to L2 cache accesses by loads.  Avoiding cache misses (i.e. L1 misses/L2 hits) can improve the latency and increase performance. Sample with: MEM_LOAD_RETIRED.L2_HIT_PS"
},
{
	"MetricGroup": "CacheMisses",
	"MetricName": "tma_l3_bound",
	"MetricExpr": "(CYCLE_ACTIVITY.STALLS_L2_MISS - CYCLE_ACTIVITY.STALLS_L3_MISS) / tma_info_thread_clks",
	"MetricThreshold": "tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled due to loads accesses to L3 cache or contended with a sibling Core",
	"PublicDescription": "This metric estimates how often the CPU was stalled due to loads accesses to L3 cache or contended with a sibling Core.  Avoiding cache misses (i.e. L2 misses/L3 hits) can improve the latency and increase performance. Sample with: MEM_LOAD_RETIRED.L3_HIT_PS"
},
{
	"MetricGroup": "CodeGen",
	"MetricName": "tma_info_branches_cond_nt",
	"MetricExpr": "BR_INST_RETIRED.NOT_TAKEN / BR_INST_RETIRED.ALL_BRANCHES",
	"BriefDescription": "Fraction of branches that are non-taken conditionals"
},
{
	"MetricGroup": "CodeGen",
	"MetricName": "tma_info_branches_cond_tk",
	"MetricExpr": "(BR_INST_RETIRED.CONDITIONAL - BR_INST_RETIRED.NOT_TAKEN) / BR_INST_RETIRED.ALL_BRANCHES",
	"BriefDescription": "Fraction of branches that are taken conditionals"
},
{
	"MetricGroup": "Compute",
	"MetricName": "tma_core_bound",
	"MetricExpr": "tma_backend_bound - tma_memory_bound",
	"MetricThreshold": "tma_core_bound > 0.1 & tma_backend_bound > 0.2",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where Core non-memory issues were of a bottleneck",
	"PublicDescription": "This metric represents fraction of slots where Core non-memory issues were of a bottleneck.  Shortage in hardware compute resources; or dependencies in software's instructions are both categorized under Core Bound. Hence it may indicate the machine ran out of an out-of-order resource; certain execution units are overloaded or dependencies in program's data- or instruction-flow are limiting the performance (e.g. FP-chained long-latency arithmetic operations)"
},
{
	"MetricGroup": "Compute",
	"MetricName": "tma_fp_scalar",
	"MetricExpr": "cpu@FP_ARITH_INST_RETIRED.SCALAR_SINGLE\\,umask\\=0x03@ / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fp_scalar > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric approximates arithmetic floating-point (FP) scalar uops fraction the CPU has retired",
	"PublicDescription": "This metric approximates arithmetic floating-point (FP) scalar uops fraction the CPU has retired. May overcount due to FMA double counting. Related metrics: tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "Compute",
	"MetricName": "tma_fp_vector",
	"MetricExpr": "cpu@FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE\\,umask\\=0x3c@ / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fp_vector > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric approximates arithmetic floating-point (FP) vector uops fraction the CPU has retired aggregated across all vector widths",
	"PublicDescription": "This metric approximates arithmetic floating-point (FP) vector uops fraction the CPU has retired aggregated across all vector widths. May overcount due to FMA double counting. Related metrics: tma_fp_scalar, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "Compute",
	"MetricName": "tma_fp_vector_128b",
	"MetricExpr": "(FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE + FP_ARITH_INST_RETIRED.128B_PACKED_SINGLE) / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fp_vector_128b > 0.1 & (tma_fp_vector > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 128-bit wide vectors",
	"PublicDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 128-bit wide vectors. May overcount due to FMA double counting. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "Compute",
	"MetricName": "tma_fp_vector_256b",
	"MetricExpr": "(FP_ARITH_INST_RETIRED.256B_PACKED_DOUBLE + FP_ARITH_INST_RETIRED.256B_PACKED_SINGLE) / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fp_vector_256b > 0.1 & (tma_fp_vector > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 256-bit wide vectors",
	"PublicDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 256-bit wide vectors. May overcount due to FMA double counting. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "Compute",
	"MetricName": "tma_port_0",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_0 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_0 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 0 ([SNB+] ALU; [HSW+] ALU and 2nd branch)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 0 ([SNB+] ALU; [HSW+] ALU and 2nd branch). Sample with: UOPS_DISPATCHED_PORT.PORT_0. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "Compute",
	"MetricName": "tma_x87_use",
	"MetricExpr": "tma_retiring * UOPS_EXECUTED.X87 / UOPS_EXECUTED.THREAD",
	"MetricThreshold": "tma_x87_use > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric serves as an approximation of legacy x87 usage",
	"PublicDescription": "This metric serves as an approximation of legacy x87 usage. It accounts for instructions beyond X87 FP arithmetic operations; hence may be used as a thermometer to avoid X87 high usage and preferably upgrade to modern ISA. See Tip under Tuning Hint"
},
{
	"MetricGroup": "Cor",
	"MetricName": "tma_info_botlnk_l0_core_bound_likely",
	"MetricExpr": "(100 * (1 - tma_core_bound / tma_ports_utilization if tma_core_bound < tma_ports_utilization else 1) if tma_info_system_smt_2t_utilization > 0.5 else 0)",
	"MetricThreshold": "tma_info_botlnk_l0_core_bound_likely > 0.5",
	"BriefDescription": "Probability of Core Bound bottleneck hidden by SMT-profiling artifacts"
},
{
	"MetricGroup": "Cor",
	"MetricName": "tma_info_core_fp_arith_utilization",
	"MetricExpr": "(cpu@FP_ARITH_INST_RETIRED.SCALAR_SINGLE\\,umask\\=0x03@ + cpu@FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE\\,umask\\=0x3c@) / (2 * tma_info_core_core_clks)",
	"BriefDescription": "Actual per-core usage of the Floating Point non-X87 execution units (regardless of precision or vector-width)",
	"PublicDescription": "Actual per-core usage of the Floating Point non-X87 execution units (regardless of precision or vector-width). Values > 1 are possible due to ([BDW+] Fused-Multiply Add (FMA) counting - common; [ADL+] use all of ADD/MUL/FMA in Scalar or 128/256-bit vectors - less common)"
},
{
	"MetricGroup": "Cor",
	"MetricName": "tma_info_core_ilp",
	"MetricExpr": "UOPS_EXECUTED.THREAD / (UOPS_EXECUTED.CORE_CYCLES_GE_1 / 2 if #SMT_on else UOPS_EXECUTED.CORE_CYCLES_GE_1)",
	"BriefDescription": "Instruction-Level-Parallelism (average number of uops executed when there is execution) per-core"
},
{
	"MetricGroup": "Cor",
	"MetricName": "tma_info_pipeline_execute",
	"MetricExpr": "UOPS_EXECUTED.THREAD / cpu@UOPS_EXECUTED.THREAD\\,cmask\\=1@",
	"BriefDescription": "Instruction-Level-Parallelism (average number of uops executed when there is execution) per-thread"
},
{
	"MetricGroup": "Cor",
	"MetricName": "tma_info_system_gflops",
	"MetricExpr": "(FP_ARITH_INST_RETIRED.SCALAR_SINGLE + FP_ARITH_INST_RETIRED.SCALAR_DOUBLE + 2 * FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE + 4 * (FP_ARITH_INST_RETIRED.128B_PACKED_SINGLE + FP_ARITH_INST_RETIRED.256B_PACKED_DOUBLE) + 8 * FP_ARITH_INST_RETIRED.256B_PACKED_SINGLE) / 1e9 / duration_time",
	"BriefDescription": "Giga Floating Point Operations Per Second",
	"PublicDescription": "Giga Floating Point Operations Per Second. Aggregate across all supported options of: FP precisions, scalar and vector instructions, vector-width and AMX engine"
},
{
	"MetricGroup": "Cor",
	"MetricName": "tma_info_thread_execute_per_issue",
	"MetricExpr": "UOPS_EXECUTED.THREAD / UOPS_ISSUED.ANY",
	"BriefDescription": "The ratio of Executed- by Issued-Uops",
	"PublicDescription": "The ratio of Executed- by Issued-Uops. Ratio > 1 suggests high rate of uop micro-fusions. Ratio < 1 suggest high rate of \"execute\" at rename stage"
},
{
	"MetricGroup": "DSB",
	"MetricName": "tma_dsb",
	"MetricExpr": "(IDQ.ALL_DSB_CYCLES_ANY_UOPS - IDQ.ALL_DSB_CYCLES_4_UOPS) / tma_info_core_core_clks / 2",
	"MetricThreshold": "tma_dsb > 0.15 & (tma_fetch_bandwidth > 0.1 & tma_frontend_bound > 0.15 & tma_info_thread_ipc / 4 > 0.35)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles in which CPU was likely limited due to DSB (decoded uop cache) fetch pipeline",
	"PublicDescription": "This metric represents Core fraction of cycles in which CPU was likely limited due to DSB (decoded uop cache) fetch pipeline.  For example; inefficient utilization of the DSB cache structure or bank conflict when reading from it; are categorized here"
},
{
	"MetricGroup": "DSB",
	"MetricName": "tma_info_frontend_dsb_coverage",
	"MetricExpr": "IDQ.DSB_UOPS / (IDQ.DSB_UOPS + IDQ.MITE_UOPS + IDQ.MS_UOPS)",
	"MetricThreshold": "tma_info_frontend_dsb_coverage < 0.7 & tma_info_thread_ipc / 4 > 0.35",
	"BriefDescription": "Fraction of Uops delivered by the DSB (aka Decoded ICache; or Uop Cache)",
	"PublicDescription": "Fraction of Uops delivered by the DSB (aka Decoded ICache; or Uop Cache). Related metrics: tma_dsb_switches, tma_fetch_bandwidth, tma_info_botlnk_l2_dsb_misses, tma_info_inst_mix_iptb, tma_lcp"
},
{
	"MetricGroup": "DSBmiss",
	"MetricName": "tma_decoder0_alone",
	"MetricExpr": "(cpu@INST_DECODED.DECODERS\\,cmask\\=1@ - cpu@INST_DECODED.DECODERS\\,cmask\\=2@) / tma_info_core_core_clks / 2",
	"MetricThreshold": "tma_decoder0_alone > 0.1 & (tma_mite > 0.1 & (tma_fetch_bandwidth > 0.1 & tma_frontend_bound > 0.15 & tma_info_thread_ipc / 4 > 0.35))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles where decoder-0 was the only active decoder",
	"PublicDescription": "This metric represents fraction of cycles where decoder-0 was the only active decoder. Related metrics: tma_few_uops_instructions"
},
{
	"MetricGroup": "DSBmiss",
	"MetricName": "tma_dsb_switches",
	"MetricExpr": "DSB2MITE_SWITCHES.PENALTY_CYCLES / tma_info_thread_clks",
	"MetricThreshold": "tma_dsb_switches > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to switches from DSB to MITE pipelines",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to switches from DSB to MITE pipelines. The DSB (decoded i-cache) is a Uop Cache where the front-end directly delivers Uops (micro operations) avoiding heavy x86 decoding. The DSB pipeline has shorter latency and delivered higher bandwidth than the MITE (legacy instruction decode pipeline). Switching between the two pipelines can cause penalties hence this metric measures the exposed penalty. Sample with: FRONTEND_RETIRED.DSB_MISS_PS. Related metrics: tma_fetch_bandwidth, tma_info_botlnk_l2_dsb_misses, tma_info_frontend_dsb_coverage, tma_info_inst_mix_iptb, tma_lcp"
},
{
	"MetricGroup": "DSBmiss",
	"MetricName": "tma_info_botlnk_l2_dsb_misses",
	"MetricExpr": "100 * (tma_fetch_latency * tma_dsb_switches / (tma_branch_resteers + tma_dsb_switches + tma_icache_misses + tma_itlb_misses + tma_lcp + tma_ms_switches) + tma_fetch_bandwidth * tma_mite / (tma_dsb + tma_mite))",
	"MetricThreshold": "tma_info_botlnk_l2_dsb_misses > 10",
	"BriefDescription": "Total pipeline cost of DSB (uop cache) misses - subset of the Instruction_Fetch_BW Bottleneck",
	"PublicDescription": "Total pipeline cost of DSB (uop cache) misses - subset of the Instruction_Fetch_BW Bottleneck. Related metrics: tma_dsb_switches, tma_fetch_bandwidth, tma_info_frontend_dsb_coverage, tma_info_inst_mix_iptb, tma_lcp"
},
{
	"MetricGroup": "DSBmiss",
	"MetricName": "tma_info_frontend_dsb_switch_cost",
	"MetricExpr": "DSB2MITE_SWITCHES.PENALTY_CYCLES / DSB2MITE_SWITCHES.COUNT",
	"BriefDescription": "Average number of cycles of a switch from the DSB fetch-unit to MITE fetch unit - see DSB_Switches tree node for details"
},
{
	"MetricGroup": "DSBmiss",
	"MetricName": "tma_info_frontend_ipdsb_miss_ret",
	"MetricExpr": "INST_RETIRED.ANY / FRONTEND_RETIRED.ANY_DSB_MISS",
	"MetricThreshold": "tma_info_frontend_ipdsb_miss_ret < 50",
	"BriefDescription": "Instructions per non-speculative DSB miss (lower number means higher occurrence rate)"
},
{
	"MetricGroup": "DSBmiss",
	"MetricName": "tma_mite",
	"MetricExpr": "(IDQ.ALL_MITE_CYCLES_ANY_UOPS - IDQ.ALL_MITE_CYCLES_4_UOPS) / tma_info_core_core_clks / 2",
	"MetricThreshold": "tma_mite > 0.1 & (tma_fetch_bandwidth > 0.1 & tma_frontend_bound > 0.15 & tma_info_thread_ipc / 4 > 0.35)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles in which CPU was likely limited due to the MITE pipeline (the legacy decode pipeline)",
	"PublicDescription": "This metric represents Core fraction of cycles in which CPU was likely limited due to the MITE pipeline (the legacy decode pipeline). This pipeline is used for code that was not pre-cached in the DSB or LSD. For example; inefficiencies due to asymmetric decoders; use of long immediate or LCP can manifest as MITE fetch bandwidth bottleneck. Sample with: FRONTEND_RETIRED.ANY_DSB_MISS"
},
{
	"MetricGroup": "DataSharing",
	"MetricName": "tma_contested_accesses",
	"MetricExpr": "(18.5 * tma_info_system_average_frequency * MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM + 16.5 * tma_info_system_average_frequency * MEM_LOAD_L3_HIT_RETIRED.XSNP_MISS) * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS / 2) / tma_info_thread_clks",
	"MetricThreshold": "tma_contested_accesses > 0.05 & (tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to contested accesses",
	"PublicDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to contested accesses. Contested accesses occur when data written by one Logical Processor are read by another Logical Processor on a different Physical Core. Examples of contested accesses include synchronizations such as locks; true data sharing such as modified locked variables; and false sharing. Sample with: MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM_PS;MEM_LOAD_L3_HIT_RETIRED.XSNP_MISS_PS. Related metrics: tma_data_sharing, tma_false_sharing, tma_machine_clears, tma_remote_cache"
},
{
	"MetricGroup": "DataSharing",
	"MetricName": "tma_false_sharing",
	"MetricExpr": "22 * tma_info_system_average_frequency * OFFCORE_RESPONSE.DEMAND_RFO.L3_HIT.SNOOP_HITM / tma_info_thread_clks",
	"MetricThreshold": "tma_false_sharing > 0.05 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates how often CPU was handling synchronizations due to False Sharing",
	"PublicDescription": "This metric roughly estimates how often CPU was handling synchronizations due to False Sharing. False Sharing is a multithreading hiccup; where multiple Logical Processors contend on different data-elements mapped into the same cache line. Sample with: MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM_PS;OFFCORE_RESPONSE.DEMAND_RFO.L3_HIT.SNOOP_HITM. Related metrics: tma_contested_accesses, tma_data_sharing, tma_machine_clears, tma_remote_cache"
},
{
	"MetricGroup": "Fed",
	"MetricName": "tma_info_botlnk_l2_dsb_misses",
	"MetricExpr": "100 * (tma_fetch_latency * tma_dsb_switches / (tma_branch_resteers + tma_dsb_switches + tma_icache_misses + tma_itlb_misses + tma_lcp + tma_ms_switches) + tma_fetch_bandwidth * tma_mite / (tma_dsb + tma_mite))",
	"MetricThreshold": "tma_info_botlnk_l2_dsb_misses > 10",
	"BriefDescription": "Total pipeline cost of DSB (uop cache) misses - subset of the Instruction_Fetch_BW Bottleneck",
	"PublicDescription": "Total pipeline cost of DSB (uop cache) misses - subset of the Instruction_Fetch_BW Bottleneck. Related metrics: tma_dsb_switches, tma_fetch_bandwidth, tma_info_frontend_dsb_coverage, tma_info_inst_mix_iptb, tma_lcp"
},
{
	"MetricGroup": "Fed",
	"MetricName": "tma_info_botlnk_l2_ic_misses",
	"MetricExpr": "100 * (tma_fetch_latency * tma_icache_misses / (tma_branch_resteers + tma_dsb_switches + tma_icache_misses + tma_itlb_misses + tma_lcp + tma_ms_switches))",
	"MetricThreshold": "tma_info_botlnk_l2_ic_misses > 5",
	"BriefDescription": "Total pipeline cost of Instruction Cache misses - subset of the Big_Code Bottleneck",
	"PublicDescription": "Total pipeline cost of Instruction Cache misses - subset of the Big_Code Bottleneck. Related metrics: "
},
{
	"MetricGroup": "Fed",
	"MetricName": "tma_info_bottleneck_big_code",
	"MetricExpr": "100 * tma_fetch_latency * (tma_itlb_misses + tma_icache_misses + tma_unknown_branches) / (tma_branch_resteers + tma_dsb_switches + tma_icache_misses + tma_itlb_misses + tma_lcp + tma_ms_switches)",
	"MetricThreshold": "tma_info_bottleneck_big_code > 20",
	"BriefDescription": "Total pipeline cost of instruction fetch related bottlenecks by large code footprint programs (i-side cache; TLB and BTB misses)",
	"PublicDescription": "Total pipeline cost of instruction fetch related bottlenecks by large code footprint programs (i-side cache; TLB and BTB misses). Related metrics: tma_info_bottleneck_branching_overhead"
},
{
	"MetricGroup": "Fed",
	"MetricName": "tma_info_bottleneck_instruction_fetch_bw",
	"MetricExpr": "100 * (tma_frontend_bound - tma_fetch_latency * tma_mispredicts_resteers / (tma_branch_resteers + tma_dsb_switches + tma_icache_misses + tma_itlb_misses + tma_lcp + tma_ms_switches)) - tma_info_bottleneck_big_code",
	"MetricThreshold": "tma_info_bottleneck_instruction_fetch_bw > 20",
	"BriefDescription": "Total pipeline cost of instruction fetch bandwidth related bottlenecks"
},
{
	"MetricGroup": "Fed",
	"MetricName": "tma_info_frontend_dsb_coverage",
	"MetricExpr": "IDQ.DSB_UOPS / (IDQ.DSB_UOPS + IDQ.MITE_UOPS + IDQ.MS_UOPS)",
	"MetricThreshold": "tma_info_frontend_dsb_coverage < 0.7 & tma_info_thread_ipc / 4 > 0.35",
	"BriefDescription": "Fraction of Uops delivered by the DSB (aka Decoded ICache; or Uop Cache)",
	"PublicDescription": "Fraction of Uops delivered by the DSB (aka Decoded ICache; or Uop Cache). Related metrics: tma_dsb_switches, tma_fetch_bandwidth, tma_info_botlnk_l2_dsb_misses, tma_info_inst_mix_iptb, tma_lcp"
},
{
	"MetricGroup": "Fed",
	"MetricName": "tma_info_frontend_fetch_upc",
	"MetricExpr": "UOPS_ISSUED.ANY / cpu@UOPS_ISSUED.ANY\\,cmask\\=1@",
	"BriefDescription": "Average number of Uops issued by front-end when it issued something"
},
{
	"MetricGroup": "Fed",
	"MetricName": "tma_info_frontend_icache_miss_latency",
	"MetricExpr": "ICACHE_16B.IFDATA_STALL / cpu@ICACHE_16B.IFDATA_STALL\\,cmask\\=1\\,edge@ + 2",
	"BriefDescription": "Average Latency for L1 instruction cache misses"
},
{
	"MetricGroup": "Fed",
	"MetricName": "tma_info_frontend_ipdsb_miss_ret",
	"MetricExpr": "INST_RETIRED.ANY / FRONTEND_RETIRED.ANY_DSB_MISS",
	"MetricThreshold": "tma_info_frontend_ipdsb_miss_ret < 50",
	"BriefDescription": "Instructions per non-speculative DSB miss (lower number means higher occurrence rate)"
},
{
	"MetricGroup": "Fed",
	"MetricName": "tma_info_frontend_ipunknown_branch",
	"MetricExpr": "tma_info_inst_mix_instructions / BACLEARS.ANY",
	"BriefDescription": "Instructions per speculative Unknown Branch Misprediction (BAClear) (lower number means higher occurrence rate)"
},
{
	"MetricGroup": "Fed",
	"MetricName": "tma_info_inst_mix_bptkbranch",
	"MetricExpr": "BR_INST_RETIRED.ALL_BRANCHES / BR_INST_RETIRED.NEAR_TAKEN",
	"BriefDescription": "Branch instructions per taken branch"
},
{
	"MetricGroup": "Fed",
	"MetricName": "tma_info_inst_mix_ipbranch",
	"MetricExpr": "INST_RETIRED.ANY / BR_INST_RETIRED.ALL_BRANCHES",
	"MetricThreshold": "tma_info_inst_mix_ipbranch < 8",
	"BriefDescription": "Instructions per Branch (lower number means higher occurrence rate)"
},
{
	"MetricGroup": "Fed",
	"MetricName": "tma_info_inst_mix_ipcall",
	"MetricExpr": "INST_RETIRED.ANY / BR_INST_RETIRED.NEAR_CALL",
	"MetricThreshold": "tma_info_inst_mix_ipcall < 200",
	"BriefDescription": "Instructions per (near) call (lower number means higher occurrence rate)"
},
{
	"MetricGroup": "Fed",
	"MetricName": "tma_info_inst_mix_iptb",
	"MetricExpr": "INST_RETIRED.ANY / BR_INST_RETIRED.NEAR_TAKEN",
	"MetricThreshold": "tma_info_inst_mix_iptb < 9",
	"BriefDescription": "Instruction per taken branch",
	"PublicDescription": "Instruction per taken branch. Related metrics: tma_dsb_switches, tma_fetch_bandwidth, tma_info_botlnk_l2_dsb_misses, tma_info_frontend_dsb_coverage, tma_lcp"
},
{
	"MetricGroup": "Fed",
	"MetricName": "tma_info_memory_tlb_code_stlb_mpki",
	"MetricExpr": "1e3 * ITLB_MISSES.WALK_COMPLETED / INST_RETIRED.ANY",
	"BriefDescription": "STLB (2nd level TLB) code speculative misses per kilo instruction (misses of any page-size that complete the page walk)"
},
{
	"MetricGroup": "Fed",
	"MetricName": "tma_info_thread_uptb",
	"MetricExpr": "UOPS_RETIRED.RETIRE_SLOTS / BR_INST_RETIRED.NEAR_TAKEN",
	"MetricThreshold": "tma_info_thread_uptb < 6",
	"BriefDescription": "Instruction per taken branch"
},
{
	"MetricGroup": "FetchBW",
	"MetricName": "tma_decoder0_alone",
	"MetricExpr": "(cpu@INST_DECODED.DECODERS\\,cmask\\=1@ - cpu@INST_DECODED.DECODERS\\,cmask\\=2@) / tma_info_core_core_clks / 2",
	"MetricThreshold": "tma_decoder0_alone > 0.1 & (tma_mite > 0.1 & (tma_fetch_bandwidth > 0.1 & tma_frontend_bound > 0.15 & tma_info_thread_ipc / 4 > 0.35))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles where decoder-0 was the only active decoder",
	"PublicDescription": "This metric represents fraction of cycles where decoder-0 was the only active decoder. Related metrics: tma_few_uops_instructions"
},
{
	"MetricGroup": "FetchBW",
	"MetricName": "tma_dsb",
	"MetricExpr": "(IDQ.ALL_DSB_CYCLES_ANY_UOPS - IDQ.ALL_DSB_CYCLES_4_UOPS) / tma_info_core_core_clks / 2",
	"MetricThreshold": "tma_dsb > 0.15 & (tma_fetch_bandwidth > 0.1 & tma_frontend_bound > 0.15 & tma_info_thread_ipc / 4 > 0.35)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles in which CPU was likely limited due to DSB (decoded uop cache) fetch pipeline",
	"PublicDescription": "This metric represents Core fraction of cycles in which CPU was likely limited due to DSB (decoded uop cache) fetch pipeline.  For example; inefficient utilization of the DSB cache structure or bank conflict when reading from it; are categorized here"
},
{
	"MetricGroup": "FetchBW",
	"MetricName": "tma_fetch_bandwidth",
	"MetricExpr": "tma_frontend_bound - tma_fetch_latency",
	"MetricThreshold": "tma_fetch_bandwidth > 0.1 & tma_frontend_bound > 0.15 & tma_info_thread_ipc / 4 > 0.35",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend bandwidth issues",
	"PublicDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend bandwidth issues.  For example; inefficiencies at the instruction decoders; or restrictions for caching in the DSB (decoded uops cache) are categorized under Fetch Bandwidth. In such cases; the Frontend typically delivers suboptimal amount of uops to the Backend. Sample with: FRONTEND_RETIRED.LATENCY_GE_2_BUBBLES_GE_1_PS;FRONTEND_RETIRED.LATENCY_GE_1_PS;FRONTEND_RETIRED.LATENCY_GE_2_PS. Related metrics: tma_dsb_switches, tma_info_botlnk_l2_dsb_misses, tma_info_frontend_dsb_coverage, tma_info_inst_mix_iptb, tma_lcp"
},
{
	"MetricGroup": "FetchBW",
	"MetricName": "tma_info_bottleneck_instruction_fetch_bw",
	"MetricExpr": "100 * (tma_frontend_bound - tma_fetch_latency * tma_mispredicts_resteers / (tma_branch_resteers + tma_dsb_switches + tma_icache_misses + tma_itlb_misses + tma_lcp + tma_ms_switches)) - tma_info_bottleneck_big_code",
	"MetricThreshold": "tma_info_bottleneck_instruction_fetch_bw > 20",
	"BriefDescription": "Total pipeline cost of instruction fetch bandwidth related bottlenecks"
},
{
	"MetricGroup": "FetchBW",
	"MetricName": "tma_info_frontend_dsb_coverage",
	"MetricExpr": "IDQ.DSB_UOPS / (IDQ.DSB_UOPS + IDQ.MITE_UOPS + IDQ.MS_UOPS)",
	"MetricThreshold": "tma_info_frontend_dsb_coverage < 0.7 & tma_info_thread_ipc / 4 > 0.35",
	"BriefDescription": "Fraction of Uops delivered by the DSB (aka Decoded ICache; or Uop Cache)",
	"PublicDescription": "Fraction of Uops delivered by the DSB (aka Decoded ICache; or Uop Cache). Related metrics: tma_dsb_switches, tma_fetch_bandwidth, tma_info_botlnk_l2_dsb_misses, tma_info_inst_mix_iptb, tma_lcp"
},
{
	"MetricGroup": "FetchBW",
	"MetricName": "tma_info_frontend_fetch_upc",
	"MetricExpr": "UOPS_ISSUED.ANY / cpu@UOPS_ISSUED.ANY\\,cmask\\=1@",
	"BriefDescription": "Average number of Uops issued by front-end when it issued something"
},
{
	"MetricGroup": "FetchBW",
	"MetricName": "tma_info_inst_mix_iptb",
	"MetricExpr": "INST_RETIRED.ANY / BR_INST_RETIRED.NEAR_TAKEN",
	"MetricThreshold": "tma_info_inst_mix_iptb < 9",
	"BriefDescription": "Instruction per taken branch",
	"PublicDescription": "Instruction per taken branch. Related metrics: tma_dsb_switches, tma_fetch_bandwidth, tma_info_botlnk_l2_dsb_misses, tma_info_frontend_dsb_coverage, tma_lcp"
},
{
	"MetricGroup": "FetchBW",
	"MetricName": "tma_info_thread_uptb",
	"MetricExpr": "UOPS_RETIRED.RETIRE_SLOTS / BR_INST_RETIRED.NEAR_TAKEN",
	"MetricThreshold": "tma_info_thread_uptb < 6",
	"BriefDescription": "Instruction per taken branch"
},
{
	"MetricGroup": "FetchBW",
	"MetricName": "tma_mite",
	"MetricExpr": "(IDQ.ALL_MITE_CYCLES_ANY_UOPS - IDQ.ALL_MITE_CYCLES_4_UOPS) / tma_info_core_core_clks / 2",
	"MetricThreshold": "tma_mite > 0.1 & (tma_fetch_bandwidth > 0.1 & tma_frontend_bound > 0.15 & tma_info_thread_ipc / 4 > 0.35)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles in which CPU was likely limited due to the MITE pipeline (the legacy decode pipeline)",
	"PublicDescription": "This metric represents Core fraction of cycles in which CPU was likely limited due to the MITE pipeline (the legacy decode pipeline). This pipeline is used for code that was not pre-cached in the DSB or LSD. For example; inefficiencies due to asymmetric decoders; use of long immediate or LCP can manifest as MITE fetch bandwidth bottleneck. Sample with: FRONTEND_RETIRED.ANY_DSB_MISS"
},
{
	"MetricGroup": "FetchLat",
	"MetricName": "tma_branch_resteers",
	"MetricExpr": "INT_MISC.CLEAR_RESTEER_CYCLES / tma_info_thread_clks + tma_unknown_branches",
	"MetricThreshold": "tma_branch_resteers > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers. Branch Resteers estimates the Frontend delay in fetching operations from corrected path; following all sorts of miss-predicted branches. For example; branchy code with lots of miss-predictions might get categorized under Branch Resteers. Note the value of this node may overlap with its siblings. Sample with: BR_MISP_RETIRED.ALL_BRANCHES"
},
{
	"MetricGroup": "FetchLat",
	"MetricName": "tma_dsb_switches",
	"MetricExpr": "DSB2MITE_SWITCHES.PENALTY_CYCLES / tma_info_thread_clks",
	"MetricThreshold": "tma_dsb_switches > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to switches from DSB to MITE pipelines",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to switches from DSB to MITE pipelines. The DSB (decoded i-cache) is a Uop Cache where the front-end directly delivers Uops (micro operations) avoiding heavy x86 decoding. The DSB pipeline has shorter latency and delivered higher bandwidth than the MITE (legacy instruction decode pipeline). Switching between the two pipelines can cause penalties hence this metric measures the exposed penalty. Sample with: FRONTEND_RETIRED.DSB_MISS_PS. Related metrics: tma_fetch_bandwidth, tma_info_botlnk_l2_dsb_misses, tma_info_frontend_dsb_coverage, tma_info_inst_mix_iptb, tma_lcp"
},
{
	"MetricGroup": "FetchLat",
	"MetricName": "tma_icache_misses",
	"MetricExpr": "(ICACHE_16B.IFDATA_STALL + 2 * cpu@ICACHE_16B.IFDATA_STALL\\,cmask\\=1\\,edge@) / tma_info_thread_clks",
	"MetricThreshold": "tma_icache_misses > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to instruction cache misses",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to instruction cache misses. Sample with: FRONTEND_RETIRED.L2_MISS_PS;FRONTEND_RETIRED.L1I_MISS_PS"
},
{
	"MetricGroup": "FetchLat",
	"MetricName": "tma_info_botlnk_l2_ic_misses",
	"MetricExpr": "100 * (tma_fetch_latency * tma_icache_misses / (tma_branch_resteers + tma_dsb_switches + tma_icache_misses + tma_itlb_misses + tma_lcp + tma_ms_switches))",
	"MetricThreshold": "tma_info_botlnk_l2_ic_misses > 5",
	"BriefDescription": "Total pipeline cost of Instruction Cache misses - subset of the Big_Code Bottleneck",
	"PublicDescription": "Total pipeline cost of Instruction Cache misses - subset of the Big_Code Bottleneck. Related metrics: "
},
{
	"MetricGroup": "FetchLat",
	"MetricName": "tma_info_frontend_icache_miss_latency",
	"MetricExpr": "ICACHE_16B.IFDATA_STALL / cpu@ICACHE_16B.IFDATA_STALL\\,cmask\\=1\\,edge@ + 2",
	"BriefDescription": "Average Latency for L1 instruction cache misses"
},
{
	"MetricGroup": "FetchLat",
	"MetricName": "tma_itlb_misses",
	"MetricExpr": "ICACHE_64B.IFTAG_STALL / tma_info_thread_clks",
	"MetricThreshold": "tma_itlb_misses > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Instruction TLB (ITLB) misses",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to Instruction TLB (ITLB) misses. Sample with: FRONTEND_RETIRED.STLB_MISS_PS;FRONTEND_RETIRED.ITLB_MISS_PS"
},
{
	"MetricGroup": "FetchLat",
	"MetricName": "tma_lcp",
	"MetricExpr": "ILD_STALL.LCP / tma_info_thread_clks",
	"MetricThreshold": "tma_lcp > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles CPU was stalled due to Length Changing Prefixes (LCPs)",
	"PublicDescription": "This metric represents fraction of cycles CPU was stalled due to Length Changing Prefixes (LCPs). Using proper compiler flags or Intel Compiler by default will certainly avoid this. #Link: Optimization Guide about LCP BKMs. Related metrics: tma_dsb_switches, tma_fetch_bandwidth, tma_info_botlnk_l2_dsb_misses, tma_info_frontend_dsb_coverage, tma_info_inst_mix_iptb"
},
{
	"MetricGroup": "FetchLat",
	"MetricName": "tma_ms_switches",
	"MetricExpr": "2 * IDQ.MS_SWITCHES / tma_info_thread_clks",
	"MetricThreshold": "tma_ms_switches > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates the fraction of cycles when the CPU was stalled due to switches of uop delivery to the Microcode Sequencer (MS)",
	"PublicDescription": "This metric estimates the fraction of cycles when the CPU was stalled due to switches of uop delivery to the Microcode Sequencer (MS). Commonly used instructions are optimized for delivery by the DSB (decoded i-cache) or MITE (legacy instruction decode) pipelines. Certain operations cannot be handled natively by the execution pipeline; and must be performed by microcode (small programs injected into the execution stream). Switching to the MS too often can negatively impact performance. The MS is designated to deliver long uop flows required by CISC instructions like CPUID; or uncommon conditions like Floating Point Assists when dealing with Denormals. Sample with: IDQ.MS_SWITCHES. Related metrics: tma_clears_resteers, tma_l1_bound, tma_machine_clears, tma_microcode_sequencer, tma_mixing_vectors, tma_serializing_operation"
},
{
	"MetricGroup": "FetchLat",
	"MetricName": "tma_unknown_branches",
	"MetricExpr": "9 * BACLEARS.ANY / tma_info_thread_clks",
	"MetricThreshold": "tma_unknown_branches > 0.05 & (tma_branch_resteers > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to new branch address clears",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to new branch address clears. These are fetched branches the Branch Prediction Unit was unable to recognize (e.g. first time the branch is fetched or hitting BTB capacity limit). Sample with: BACLEARS.ANY"
},
{
	"MetricGroup": "Flops",
	"MetricName": "tma_fp_scalar",
	"MetricExpr": "cpu@FP_ARITH_INST_RETIRED.SCALAR_SINGLE\\,umask\\=0x03@ / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fp_scalar > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric approximates arithmetic floating-point (FP) scalar uops fraction the CPU has retired",
	"PublicDescription": "This metric approximates arithmetic floating-point (FP) scalar uops fraction the CPU has retired. May overcount due to FMA double counting. Related metrics: tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "Flops",
	"MetricName": "tma_fp_vector",
	"MetricExpr": "cpu@FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE\\,umask\\=0x3c@ / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fp_vector > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric approximates arithmetic floating-point (FP) vector uops fraction the CPU has retired aggregated across all vector widths",
	"PublicDescription": "This metric approximates arithmetic floating-point (FP) vector uops fraction the CPU has retired aggregated across all vector widths. May overcount due to FMA double counting. Related metrics: tma_fp_scalar, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "Flops",
	"MetricName": "tma_fp_vector_128b",
	"MetricExpr": "(FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE + FP_ARITH_INST_RETIRED.128B_PACKED_SINGLE) / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fp_vector_128b > 0.1 & (tma_fp_vector > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 128-bit wide vectors",
	"PublicDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 128-bit wide vectors. May overcount due to FMA double counting. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "Flops",
	"MetricName": "tma_fp_vector_256b",
	"MetricExpr": "(FP_ARITH_INST_RETIRED.256B_PACKED_DOUBLE + FP_ARITH_INST_RETIRED.256B_PACKED_SINGLE) / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fp_vector_256b > 0.1 & (tma_fp_vector > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 256-bit wide vectors",
	"PublicDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 256-bit wide vectors. May overcount due to FMA double counting. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "Flops",
	"MetricName": "tma_info_core_flopc",
	"MetricExpr": "(FP_ARITH_INST_RETIRED.SCALAR_SINGLE + FP_ARITH_INST_RETIRED.SCALAR_DOUBLE + 2 * FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE + 4 * (FP_ARITH_INST_RETIRED.128B_PACKED_SINGLE + FP_ARITH_INST_RETIRED.256B_PACKED_DOUBLE) + 8 * FP_ARITH_INST_RETIRED.256B_PACKED_SINGLE) / tma_info_core_core_clks",
	"BriefDescription": "Floating Point Operations Per Cycle"
},
{
	"MetricGroup": "Flops",
	"MetricName": "tma_info_core_fp_arith_utilization",
	"MetricExpr": "(cpu@FP_ARITH_INST_RETIRED.SCALAR_SINGLE\\,umask\\=0x03@ + cpu@FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE\\,umask\\=0x3c@) / (2 * tma_info_core_core_clks)",
	"BriefDescription": "Actual per-core usage of the Floating Point non-X87 execution units (regardless of precision or vector-width)",
	"PublicDescription": "Actual per-core usage of the Floating Point non-X87 execution units (regardless of precision or vector-width). Values > 1 are possible due to ([BDW+] Fused-Multiply Add (FMA) counting - common; [ADL+] use all of ADD/MUL/FMA in Scalar or 128/256-bit vectors - less common)"
},
{
	"MetricGroup": "Flops",
	"MetricName": "tma_info_inst_mix_iparith",
	"MetricExpr": "INST_RETIRED.ANY / (cpu@FP_ARITH_INST_RETIRED.SCALAR_SINGLE\\,umask\\=0x03@ + cpu@FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE\\,umask\\=0x3c@)",
	"MetricThreshold": "tma_info_inst_mix_iparith < 10",
	"BriefDescription": "Instructions per FP Arithmetic instruction (lower number means higher occurrence rate)",
	"PublicDescription": "Instructions per FP Arithmetic instruction (lower number means higher occurrence rate). May undercount due to FMA double counting. Approximated prior to BDW"
},
{
	"MetricGroup": "Flops",
	"MetricName": "tma_info_inst_mix_iparith_avx128",
	"MetricExpr": "INST_RETIRED.ANY / (FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE + FP_ARITH_INST_RETIRED.128B_PACKED_SINGLE)",
	"MetricThreshold": "tma_info_inst_mix_iparith_avx128 < 10",
	"BriefDescription": "Instructions per FP Arithmetic AVX/SSE 128-bit instruction (lower number means higher occurrence rate)",
	"PublicDescription": "Instructions per FP Arithmetic AVX/SSE 128-bit instruction (lower number means higher occurrence rate). May undercount due to FMA double counting"
},
{
	"MetricGroup": "Flops",
	"MetricName": "tma_info_inst_mix_iparith_avx256",
	"MetricExpr": "INST_RETIRED.ANY / (FP_ARITH_INST_RETIRED.256B_PACKED_DOUBLE + FP_ARITH_INST_RETIRED.256B_PACKED_SINGLE)",
	"MetricThreshold": "tma_info_inst_mix_iparith_avx256 < 10",
	"BriefDescription": "Instructions per FP Arithmetic AVX* 256-bit instruction (lower number means higher occurrence rate)",
	"PublicDescription": "Instructions per FP Arithmetic AVX* 256-bit instruction (lower number means higher occurrence rate). May undercount due to FMA double counting"
},
{
	"MetricGroup": "Flops",
	"MetricName": "tma_info_inst_mix_iparith_scalar_dp",
	"MetricExpr": "INST_RETIRED.ANY / FP_ARITH_INST_RETIRED.SCALAR_DOUBLE",
	"MetricThreshold": "tma_info_inst_mix_iparith_scalar_dp < 10",
	"BriefDescription": "Instructions per FP Arithmetic Scalar Double-Precision instruction (lower number means higher occurrence rate)",
	"PublicDescription": "Instructions per FP Arithmetic Scalar Double-Precision instruction (lower number means higher occurrence rate). May undercount due to FMA double counting"
},
{
	"MetricGroup": "Flops",
	"MetricName": "tma_info_inst_mix_iparith_scalar_sp",
	"MetricExpr": "INST_RETIRED.ANY / FP_ARITH_INST_RETIRED.SCALAR_SINGLE",
	"MetricThreshold": "tma_info_inst_mix_iparith_scalar_sp < 10",
	"BriefDescription": "Instructions per FP Arithmetic Scalar Single-Precision instruction (lower number means higher occurrence rate)",
	"PublicDescription": "Instructions per FP Arithmetic Scalar Single-Precision instruction (lower number means higher occurrence rate). May undercount due to FMA double counting"
},
{
	"MetricGroup": "Flops",
	"MetricName": "tma_info_inst_mix_ipflop",
	"MetricExpr": "INST_RETIRED.ANY / (FP_ARITH_INST_RETIRED.SCALAR_SINGLE + FP_ARITH_INST_RETIRED.SCALAR_DOUBLE + 2 * FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE + 4 * (FP_ARITH_INST_RETIRED.128B_PACKED_SINGLE + FP_ARITH_INST_RETIRED.256B_PACKED_DOUBLE) + 8 * FP_ARITH_INST_RETIRED.256B_PACKED_SINGLE)",
	"MetricThreshold": "tma_info_inst_mix_ipflop < 10",
	"BriefDescription": "Instructions per Floating Point (FP) Operation (lower number means higher occurrence rate)"
},
{
	"MetricGroup": "Flops",
	"MetricName": "tma_info_system_gflops",
	"MetricExpr": "(FP_ARITH_INST_RETIRED.SCALAR_SINGLE + FP_ARITH_INST_RETIRED.SCALAR_DOUBLE + 2 * FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE + 4 * (FP_ARITH_INST_RETIRED.128B_PACKED_SINGLE + FP_ARITH_INST_RETIRED.256B_PACKED_DOUBLE) + 8 * FP_ARITH_INST_RETIRED.256B_PACKED_SINGLE) / 1e9 / duration_time",
	"BriefDescription": "Giga Floating Point Operations Per Second",
	"PublicDescription": "Giga Floating Point Operations Per Second. Aggregate across all supported options of: FP precisions, scalar and vector instructions, vector-width and AMX engine"
},
{
	"MetricGroup": "FpScalar",
	"MetricName": "tma_info_inst_mix_iparith_scalar_dp",
	"MetricExpr": "INST_RETIRED.ANY / FP_ARITH_INST_RETIRED.SCALAR_DOUBLE",
	"MetricThreshold": "tma_info_inst_mix_iparith_scalar_dp < 10",
	"BriefDescription": "Instructions per FP Arithmetic Scalar Double-Precision instruction (lower number means higher occurrence rate)",
	"PublicDescription": "Instructions per FP Arithmetic Scalar Double-Precision instruction (lower number means higher occurrence rate). May undercount due to FMA double counting"
},
{
	"MetricGroup": "FpScalar",
	"MetricName": "tma_info_inst_mix_iparith_scalar_sp",
	"MetricExpr": "INST_RETIRED.ANY / FP_ARITH_INST_RETIRED.SCALAR_SINGLE",
	"MetricThreshold": "tma_info_inst_mix_iparith_scalar_sp < 10",
	"BriefDescription": "Instructions per FP Arithmetic Scalar Single-Precision instruction (lower number means higher occurrence rate)",
	"PublicDescription": "Instructions per FP Arithmetic Scalar Single-Precision instruction (lower number means higher occurrence rate). May undercount due to FMA double counting"
},
{
	"MetricGroup": "FpVector",
	"MetricName": "tma_info_inst_mix_iparith_avx128",
	"MetricExpr": "INST_RETIRED.ANY / (FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE + FP_ARITH_INST_RETIRED.128B_PACKED_SINGLE)",
	"MetricThreshold": "tma_info_inst_mix_iparith_avx128 < 10",
	"BriefDescription": "Instructions per FP Arithmetic AVX/SSE 128-bit instruction (lower number means higher occurrence rate)",
	"PublicDescription": "Instructions per FP Arithmetic AVX/SSE 128-bit instruction (lower number means higher occurrence rate). May undercount due to FMA double counting"
},
{
	"MetricGroup": "FpVector",
	"MetricName": "tma_info_inst_mix_iparith_avx256",
	"MetricExpr": "INST_RETIRED.ANY / (FP_ARITH_INST_RETIRED.256B_PACKED_DOUBLE + FP_ARITH_INST_RETIRED.256B_PACKED_SINGLE)",
	"MetricThreshold": "tma_info_inst_mix_iparith_avx256 < 10",
	"BriefDescription": "Instructions per FP Arithmetic AVX* 256-bit instruction (lower number means higher occurrence rate)",
	"PublicDescription": "Instructions per FP Arithmetic AVX* 256-bit instruction (lower number means higher occurrence rate). May undercount due to FMA double counting"
},
{
	"MetricGroup": "Frontend",
	"MetricName": "tma_fetch_bandwidth",
	"MetricExpr": "tma_frontend_bound - tma_fetch_latency",
	"MetricThreshold": "tma_fetch_bandwidth > 0.1 & tma_frontend_bound > 0.15 & tma_info_thread_ipc / 4 > 0.35",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend bandwidth issues",
	"PublicDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend bandwidth issues.  For example; inefficiencies at the instruction decoders; or restrictions for caching in the DSB (decoded uops cache) are categorized under Fetch Bandwidth. In such cases; the Frontend typically delivers suboptimal amount of uops to the Backend. Sample with: FRONTEND_RETIRED.LATENCY_GE_2_BUBBLES_GE_1_PS;FRONTEND_RETIRED.LATENCY_GE_1_PS;FRONTEND_RETIRED.LATENCY_GE_2_PS. Related metrics: tma_dsb_switches, tma_info_botlnk_l2_dsb_misses, tma_info_frontend_dsb_coverage, tma_info_inst_mix_iptb, tma_lcp"
},
{
	"MetricGroup": "Frontend",
	"MetricName": "tma_fetch_latency",
	"MetricExpr": "4 * IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE / tma_info_thread_slots",
	"MetricThreshold": "tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend latency issues",
	"PublicDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend latency issues.  For example; instruction-cache misses; iTLB misses or fetch stalls after a branch misprediction are categorized under Frontend Latency. In such cases; the Frontend eventually delivers no uops for some period. Sample with: FRONTEND_RETIRED.LATENCY_GE_16_PS;FRONTEND_RETIRED.LATENCY_GE_8_PS"
},
{
	"MetricGroup": "Frontend",
	"MetricName": "tma_info_bottleneck_big_code",
	"MetricExpr": "100 * tma_fetch_latency * (tma_itlb_misses + tma_icache_misses + tma_unknown_branches) / (tma_branch_resteers + tma_dsb_switches + tma_icache_misses + tma_itlb_misses + tma_lcp + tma_ms_switches)",
	"MetricThreshold": "tma_info_bottleneck_big_code > 20",
	"BriefDescription": "Total pipeline cost of instruction fetch related bottlenecks by large code footprint programs (i-side cache; TLB and BTB misses)",
	"PublicDescription": "Total pipeline cost of instruction fetch related bottlenecks by large code footprint programs (i-side cache; TLB and BTB misses). Related metrics: tma_info_bottleneck_branching_overhead"
},
{
	"MetricGroup": "Frontend",
	"MetricName": "tma_info_bottleneck_instruction_fetch_bw",
	"MetricExpr": "100 * (tma_frontend_bound - tma_fetch_latency * tma_mispredicts_resteers / (tma_branch_resteers + tma_dsb_switches + tma_icache_misses + tma_itlb_misses + tma_lcp + tma_ms_switches)) - tma_info_bottleneck_big_code",
	"MetricThreshold": "tma_info_bottleneck_instruction_fetch_bw > 20",
	"BriefDescription": "Total pipeline cost of instruction fetch bandwidth related bottlenecks"
},
{
	"MetricGroup": "Frontend",
	"MetricName": "tma_info_inst_mix_iptb",
	"MetricExpr": "INST_RETIRED.ANY / BR_INST_RETIRED.NEAR_TAKEN",
	"MetricThreshold": "tma_info_inst_mix_iptb < 9",
	"BriefDescription": "Instruction per taken branch",
	"PublicDescription": "Instruction per taken branch. Related metrics: tma_dsb_switches, tma_fetch_bandwidth, tma_info_botlnk_l2_dsb_misses, tma_info_frontend_dsb_coverage, tma_lcp"
},
{
	"MetricGroup": "HPC",
	"MetricName": "tma_fp_arith",
	"MetricExpr": "tma_x87_use + tma_fp_scalar + tma_fp_vector",
	"MetricThreshold": "tma_fp_arith > 0.2 & tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents overall arithmetic floating-point (FP) operations fraction the CPU has executed (retired)",
	"PublicDescription": "This metric represents overall arithmetic floating-point (FP) operations fraction the CPU has executed (retired). Note this metric's value may exceed its parent due to use of \"Uops\" CountDomain and FMA double-counting"
},
{
	"MetricGroup": "HPC",
	"MetricName": "tma_info_core_fp_arith_utilization",
	"MetricExpr": "(cpu@FP_ARITH_INST_RETIRED.SCALAR_SINGLE\\,umask\\=0x03@ + cpu@FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE\\,umask\\=0x3c@) / (2 * tma_info_core_core_clks)",
	"BriefDescription": "Actual per-core usage of the Floating Point non-X87 execution units (regardless of precision or vector-width)",
	"PublicDescription": "Actual per-core usage of the Floating Point non-X87 execution units (regardless of precision or vector-width). Values > 1 are possible due to ([BDW+] Fused-Multiply Add (FMA) counting - common; [ADL+] use all of ADD/MUL/FMA in Scalar or 128/256-bit vectors - less common)"
},
{
	"MetricGroup": "HPC",
	"MetricName": "tma_info_system_cpu_utilization",
	"MetricExpr": "CPU_CLK_UNHALTED.REF_TSC / TSC",
	"BriefDescription": "Average CPU Utilization"
},
{
	"MetricGroup": "HPC",
	"MetricName": "tma_info_system_dram_bw_use",
	"MetricExpr": "64 * (UNC_ARB_TRK_REQUESTS.ALL + UNC_ARB_COH_TRK_REQUESTS.ALL) / 1e6 / duration_time / 1e3",
	"BriefDescription": "Average external Memory Bandwidth Use for reads and writes [GB / sec]",
	"PublicDescription": "Average external Memory Bandwidth Use for reads and writes [GB / sec]. Related metrics: tma_fb_full, tma_info_bottleneck_memory_bandwidth, tma_mem_bandwidth, tma_sq_full"
},
{
	"MetricGroup": "HPC",
	"MetricName": "tma_info_system_gflops",
	"MetricExpr": "(FP_ARITH_INST_RETIRED.SCALAR_SINGLE + FP_ARITH_INST_RETIRED.SCALAR_DOUBLE + 2 * FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE + 4 * (FP_ARITH_INST_RETIRED.128B_PACKED_SINGLE + FP_ARITH_INST_RETIRED.256B_PACKED_DOUBLE) + 8 * FP_ARITH_INST_RETIRED.256B_PACKED_SINGLE) / 1e9 / duration_time",
	"BriefDescription": "Giga Floating Point Operations Per Second",
	"PublicDescription": "Giga Floating Point Operations Per Second. Aggregate across all supported options of: FP precisions, scalar and vector instructions, vector-width and AMX engine"
},
{
	"MetricGroup": "IcMiss",
	"MetricName": "tma_icache_misses",
	"MetricExpr": "(ICACHE_16B.IFDATA_STALL + 2 * cpu@ICACHE_16B.IFDATA_STALL\\,cmask\\=1\\,edge@) / tma_info_thread_clks",
	"MetricThreshold": "tma_icache_misses > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to instruction cache misses",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to instruction cache misses. Sample with: FRONTEND_RETIRED.L2_MISS_PS;FRONTEND_RETIRED.L1I_MISS_PS"
},
{
	"MetricGroup": "IcMiss",
	"MetricName": "tma_info_botlnk_l2_ic_misses",
	"MetricExpr": "100 * (tma_fetch_latency * tma_icache_misses / (tma_branch_resteers + tma_dsb_switches + tma_icache_misses + tma_itlb_misses + tma_lcp + tma_ms_switches))",
	"MetricThreshold": "tma_info_botlnk_l2_ic_misses > 5",
	"BriefDescription": "Total pipeline cost of Instruction Cache misses - subset of the Big_Code Bottleneck",
	"PublicDescription": "Total pipeline cost of Instruction Cache misses - subset of the Big_Code Bottleneck. Related metrics: "
},
{
	"MetricGroup": "IcMiss",
	"MetricName": "tma_info_bottleneck_big_code",
	"MetricExpr": "100 * tma_fetch_latency * (tma_itlb_misses + tma_icache_misses + tma_unknown_branches) / (tma_branch_resteers + tma_dsb_switches + tma_icache_misses + tma_itlb_misses + tma_lcp + tma_ms_switches)",
	"MetricThreshold": "tma_info_bottleneck_big_code > 20",
	"BriefDescription": "Total pipeline cost of instruction fetch related bottlenecks by large code footprint programs (i-side cache; TLB and BTB misses)",
	"PublicDescription": "Total pipeline cost of instruction fetch related bottlenecks by large code footprint programs (i-side cache; TLB and BTB misses). Related metrics: tma_info_bottleneck_branching_overhead"
},
{
	"MetricGroup": "IcMiss",
	"MetricName": "tma_info_frontend_icache_miss_latency",
	"MetricExpr": "ICACHE_16B.IFDATA_STALL / cpu@ICACHE_16B.IFDATA_STALL\\,cmask\\=1\\,edge@ + 2",
	"BriefDescription": "Average Latency for L1 instruction cache misses"
},
{
	"MetricGroup": "IcMiss",
	"MetricName": "tma_info_frontend_l2mpki_code",
	"MetricExpr": "1e3 * FRONTEND_RETIRED.L2_MISS / INST_RETIRED.ANY",
	"BriefDescription": "L2 cache true code cacheline misses per kilo instruction"
},
{
	"MetricGroup": "IcMiss",
	"MetricName": "tma_info_frontend_l2mpki_code_all",
	"MetricExpr": "1e3 * L2_RQSTS.CODE_RD_MISS / INST_RETIRED.ANY",
	"BriefDescription": "L2 cache speculative code cacheline misses per kilo instruction"
},
{
	"MetricGroup": "InsType",
	"MetricName": "tma_info_inst_mix_iparith",
	"MetricExpr": "INST_RETIRED.ANY / (cpu@FP_ARITH_INST_RETIRED.SCALAR_SINGLE\\,umask\\=0x03@ + cpu@FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE\\,umask\\=0x3c@)",
	"MetricThreshold": "tma_info_inst_mix_iparith < 10",
	"BriefDescription": "Instructions per FP Arithmetic instruction (lower number means higher occurrence rate)",
	"PublicDescription": "Instructions per FP Arithmetic instruction (lower number means higher occurrence rate). May undercount due to FMA double counting. Approximated prior to BDW"
},
{
	"MetricGroup": "InsType",
	"MetricName": "tma_info_inst_mix_iparith_avx128",
	"MetricExpr": "INST_RETIRED.ANY / (FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE + FP_ARITH_INST_RETIRED.128B_PACKED_SINGLE)",
	"MetricThreshold": "tma_info_inst_mix_iparith_avx128 < 10",
	"BriefDescription": "Instructions per FP Arithmetic AVX/SSE 128-bit instruction (lower number means higher occurrence rate)",
	"PublicDescription": "Instructions per FP Arithmetic AVX/SSE 128-bit instruction (lower number means higher occurrence rate). May undercount due to FMA double counting"
},
{
	"MetricGroup": "InsType",
	"MetricName": "tma_info_inst_mix_iparith_avx256",
	"MetricExpr": "INST_RETIRED.ANY / (FP_ARITH_INST_RETIRED.256B_PACKED_DOUBLE + FP_ARITH_INST_RETIRED.256B_PACKED_SINGLE)",
	"MetricThreshold": "tma_info_inst_mix_iparith_avx256 < 10",
	"BriefDescription": "Instructions per FP Arithmetic AVX* 256-bit instruction (lower number means higher occurrence rate)",
	"PublicDescription": "Instructions per FP Arithmetic AVX* 256-bit instruction (lower number means higher occurrence rate). May undercount due to FMA double counting"
},
{
	"MetricGroup": "InsType",
	"MetricName": "tma_info_inst_mix_iparith_scalar_dp",
	"MetricExpr": "INST_RETIRED.ANY / FP_ARITH_INST_RETIRED.SCALAR_DOUBLE",
	"MetricThreshold": "tma_info_inst_mix_iparith_scalar_dp < 10",
	"BriefDescription": "Instructions per FP Arithmetic Scalar Double-Precision instruction (lower number means higher occurrence rate)",
	"PublicDescription": "Instructions per FP Arithmetic Scalar Double-Precision instruction (lower number means higher occurrence rate). May undercount due to FMA double counting"
},
{
	"MetricGroup": "InsType",
	"MetricName": "tma_info_inst_mix_iparith_scalar_sp",
	"MetricExpr": "INST_RETIRED.ANY / FP_ARITH_INST_RETIRED.SCALAR_SINGLE",
	"MetricThreshold": "tma_info_inst_mix_iparith_scalar_sp < 10",
	"BriefDescription": "Instructions per FP Arithmetic Scalar Single-Precision instruction (lower number means higher occurrence rate)",
	"PublicDescription": "Instructions per FP Arithmetic Scalar Single-Precision instruction (lower number means higher occurrence rate). May undercount due to FMA double counting"
},
{
	"MetricGroup": "InsType",
	"MetricName": "tma_info_inst_mix_ipbranch",
	"MetricExpr": "INST_RETIRED.ANY / BR_INST_RETIRED.ALL_BRANCHES",
	"MetricThreshold": "tma_info_inst_mix_ipbranch < 8",
	"BriefDescription": "Instructions per Branch (lower number means higher occurrence rate)"
},
{
	"MetricGroup": "InsType",
	"MetricName": "tma_info_inst_mix_ipflop",
	"MetricExpr": "INST_RETIRED.ANY / (FP_ARITH_INST_RETIRED.SCALAR_SINGLE + FP_ARITH_INST_RETIRED.SCALAR_DOUBLE + 2 * FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE + 4 * (FP_ARITH_INST_RETIRED.128B_PACKED_SINGLE + FP_ARITH_INST_RETIRED.256B_PACKED_DOUBLE) + 8 * FP_ARITH_INST_RETIRED.256B_PACKED_SINGLE)",
	"MetricThreshold": "tma_info_inst_mix_ipflop < 10",
	"BriefDescription": "Instructions per Floating Point (FP) Operation (lower number means higher occurrence rate)"
},
{
	"MetricGroup": "InsType",
	"MetricName": "tma_info_inst_mix_ipload",
	"MetricExpr": "INST_RETIRED.ANY / MEM_INST_RETIRED.ALL_LOADS",
	"MetricThreshold": "tma_info_inst_mix_ipload < 3",
	"BriefDescription": "Instructions per Load (lower number means higher occurrence rate)"
},
{
	"MetricGroup": "InsType",
	"MetricName": "tma_info_inst_mix_ipstore",
	"MetricExpr": "INST_RETIRED.ANY / MEM_INST_RETIRED.ALL_STORES",
	"MetricThreshold": "tma_info_inst_mix_ipstore < 8",
	"BriefDescription": "Instructions per Store (lower number means higher occurrence rate)"
},
{
	"MetricGroup": "MachineClears",
	"MetricName": "tma_clears_resteers",
	"MetricExpr": "(1 - BR_MISP_RETIRED.ALL_BRANCHES / (BR_MISP_RETIRED.ALL_BRANCHES + MACHINE_CLEARS.COUNT)) * INT_MISC.CLEAR_RESTEER_CYCLES / tma_info_thread_clks",
	"MetricThreshold": "tma_clears_resteers > 0.05 & (tma_branch_resteers > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Machine Clears",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Machine Clears. Sample with: INT_MISC.CLEAR_RESTEER_CYCLES. Related metrics: tma_l1_bound, tma_machine_clears, tma_microcode_sequencer, tma_ms_switches"
},
{
	"MetricGroup": "MachineClears",
	"MetricName": "tma_machine_clears",
	"MetricExpr": "tma_bad_speculation - tma_branch_mispredicts",
	"MetricThreshold": "tma_machine_clears > 0.1 & tma_bad_speculation > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU has wasted due to Machine Clears",
	"PublicDescription": "This metric represents fraction of slots the CPU has wasted due to Machine Clears.  These slots are either wasted by uops fetched prior to the clear; or stalls the out-of-order portion of the machine needs to recover its state after the clear. For example; this can happen due to memory ordering Nukes (e.g. Memory Disambiguation) or Self-Modifying-Code (SMC) nukes. Sample with: MACHINE_CLEARS.COUNT. Related metrics: tma_clears_resteers, tma_contested_accesses, tma_data_sharing, tma_false_sharing, tma_l1_bound, tma_microcode_sequencer, tma_ms_switches, tma_remote_cache"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_bottleneck_memory_bandwidth",
	"MetricExpr": "100 * tma_memory_bound * (tma_dram_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_mem_bandwidth / (tma_mem_bandwidth + tma_mem_latency)) + tma_l3_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_sq_full / (tma_contested_accesses + tma_data_sharing + tma_l3_hit_latency + tma_sq_full))) + tma_l1_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_fb_full / (tma_4k_aliasing + tma_dtlb_load + tma_fb_full + tma_lock_latency + tma_split_loads + tma_store_fwd_blk))",
	"MetricThreshold": "tma_info_bottleneck_memory_bandwidth > 20",
	"BriefDescription": "Total pipeline cost of (external) Memory Bandwidth related bottlenecks",
	"PublicDescription": "Total pipeline cost of (external) Memory Bandwidth related bottlenecks. Related metrics: tma_fb_full, tma_info_system_dram_bw_use, tma_mem_bandwidth, tma_sq_full"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_bottleneck_memory_data_tlbs",
	"MetricExpr": "100 * tma_memory_bound * (tma_l1_bound / max(tma_memory_bound, tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_dtlb_load / max(tma_l1_bound, tma_4k_aliasing + tma_dtlb_load + tma_fb_full + tma_lock_latency + tma_split_loads + tma_store_fwd_blk)) + tma_store_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_dtlb_store / (tma_dtlb_store + tma_false_sharing + tma_split_stores + tma_store_latency)))",
	"MetricThreshold": "tma_info_bottleneck_memory_data_tlbs > 20",
	"BriefDescription": "Total pipeline cost of Memory Address Translation related bottlenecks (data-side TLBs)",
	"PublicDescription": "Total pipeline cost of Memory Address Translation related bottlenecks (data-side TLBs). Related metrics: tma_dtlb_load, tma_dtlb_store"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_bottleneck_memory_latency",
	"MetricExpr": "100 * tma_memory_bound * (tma_dram_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_mem_latency / (tma_mem_bandwidth + tma_mem_latency)) + tma_l3_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_l3_hit_latency / (tma_contested_accesses + tma_data_sharing + tma_l3_hit_latency + tma_sq_full)) + tma_l2_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound))",
	"MetricThreshold": "tma_info_bottleneck_memory_latency > 20",
	"BriefDescription": "Total pipeline cost of Memory Latency related bottlenecks (external memory and off-core caches)",
	"PublicDescription": "Total pipeline cost of Memory Latency related bottlenecks (external memory and off-core caches). Related metrics: tma_l3_hit_latency, tma_mem_latency"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_memory_core_l1d_cache_fill_bw",
	"MetricExpr": "64 * L1D.REPLACEMENT / 1e9 / duration_time",
	"BriefDescription": "Average per-core data fill bandwidth to the L1 data cache [GB / sec]"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_memory_core_l2_cache_fill_bw",
	"MetricExpr": "64 * L2_LINES_IN.ALL / 1e9 / duration_time",
	"BriefDescription": "Average per-core data fill bandwidth to the L2 cache [GB / sec]"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_memory_core_l3_cache_access_bw",
	"MetricExpr": "64 * OFFCORE_REQUESTS.ALL_REQUESTS / 1e9 / duration_time",
	"BriefDescription": "Average per-core data access bandwidth to the L3 cache [GB / sec]"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_memory_core_l3_cache_fill_bw",
	"MetricExpr": "64 * LONGEST_LAT_CACHE.MISS / 1e9 / duration_time",
	"BriefDescription": "Average per-core data fill bandwidth to the L3 cache [GB / sec]"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_memory_fb_hpki",
	"MetricExpr": "1e3 * MEM_LOAD_RETIRED.FB_HIT / INST_RETIRED.ANY",
	"BriefDescription": "Fill Buffer (FB) hits per kilo instructions for retired demand loads (L1D misses that merge into ongoing miss-handling entries)"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_memory_l1mpki",
	"MetricExpr": "1e3 * MEM_LOAD_RETIRED.L1_MISS / INST_RETIRED.ANY",
	"BriefDescription": "L1 cache true misses per kilo instruction for retired demand loads"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_memory_l1mpki_load",
	"MetricExpr": "1e3 * L2_RQSTS.ALL_DEMAND_DATA_RD / INST_RETIRED.ANY",
	"BriefDescription": "L1 cache true misses per kilo instruction for all demand loads (including speculative)"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_memory_l2hpki_all",
	"MetricExpr": "1e3 * (L2_RQSTS.REFERENCES - L2_RQSTS.MISS) / INST_RETIRED.ANY",
	"BriefDescription": "L2 cache hits per kilo instruction for all request types (including speculative)"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_memory_l2hpki_load",
	"MetricExpr": "1e3 * L2_RQSTS.DEMAND_DATA_RD_HIT / INST_RETIRED.ANY",
	"BriefDescription": "L2 cache hits per kilo instruction for all demand loads  (including speculative)"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_memory_l2mpki",
	"MetricExpr": "1e3 * MEM_LOAD_RETIRED.L2_MISS / INST_RETIRED.ANY",
	"BriefDescription": "L2 cache true misses per kilo instruction for retired demand loads"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_memory_l2mpki_all",
	"MetricExpr": "1e3 * L2_RQSTS.MISS / INST_RETIRED.ANY",
	"BriefDescription": "L2 cache ([RKL+] true) misses per kilo instruction for all request types (including speculative)"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_memory_l2mpki_load",
	"MetricExpr": "1e3 * L2_RQSTS.DEMAND_DATA_RD_MISS / INST_RETIRED.ANY",
	"BriefDescription": "L2 cache ([RKL+] true) misses per kilo instruction for all demand loads  (including speculative)"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_memory_l3mpki",
	"MetricExpr": "1e3 * MEM_LOAD_RETIRED.L3_MISS / INST_RETIRED.ANY",
	"BriefDescription": "L3 cache true misses per kilo instruction for retired demand loads"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_memory_load_miss_real_latency",
	"MetricExpr": "L1D_PEND_MISS.PENDING / (MEM_LOAD_RETIRED.L1_MISS + MEM_LOAD_RETIRED.FB_HIT)",
	"BriefDescription": "Actual Average Latency for L1 data-cache miss demand load operations (in core cycles)"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_memory_mlp",
	"MetricExpr": "L1D_PEND_MISS.PENDING / L1D_PEND_MISS.PENDING_CYCLES",
	"BriefDescription": "Memory-Level-Parallelism (average number of L1 miss demand load when there is at least one such miss",
	"PublicDescription": "Memory-Level-Parallelism (average number of L1 miss demand load when there is at least one such miss. Per-Logical Processor)"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_memory_thread_l1d_cache_fill_bw_1t",
	"MetricExpr": "tma_info_memory_core_l1d_cache_fill_bw",
	"BriefDescription": "Average per-thread data fill bandwidth to the L1 data cache [GB / sec]"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_memory_thread_l2_cache_fill_bw_1t",
	"MetricExpr": "tma_info_memory_core_l2_cache_fill_bw",
	"BriefDescription": "Average per-thread data fill bandwidth to the L2 cache [GB / sec]"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_memory_thread_l3_cache_access_bw_1t",
	"MetricExpr": "tma_info_memory_core_l3_cache_access_bw",
	"BriefDescription": "Average per-thread data access bandwidth to the L3 cache [GB / sec]"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_memory_thread_l3_cache_fill_bw_1t",
	"MetricExpr": "tma_info_memory_core_l3_cache_fill_bw",
	"BriefDescription": "Average per-thread data fill bandwidth to the L3 cache [GB / sec]"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_memory_tlb_load_stlb_mpki",
	"MetricExpr": "1e3 * DTLB_LOAD_MISSES.WALK_COMPLETED / INST_RETIRED.ANY",
	"BriefDescription": "STLB (2nd level TLB) data load speculative misses per kilo instruction (misses of any page-size that complete the page walk)"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_memory_tlb_page_walks_utilization",
	"MetricExpr": "(ITLB_MISSES.WALK_PENDING + DTLB_LOAD_MISSES.WALK_PENDING + DTLB_STORE_MISSES.WALK_PENDING + EPT.WALK_PENDING) / (2 * tma_info_core_core_clks)",
	"MetricThreshold": "tma_info_memory_tlb_page_walks_utilization > 0.5",
	"BriefDescription": "Utilization of the core's Page Walker(s) serving STLB misses triggered by instruction/Load/Store accesses"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_memory_tlb_store_stlb_mpki",
	"MetricExpr": "1e3 * DTLB_STORE_MISSES.WALK_COMPLETED / INST_RETIRED.ANY",
	"BriefDescription": "STLB (2nd level TLB) data store speculative misses per kilo instruction (misses of any page-size that complete the page walk)"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_system_dram_bw_use",
	"MetricExpr": "64 * (UNC_ARB_TRK_REQUESTS.ALL + UNC_ARB_COH_TRK_REQUESTS.ALL) / 1e6 / duration_time / 1e3",
	"BriefDescription": "Average external Memory Bandwidth Use for reads and writes [GB / sec]",
	"PublicDescription": "Average external Memory Bandwidth Use for reads and writes [GB / sec]. Related metrics: tma_fb_full, tma_info_bottleneck_memory_bandwidth, tma_mem_bandwidth, tma_sq_full"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_system_mem_parallel_reads",
	"MetricExpr": "UNC_ARB_TRK_OCCUPANCY.DATA_READ / UNC_ARB_TRK_OCCUPANCY.DATA_READ@thresh\\=1@",
	"BriefDescription": "Average number of parallel data read requests to external memory",
	"PublicDescription": "Average number of parallel data read requests to external memory. Accounts for demand loads and L1/L2 prefetches"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_system_mem_parallel_requests",
	"MetricExpr": "UNC_ARB_TRK_OCCUPANCY.ALL / UNC_ARB_TRK_OCCUPANCY.CYCLES_WITH_ANY_REQUEST",
	"BriefDescription": "Average number of parallel requests to external memory",
	"PublicDescription": "Average number of parallel requests to external memory. Accounts for all requests"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_system_mem_read_latency",
	"MetricExpr": "1e9 * (UNC_ARB_TRK_OCCUPANCY.DATA_READ / UNC_ARB_TRK_REQUESTS.DATA_READ) / (tma_info_system_socket_clks / duration_time)",
	"BriefDescription": "Average latency of data read request to external memory (in nanoseconds)",
	"PublicDescription": "Average latency of data read request to external memory (in nanoseconds). Accounts for demand loads and L1/L2 prefetches. ([RKL+]memory-controller only)"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_system_mem_request_latency",
	"MetricExpr": "UNC_ARB_TRK_OCCUPANCY.ALL / UNC_ARB_TRK_REQUESTS.ALL",
	"BriefDescription": "Average latency of all requests to external memory (in Uncore cycles)"
},
{
	"MetricGroup": "Mem",
	"MetricName": "tma_info_thread_cpi",
	"MetricExpr": "1 / tma_info_thread_ipc",
	"BriefDescription": "Cycles Per Instruction (per Logical Processor)"
},
{
	"MetricGroup": "MemoryBW",
	"MetricName": "tma_fb_full",
	"MetricExpr": "tma_info_memory_load_miss_real_latency * cpu@L1D_PEND_MISS.FB_FULL\\,cmask\\=1@ / tma_info_thread_clks",
	"MetricThreshold": "tma_fb_full > 0.3",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric does a *rough estimation* of how often L1D Fill Buffer unavailability limited additional L1D miss memory access requests to proceed",
	"PublicDescription": "This metric does a *rough estimation* of how often L1D Fill Buffer unavailability limited additional L1D miss memory access requests to proceed. The higher the metric value; the deeper the memory hierarchy level the misses are satisfied from (metric values >1 are valid). Often it hints on approaching bandwidth limits (to L2 cache; L3 cache or external memory). Related metrics: tma_info_bottleneck_memory_bandwidth, tma_info_system_dram_bw_use, tma_mem_bandwidth, tma_sq_full, tma_store_latency, tma_streaming_stores"
},
{
	"MetricGroup": "MemoryBW",
	"MetricName": "tma_info_bottleneck_memory_bandwidth",
	"MetricExpr": "100 * tma_memory_bound * (tma_dram_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_mem_bandwidth / (tma_mem_bandwidth + tma_mem_latency)) + tma_l3_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_sq_full / (tma_contested_accesses + tma_data_sharing + tma_l3_hit_latency + tma_sq_full))) + tma_l1_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_fb_full / (tma_4k_aliasing + tma_dtlb_load + tma_fb_full + tma_lock_latency + tma_split_loads + tma_store_fwd_blk))",
	"MetricThreshold": "tma_info_bottleneck_memory_bandwidth > 20",
	"BriefDescription": "Total pipeline cost of (external) Memory Bandwidth related bottlenecks",
	"PublicDescription": "Total pipeline cost of (external) Memory Bandwidth related bottlenecks. Related metrics: tma_fb_full, tma_info_system_dram_bw_use, tma_mem_bandwidth, tma_sq_full"
},
{
	"MetricGroup": "MemoryBW",
	"MetricName": "tma_info_memory_core_l1d_cache_fill_bw",
	"MetricExpr": "64 * L1D.REPLACEMENT / 1e9 / duration_time",
	"BriefDescription": "Average per-core data fill bandwidth to the L1 data cache [GB / sec]"
},
{
	"MetricGroup": "MemoryBW",
	"MetricName": "tma_info_memory_core_l2_cache_fill_bw",
	"MetricExpr": "64 * L2_LINES_IN.ALL / 1e9 / duration_time",
	"BriefDescription": "Average per-core data fill bandwidth to the L2 cache [GB / sec]"
},
{
	"MetricGroup": "MemoryBW",
	"MetricName": "tma_info_memory_core_l3_cache_access_bw",
	"MetricExpr": "64 * OFFCORE_REQUESTS.ALL_REQUESTS / 1e9 / duration_time",
	"BriefDescription": "Average per-core data access bandwidth to the L3 cache [GB / sec]"
},
{
	"MetricGroup": "MemoryBW",
	"MetricName": "tma_info_memory_core_l3_cache_fill_bw",
	"MetricExpr": "64 * LONGEST_LAT_CACHE.MISS / 1e9 / duration_time",
	"BriefDescription": "Average per-core data fill bandwidth to the L3 cache [GB / sec]"
},
{
	"MetricGroup": "MemoryBW",
	"MetricName": "tma_info_memory_mlp",
	"MetricExpr": "L1D_PEND_MISS.PENDING / L1D_PEND_MISS.PENDING_CYCLES",
	"BriefDescription": "Memory-Level-Parallelism (average number of L1 miss demand load when there is at least one such miss",
	"PublicDescription": "Memory-Level-Parallelism (average number of L1 miss demand load when there is at least one such miss. Per-Logical Processor)"
},
{
	"MetricGroup": "MemoryBW",
	"MetricName": "tma_info_memory_thread_l1d_cache_fill_bw_1t",
	"MetricExpr": "tma_info_memory_core_l1d_cache_fill_bw",
	"BriefDescription": "Average per-thread data fill bandwidth to the L1 data cache [GB / sec]"
},
{
	"MetricGroup": "MemoryBW",
	"MetricName": "tma_info_memory_thread_l2_cache_fill_bw_1t",
	"MetricExpr": "tma_info_memory_core_l2_cache_fill_bw",
	"BriefDescription": "Average per-thread data fill bandwidth to the L2 cache [GB / sec]"
},
{
	"MetricGroup": "MemoryBW",
	"MetricName": "tma_info_memory_thread_l3_cache_access_bw_1t",
	"MetricExpr": "tma_info_memory_core_l3_cache_access_bw",
	"BriefDescription": "Average per-thread data access bandwidth to the L3 cache [GB / sec]"
},
{
	"MetricGroup": "MemoryBW",
	"MetricName": "tma_info_memory_thread_l3_cache_fill_bw_1t",
	"MetricExpr": "tma_info_memory_core_l3_cache_fill_bw",
	"BriefDescription": "Average per-thread data fill bandwidth to the L3 cache [GB / sec]"
},
{
	"MetricGroup": "MemoryBW",
	"MetricName": "tma_info_system_dram_bw_use",
	"MetricExpr": "64 * (UNC_ARB_TRK_REQUESTS.ALL + UNC_ARB_COH_TRK_REQUESTS.ALL) / 1e6 / duration_time / 1e3",
	"BriefDescription": "Average external Memory Bandwidth Use for reads and writes [GB / sec]",
	"PublicDescription": "Average external Memory Bandwidth Use for reads and writes [GB / sec]. Related metrics: tma_fb_full, tma_info_bottleneck_memory_bandwidth, tma_mem_bandwidth, tma_sq_full"
},
{
	"MetricGroup": "MemoryBW",
	"MetricName": "tma_info_system_mem_parallel_reads",
	"MetricExpr": "UNC_ARB_TRK_OCCUPANCY.DATA_READ / UNC_ARB_TRK_OCCUPANCY.DATA_READ@thresh\\=1@",
	"BriefDescription": "Average number of parallel data read requests to external memory",
	"PublicDescription": "Average number of parallel data read requests to external memory. Accounts for demand loads and L1/L2 prefetches"
},
{
	"MetricGroup": "MemoryBW",
	"MetricName": "tma_mem_bandwidth",
	"MetricExpr": "min(CPU_CLK_UNHALTED.THREAD, cpu@OFFCORE_REQUESTS_OUTSTANDING.ALL_DATA_RD\\,cmask\\=4@) / tma_info_thread_clks",
	"MetricThreshold": "tma_mem_bandwidth > 0.2 & (tma_dram_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles where the core's performance was likely hurt due to approaching bandwidth limits of external memory (DRAM)",
	"PublicDescription": "This metric estimates fraction of cycles where the core's performance was likely hurt due to approaching bandwidth limits of external memory (DRAM).  The underlying heuristic assumes that a similar off-core traffic is generated by all IA cores. This metric does not aggregate non-data-read requests by this logical processor; requests from other IA Logical Processors/Physical Cores/sockets; or other non-IA devices like GPU; hence the maximum external memory bandwidth limits may or may not be approached when this metric is flagged (see Uncore counters for that). Related metrics: tma_fb_full, tma_info_bottleneck_memory_bandwidth, tma_info_system_dram_bw_use, tma_sq_full"
},
{
	"MetricGroup": "MemoryBW",
	"MetricName": "tma_sq_full",
	"MetricExpr": "(OFFCORE_REQUESTS_BUFFER.SQ_FULL / 2 if #SMT_on else OFFCORE_REQUESTS_BUFFER.SQ_FULL) / tma_info_core_core_clks",
	"MetricThreshold": "tma_sq_full > 0.3 & (tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric measures fraction of cycles where the Super Queue (SQ) was full taking into account all request-types and both hardware SMT threads (Logical Processors)",
	"PublicDescription": "This metric measures fraction of cycles where the Super Queue (SQ) was full taking into account all request-types and both hardware SMT threads (Logical Processors). Related metrics: tma_fb_full, tma_info_bottleneck_memory_bandwidth, tma_info_system_dram_bw_use, tma_mem_bandwidth"
},
{
	"MetricGroup": "MemoryBound",
	"MetricName": "tma_dram_bound",
	"MetricExpr": "CYCLE_ACTIVITY.STALLS_L3_MISS / tma_info_thread_clks + (CYCLE_ACTIVITY.STALLS_L1D_MISS - CYCLE_ACTIVITY.STALLS_L2_MISS) / tma_info_thread_clks - tma_l2_bound",
	"MetricThreshold": "tma_dram_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled on accesses to external memory (DRAM) by loads",
	"PublicDescription": "This metric estimates how often the CPU was stalled on accesses to external memory (DRAM) by loads. Better caching can improve the latency and increase performance. Sample with: MEM_LOAD_RETIRED.L3_MISS_PS"
},
{
	"MetricGroup": "MemoryBound",
	"MetricName": "tma_info_memory_load_miss_real_latency",
	"MetricExpr": "L1D_PEND_MISS.PENDING / (MEM_LOAD_RETIRED.L1_MISS + MEM_LOAD_RETIRED.FB_HIT)",
	"BriefDescription": "Actual Average Latency for L1 data-cache miss demand load operations (in core cycles)"
},
{
	"MetricGroup": "MemoryBound",
	"MetricName": "tma_info_memory_mlp",
	"MetricExpr": "L1D_PEND_MISS.PENDING / L1D_PEND_MISS.PENDING_CYCLES",
	"BriefDescription": "Memory-Level-Parallelism (average number of L1 miss demand load when there is at least one such miss",
	"PublicDescription": "Memory-Level-Parallelism (average number of L1 miss demand load when there is at least one such miss. Per-Logical Processor)"
},
{
	"MetricGroup": "MemoryBound",
	"MetricName": "tma_l1_bound",
	"MetricExpr": "max((CYCLE_ACTIVITY.STALLS_MEM_ANY - CYCLE_ACTIVITY.STALLS_L1D_MISS) / tma_info_thread_clks, 0)",
	"MetricThreshold": "tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled without loads missing the L1 data cache",
	"PublicDescription": "This metric estimates how often the CPU was stalled without loads missing the L1 data cache.  The L1 data cache typically has the shortest latency.  However; in certain cases like loads blocked on older stores; a load might suffer due to high latency even though it is being satisfied by the L1. Another example is loads who miss in the TLB. These cases are characterized by execution unit stalls; while some non-completed demand load lives in the machine without having that demand load missing the L1 cache. Sample with: MEM_LOAD_RETIRED.L1_HIT_PS;MEM_LOAD_RETIRED.FB_HIT_PS. Related metrics: tma_clears_resteers, tma_machine_clears, tma_microcode_sequencer, tma_ms_switches, tma_ports_utilized_1"
},
{
	"MetricGroup": "MemoryBound",
	"MetricName": "tma_l2_bound",
	"MetricExpr": "MEM_LOAD_RETIRED.L2_HIT * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS) / (MEM_LOAD_RETIRED.L2_HIT * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS) + cpu@L1D_PEND_MISS.FB_FULL\\,cmask\\=1@) * ((CYCLE_ACTIVITY.STALLS_L1D_MISS - CYCLE_ACTIVITY.STALLS_L2_MISS) / tma_info_thread_clks)",
	"MetricThreshold": "tma_l2_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled due to L2 cache accesses by loads",
	"PublicDescription": "This metric estimates how often the CPU was stalled due to L2 cache accesses by loads.  Avoiding cache misses (i.e. L1 misses/L2 hits) can improve the latency and increase performance. Sample with: MEM_LOAD_RETIRED.L2_HIT_PS"
},
{
	"MetricGroup": "MemoryBound",
	"MetricName": "tma_l3_bound",
	"MetricExpr": "(CYCLE_ACTIVITY.STALLS_L2_MISS - CYCLE_ACTIVITY.STALLS_L3_MISS) / tma_info_thread_clks",
	"MetricThreshold": "tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled due to loads accesses to L3 cache or contended with a sibling Core",
	"PublicDescription": "This metric estimates how often the CPU was stalled due to loads accesses to L3 cache or contended with a sibling Core.  Avoiding cache misses (i.e. L2 misses/L3 hits) can improve the latency and increase performance. Sample with: MEM_LOAD_RETIRED.L3_HIT_PS"
},
{
	"MetricGroup": "MemoryBound",
	"MetricName": "tma_store_bound",
	"MetricExpr": "EXE_ACTIVITY.BOUND_ON_STORES / tma_info_thread_clks",
	"MetricThreshold": "tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often CPU was stalled  due to RFO store memory accesses; RFO store issue a read-for-ownership request before the write",
	"PublicDescription": "This metric estimates how often CPU was stalled  due to RFO store memory accesses; RFO store issue a read-for-ownership request before the write. Even though store accesses do not typically stall out-of-order CPUs; there are few cases where stores can lead to actual stalls. This metric will be flagged should RFO stores be a bottleneck. Sample with: MEM_INST_RETIRED.ALL_STORES_PS"
},
{
	"MetricGroup": "MemoryLat",
	"MetricName": "tma_info_bottleneck_memory_latency",
	"MetricExpr": "100 * tma_memory_bound * (tma_dram_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_mem_latency / (tma_mem_bandwidth + tma_mem_latency)) + tma_l3_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_l3_hit_latency / (tma_contested_accesses + tma_data_sharing + tma_l3_hit_latency + tma_sq_full)) + tma_l2_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound))",
	"MetricThreshold": "tma_info_bottleneck_memory_latency > 20",
	"BriefDescription": "Total pipeline cost of Memory Latency related bottlenecks (external memory and off-core caches)",
	"PublicDescription": "Total pipeline cost of Memory Latency related bottlenecks (external memory and off-core caches). Related metrics: tma_l3_hit_latency, tma_mem_latency"
},
{
	"MetricGroup": "MemoryLat",
	"MetricName": "tma_info_memory_load_miss_real_latency",
	"MetricExpr": "L1D_PEND_MISS.PENDING / (MEM_LOAD_RETIRED.L1_MISS + MEM_LOAD_RETIRED.FB_HIT)",
	"BriefDescription": "Actual Average Latency for L1 data-cache miss demand load operations (in core cycles)"
},
{
	"MetricGroup": "MemoryLat",
	"MetricName": "tma_info_system_mem_read_latency",
	"MetricExpr": "1e9 * (UNC_ARB_TRK_OCCUPANCY.DATA_READ / UNC_ARB_TRK_REQUESTS.DATA_READ) / (tma_info_system_socket_clks / duration_time)",
	"BriefDescription": "Average latency of data read request to external memory (in nanoseconds)",
	"PublicDescription": "Average latency of data read request to external memory (in nanoseconds). Accounts for demand loads and L1/L2 prefetches. ([RKL+]memory-controller only)"
},
{
	"MetricGroup": "MemoryLat",
	"MetricName": "tma_l3_hit_latency",
	"MetricExpr": "6.5 * tma_info_system_average_frequency * MEM_LOAD_RETIRED.L3_HIT * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS / 2) / tma_info_thread_clks",
	"MetricThreshold": "tma_l3_hit_latency > 0.1 & (tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles with demand load accesses that hit the L3 cache under unloaded scenarios (possibly L3 latency limited)",
	"PublicDescription": "This metric represents fraction of cycles with demand load accesses that hit the L3 cache under unloaded scenarios (possibly L3 latency limited).  Avoiding private cache misses (i.e. L2 misses/L3 hits) will improve the latency; reduce contention with sibling physical cores and increase performance.  Note the value of this node may overlap with its siblings. Sample with: MEM_LOAD_RETIRED.L3_HIT_PS. Related metrics: tma_info_bottleneck_memory_latency, tma_mem_latency"
},
{
	"MetricGroup": "MemoryLat",
	"MetricName": "tma_mem_latency",
	"MetricExpr": "min(CPU_CLK_UNHALTED.THREAD, OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DATA_RD) / tma_info_thread_clks - tma_mem_bandwidth",
	"MetricThreshold": "tma_mem_latency > 0.1 & (tma_dram_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles where the performance was likely hurt due to latency from external memory (DRAM)",
	"PublicDescription": "This metric estimates fraction of cycles where the performance was likely hurt due to latency from external memory (DRAM).  This metric does not aggregate requests from other Logical Processors/Physical Cores/sockets (see Uncore counters for that). Related metrics: tma_info_bottleneck_memory_latency, tma_l3_hit_latency"
},
{
	"MetricGroup": "MemoryLat",
	"MetricName": "tma_store_latency",
	"MetricExpr": "(L2_RQSTS.RFO_HIT * 9 * (1 - MEM_INST_RETIRED.LOCK_LOADS / MEM_INST_RETIRED.ALL_STORES) + (1 - MEM_INST_RETIRED.LOCK_LOADS / MEM_INST_RETIRED.ALL_STORES) * min(CPU_CLK_UNHALTED.THREAD, OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_RFO)) / tma_info_thread_clks",
	"MetricThreshold": "tma_store_latency > 0.1 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles the CPU spent handling L1D store misses",
	"PublicDescription": "This metric estimates fraction of cycles the CPU spent handling L1D store misses. Store accesses usually less impact out-of-order core performance; however; holding resources for longer time can lead into undesired implications (e.g. contention on L1D fill-buffer entries - see FB_Full). Related metrics: tma_fb_full, tma_lock_latency"
},
{
	"MetricGroup": "MemoryTLB",
	"MetricName": "tma_dtlb_load",
	"MetricExpr": "min(9 * cpu@DTLB_LOAD_MISSES.STLB_HIT\\,cmask\\=1@ + DTLB_LOAD_MISSES.WALK_ACTIVE, max(CYCLE_ACTIVITY.CYCLES_MEM_ANY - CYCLE_ACTIVITY.CYCLES_L1D_MISS, 0)) / tma_info_thread_clks",
	"MetricThreshold": "tma_dtlb_load > 0.1 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates the fraction of cycles where the Data TLB (DTLB) was missed by load accesses",
	"PublicDescription": "This metric roughly estimates the fraction of cycles where the Data TLB (DTLB) was missed by load accesses. TLBs (Translation Look-aside Buffers) are processor caches for recently used entries out of the Page Tables that are used to map virtual- to physical-addresses by the operating system. This metric approximates the potential delay of demand loads missing the first-level data TLB (assuming worst case scenario with back to back misses to different pages). This includes hitting in the second-level TLB (STLB) as well as performing a hardware page walk on an STLB miss. Sample with: MEM_INST_RETIRED.STLB_MISS_LOADS_PS. Related metrics: tma_dtlb_store, tma_info_bottleneck_memory_data_tlbs"
},
{
	"MetricGroup": "MemoryTLB",
	"MetricName": "tma_dtlb_store",
	"MetricExpr": "(9 * cpu@DTLB_STORE_MISSES.STLB_HIT\\,cmask\\=1@ + DTLB_STORE_MISSES.WALK_ACTIVE) / tma_info_core_core_clks",
	"MetricThreshold": "tma_dtlb_store > 0.05 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates the fraction of cycles spent handling first-level data TLB store misses",
	"PublicDescription": "This metric roughly estimates the fraction of cycles spent handling first-level data TLB store misses.  As with ordinary data caching; focus on improving data locality and reducing working-set size to reduce DTLB overhead.  Additionally; consider using profile-guided optimization (PGO) to collocate frequently-used data on the same page.  Try using larger page sizes for large amounts of frequently-used data. Sample with: MEM_INST_RETIRED.STLB_MISS_STORES_PS. Related metrics: tma_dtlb_load, tma_info_bottleneck_memory_data_tlbs"
},
{
	"MetricGroup": "MemoryTLB",
	"MetricName": "tma_info_bottleneck_big_code",
	"MetricExpr": "100 * tma_fetch_latency * (tma_itlb_misses + tma_icache_misses + tma_unknown_branches) / (tma_branch_resteers + tma_dsb_switches + tma_icache_misses + tma_itlb_misses + tma_lcp + tma_ms_switches)",
	"MetricThreshold": "tma_info_bottleneck_big_code > 20",
	"BriefDescription": "Total pipeline cost of instruction fetch related bottlenecks by large code footprint programs (i-side cache; TLB and BTB misses)",
	"PublicDescription": "Total pipeline cost of instruction fetch related bottlenecks by large code footprint programs (i-side cache; TLB and BTB misses). Related metrics: tma_info_bottleneck_branching_overhead"
},
{
	"MetricGroup": "MemoryTLB",
	"MetricName": "tma_info_bottleneck_memory_data_tlbs",
	"MetricExpr": "100 * tma_memory_bound * (tma_l1_bound / max(tma_memory_bound, tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_dtlb_load / max(tma_l1_bound, tma_4k_aliasing + tma_dtlb_load + tma_fb_full + tma_lock_latency + tma_split_loads + tma_store_fwd_blk)) + tma_store_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_dtlb_store / (tma_dtlb_store + tma_false_sharing + tma_split_stores + tma_store_latency)))",
	"MetricThreshold": "tma_info_bottleneck_memory_data_tlbs > 20",
	"BriefDescription": "Total pipeline cost of Memory Address Translation related bottlenecks (data-side TLBs)",
	"PublicDescription": "Total pipeline cost of Memory Address Translation related bottlenecks (data-side TLBs). Related metrics: tma_dtlb_load, tma_dtlb_store"
},
{
	"MetricGroup": "MemoryTLB",
	"MetricName": "tma_info_memory_tlb_code_stlb_mpki",
	"MetricExpr": "1e3 * ITLB_MISSES.WALK_COMPLETED / INST_RETIRED.ANY",
	"BriefDescription": "STLB (2nd level TLB) code speculative misses per kilo instruction (misses of any page-size that complete the page walk)"
},
{
	"MetricGroup": "MemoryTLB",
	"MetricName": "tma_info_memory_tlb_load_stlb_mpki",
	"MetricExpr": "1e3 * DTLB_LOAD_MISSES.WALK_COMPLETED / INST_RETIRED.ANY",
	"BriefDescription": "STLB (2nd level TLB) data load speculative misses per kilo instruction (misses of any page-size that complete the page walk)"
},
{
	"MetricGroup": "MemoryTLB",
	"MetricName": "tma_info_memory_tlb_page_walks_utilization",
	"MetricExpr": "(ITLB_MISSES.WALK_PENDING + DTLB_LOAD_MISSES.WALK_PENDING + DTLB_STORE_MISSES.WALK_PENDING + EPT.WALK_PENDING) / (2 * tma_info_core_core_clks)",
	"MetricThreshold": "tma_info_memory_tlb_page_walks_utilization > 0.5",
	"BriefDescription": "Utilization of the core's Page Walker(s) serving STLB misses triggered by instruction/Load/Store accesses"
},
{
	"MetricGroup": "MemoryTLB",
	"MetricName": "tma_info_memory_tlb_store_stlb_mpki",
	"MetricExpr": "1e3 * DTLB_STORE_MISSES.WALK_COMPLETED / INST_RETIRED.ANY",
	"BriefDescription": "STLB (2nd level TLB) data store speculative misses per kilo instruction (misses of any page-size that complete the page walk)"
},
{
	"MetricGroup": "MemoryTLB",
	"MetricName": "tma_itlb_misses",
	"MetricExpr": "ICACHE_64B.IFTAG_STALL / tma_info_thread_clks",
	"MetricThreshold": "tma_itlb_misses > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Instruction TLB (ITLB) misses",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to Instruction TLB (ITLB) misses. Sample with: FRONTEND_RETIRED.STLB_MISS_PS;FRONTEND_RETIRED.ITLB_MISS_PS"
},
{
	"MetricGroup": "MemoryTLB",
	"MetricName": "tma_load_stlb_hit",
	"MetricExpr": "tma_dtlb_load - tma_load_stlb_miss",
	"MetricThreshold": "tma_load_stlb_hit > 0.05 & (tma_dtlb_load > 0.1 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates the fraction of cycles where the (first level) DTLB was missed by load accesses, that later on hit in second-level TLB (STLB)"
},
{
	"MetricGroup": "MemoryTLB",
	"MetricName": "tma_load_stlb_miss",
	"MetricExpr": "DTLB_LOAD_MISSES.WALK_ACTIVE / tma_info_thread_clks",
	"MetricThreshold": "tma_load_stlb_miss > 0.05 & (tma_dtlb_load > 0.1 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates the fraction of cycles where the Second-level TLB (STLB) was missed by load accesses, performing a hardware page walk"
},
{
	"MetricGroup": "MemoryTLB",
	"MetricName": "tma_store_stlb_hit",
	"MetricExpr": "tma_dtlb_store - tma_store_stlb_miss",
	"MetricThreshold": "tma_store_stlb_hit > 0.05 & (tma_dtlb_store > 0.05 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates the fraction of cycles where the TLB was missed by store accesses, hitting in the second-level TLB (STLB)"
},
{
	"MetricGroup": "MemoryTLB",
	"MetricName": "tma_store_stlb_miss",
	"MetricExpr": "DTLB_STORE_MISSES.WALK_ACTIVE / tma_info_core_core_clks",
	"MetricThreshold": "tma_store_stlb_miss > 0.05 & (tma_dtlb_store > 0.05 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates the fraction of cycles where the STLB was missed by store accesses, performing a hardware page walk"
},
{
	"MetricGroup": "Memory_BW",
	"MetricName": "tma_info_memory_oro_data_l2_mlp",
	"MetricExpr": "OFFCORE_REQUESTS_OUTSTANDING.ALL_DATA_RD / OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DATA_RD",
	"BriefDescription": "Average Parallel L2 cache miss data reads"
},
{
	"MetricGroup": "Memory_BW",
	"MetricName": "tma_info_memory_oro_load_l2_mlp",
	"MetricExpr": "OFFCORE_REQUESTS_OUTSTANDING.DEMAND_DATA_RD / OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_DATA_RD",
	"BriefDescription": "Average Parallel L2 cache miss demand Loads"
},
{
	"MetricGroup": "Memory_Lat",
	"MetricName": "tma_info_memory_oro_load_l2_miss_latency",
	"MetricExpr": "OFFCORE_REQUESTS_OUTSTANDING.DEMAND_DATA_RD / OFFCORE_REQUESTS.DEMAND_DATA_RD",
	"BriefDescription": "Average Latency for L2 cache miss demand Loads"
},
{
	"MetricGroup": "MicroSeq",
	"MetricName": "tma_microcode_sequencer",
	"MetricExpr": "UOPS_RETIRED.RETIRE_SLOTS / UOPS_ISSUED.ANY * IDQ.MS_UOPS / tma_info_thread_slots",
	"MetricThreshold": "tma_microcode_sequencer > 0.05 & tma_heavy_operations > 0.1",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU was retiring uops fetched by the Microcode Sequencer (MS) unit",
	"PublicDescription": "This metric represents fraction of slots the CPU was retiring uops fetched by the Microcode Sequencer (MS) unit.  The MS is used for CISC instructions not supported by the default decoders (like repeat move strings; or CPUID); or by microcode assists used to address some operation modes (like in Floating Point assists). These cases can often be avoided. Sample with: IDQ.MS_UOPS. Related metrics: tma_clears_resteers, tma_l1_bound, tma_machine_clears, tma_ms_switches"
},
{
	"MetricGroup": "MicroSeq",
	"MetricName": "tma_ms_switches",
	"MetricExpr": "2 * IDQ.MS_SWITCHES / tma_info_thread_clks",
	"MetricThreshold": "tma_ms_switches > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates the fraction of cycles when the CPU was stalled due to switches of uop delivery to the Microcode Sequencer (MS)",
	"PublicDescription": "This metric estimates the fraction of cycles when the CPU was stalled due to switches of uop delivery to the Microcode Sequencer (MS). Commonly used instructions are optimized for delivery by the DSB (decoded i-cache) or MITE (legacy instruction decode) pipelines. Certain operations cannot be handled natively by the execution pipeline; and must be performed by microcode (small programs injected into the execution stream). Switching to the MS too often can negatively impact performance. The MS is designated to deliver long uop flows required by CISC instructions like CPUID; or uncommon conditions like Floating Point Assists when dealing with Denormals. Sample with: IDQ.MS_SWITCHES. Related metrics: tma_clears_resteers, tma_l1_bound, tma_machine_clears, tma_microcode_sequencer, tma_mixing_vectors, tma_serializing_operation"
},
{
	"MetricGroup": "OS",
	"MetricName": "tma_info_system_ipfarbranch",
	"MetricExpr": "INST_RETIRED.ANY / BR_INST_RETIRED.FAR_BRANCH:u",
	"MetricThreshold": "tma_info_system_ipfarbranch < 1e6",
	"BriefDescription": "Instructions per Far Branch ( Far Branches apply upon transition from application to operating system, handling interrupts, exceptions) [lower number means higher occurrence rate]"
},
{
	"MetricGroup": "OS",
	"MetricName": "tma_info_system_kernel_cpi",
	"MetricExpr": "CPU_CLK_UNHALTED.THREAD_P:k / INST_RETIRED.ANY_P:k",
	"BriefDescription": "Cycles Per Instruction for the Operating System (OS) Kernel mode"
},
{
	"MetricGroup": "OS",
	"MetricName": "tma_info_system_kernel_utilization",
	"MetricExpr": "CPU_CLK_UNHALTED.THREAD_P:k / CPU_CLK_UNHALTED.THREAD",
	"MetricThreshold": "tma_info_system_kernel_utilization > 0.05",
	"BriefDescription": "Fraction of cycles spent in the Operating System (OS) Kernel mode"
},
{
	"MetricGroup": "Offcore",
	"MetricName": "tma_contested_accesses",
	"MetricExpr": "(18.5 * tma_info_system_average_frequency * MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM + 16.5 * tma_info_system_average_frequency * MEM_LOAD_L3_HIT_RETIRED.XSNP_MISS) * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS / 2) / tma_info_thread_clks",
	"MetricThreshold": "tma_contested_accesses > 0.05 & (tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to contested accesses",
	"PublicDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to contested accesses. Contested accesses occur when data written by one Logical Processor are read by another Logical Processor on a different Physical Core. Examples of contested accesses include synchronizations such as locks; true data sharing such as modified locked variables; and false sharing. Sample with: MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM_PS;MEM_LOAD_L3_HIT_RETIRED.XSNP_MISS_PS. Related metrics: tma_data_sharing, tma_false_sharing, tma_machine_clears, tma_remote_cache"
},
{
	"MetricGroup": "Offcore",
	"MetricName": "tma_data_sharing",
	"MetricExpr": "16.5 * tma_info_system_average_frequency * MEM_LOAD_L3_HIT_RETIRED.XSNP_HIT * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS / 2) / tma_info_thread_clks",
	"MetricThreshold": "tma_data_sharing > 0.05 & (tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to data-sharing accesses",
	"PublicDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to data-sharing accesses. Data shared by multiple Logical Processors (even just read shared) may cause increased access latency due to cache coherency. Excessive data sharing can drastically harm multithreaded performance. Sample with: MEM_LOAD_L3_HIT_RETIRED.XSNP_HIT_PS. Related metrics: tma_contested_accesses, tma_false_sharing, tma_machine_clears, tma_remote_cache"
},
{
	"MetricGroup": "Offcore",
	"MetricName": "tma_false_sharing",
	"MetricExpr": "22 * tma_info_system_average_frequency * OFFCORE_RESPONSE.DEMAND_RFO.L3_HIT.SNOOP_HITM / tma_info_thread_clks",
	"MetricThreshold": "tma_false_sharing > 0.05 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates how often CPU was handling synchronizations due to False Sharing",
	"PublicDescription": "This metric roughly estimates how often CPU was handling synchronizations due to False Sharing. False Sharing is a multithreading hiccup; where multiple Logical Processors contend on different data-elements mapped into the same cache line. Sample with: MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM_PS;OFFCORE_RESPONSE.DEMAND_RFO.L3_HIT.SNOOP_HITM. Related metrics: tma_contested_accesses, tma_data_sharing, tma_machine_clears, tma_remote_cache"
},
{
	"MetricGroup": "Offcore",
	"MetricName": "tma_info_bottleneck_memory_bandwidth",
	"MetricExpr": "100 * tma_memory_bound * (tma_dram_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_mem_bandwidth / (tma_mem_bandwidth + tma_mem_latency)) + tma_l3_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_sq_full / (tma_contested_accesses + tma_data_sharing + tma_l3_hit_latency + tma_sq_full))) + tma_l1_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_fb_full / (tma_4k_aliasing + tma_dtlb_load + tma_fb_full + tma_lock_latency + tma_split_loads + tma_store_fwd_blk))",
	"MetricThreshold": "tma_info_bottleneck_memory_bandwidth > 20",
	"BriefDescription": "Total pipeline cost of (external) Memory Bandwidth related bottlenecks",
	"PublicDescription": "Total pipeline cost of (external) Memory Bandwidth related bottlenecks. Related metrics: tma_fb_full, tma_info_system_dram_bw_use, tma_mem_bandwidth, tma_sq_full"
},
{
	"MetricGroup": "Offcore",
	"MetricName": "tma_info_bottleneck_memory_data_tlbs",
	"MetricExpr": "100 * tma_memory_bound * (tma_l1_bound / max(tma_memory_bound, tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_dtlb_load / max(tma_l1_bound, tma_4k_aliasing + tma_dtlb_load + tma_fb_full + tma_lock_latency + tma_split_loads + tma_store_fwd_blk)) + tma_store_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_dtlb_store / (tma_dtlb_store + tma_false_sharing + tma_split_stores + tma_store_latency)))",
	"MetricThreshold": "tma_info_bottleneck_memory_data_tlbs > 20",
	"BriefDescription": "Total pipeline cost of Memory Address Translation related bottlenecks (data-side TLBs)",
	"PublicDescription": "Total pipeline cost of Memory Address Translation related bottlenecks (data-side TLBs). Related metrics: tma_dtlb_load, tma_dtlb_store"
},
{
	"MetricGroup": "Offcore",
	"MetricName": "tma_info_bottleneck_memory_latency",
	"MetricExpr": "100 * tma_memory_bound * (tma_dram_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_mem_latency / (tma_mem_bandwidth + tma_mem_latency)) + tma_l3_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_l3_hit_latency / (tma_contested_accesses + tma_data_sharing + tma_l3_hit_latency + tma_sq_full)) + tma_l2_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound))",
	"MetricThreshold": "tma_info_bottleneck_memory_latency > 20",
	"BriefDescription": "Total pipeline cost of Memory Latency related bottlenecks (external memory and off-core caches)",
	"PublicDescription": "Total pipeline cost of Memory Latency related bottlenecks (external memory and off-core caches). Related metrics: tma_l3_hit_latency, tma_mem_latency"
},
{
	"MetricGroup": "Offcore",
	"MetricName": "tma_info_memory_core_l3_cache_access_bw",
	"MetricExpr": "64 * OFFCORE_REQUESTS.ALL_REQUESTS / 1e9 / duration_time",
	"BriefDescription": "Average per-core data access bandwidth to the L3 cache [GB / sec]"
},
{
	"MetricGroup": "Offcore",
	"MetricName": "tma_info_memory_l2mpki_all",
	"MetricExpr": "1e3 * L2_RQSTS.MISS / INST_RETIRED.ANY",
	"BriefDescription": "L2 cache ([RKL+] true) misses per kilo instruction for all request types (including speculative)"
},
{
	"MetricGroup": "Offcore",
	"MetricName": "tma_info_memory_oro_data_l2_mlp",
	"MetricExpr": "OFFCORE_REQUESTS_OUTSTANDING.ALL_DATA_RD / OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DATA_RD",
	"BriefDescription": "Average Parallel L2 cache miss data reads"
},
{
	"MetricGroup": "Offcore",
	"MetricName": "tma_info_memory_oro_load_l2_miss_latency",
	"MetricExpr": "OFFCORE_REQUESTS_OUTSTANDING.DEMAND_DATA_RD / OFFCORE_REQUESTS.DEMAND_DATA_RD",
	"BriefDescription": "Average Latency for L2 cache miss demand Loads"
},
{
	"MetricGroup": "Offcore",
	"MetricName": "tma_info_memory_oro_load_l2_mlp",
	"MetricExpr": "OFFCORE_REQUESTS_OUTSTANDING.DEMAND_DATA_RD / OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_DATA_RD",
	"BriefDescription": "Average Parallel L2 cache miss demand Loads"
},
{
	"MetricGroup": "Offcore",
	"MetricName": "tma_info_memory_thread_l3_cache_access_bw_1t",
	"MetricExpr": "tma_info_memory_core_l3_cache_access_bw",
	"BriefDescription": "Average per-thread data access bandwidth to the L3 cache [GB / sec]"
},
{
	"MetricGroup": "Offcore",
	"MetricName": "tma_lock_latency",
	"MetricExpr": "(12 * max(0, MEM_INST_RETIRED.LOCK_LOADS - L2_RQSTS.ALL_RFO) + MEM_INST_RETIRED.LOCK_LOADS / MEM_INST_RETIRED.ALL_STORES * (9 * L2_RQSTS.RFO_HIT + min(CPU_CLK_UNHALTED.THREAD, OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_RFO))) / tma_info_thread_clks",
	"MetricThreshold": "tma_lock_latency > 0.2 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU spent handling cache misses due to lock operations",
	"PublicDescription": "This metric represents fraction of cycles the CPU spent handling cache misses due to lock operations. Due to the microarchitecture handling of locks; they are classified as L1_Bound regardless of what memory source satisfied them. Sample with: MEM_INST_RETIRED.LOCK_LOADS_PS. Related metrics: tma_store_latency"
},
{
	"MetricGroup": "Offcore",
	"MetricName": "tma_mem_bandwidth",
	"MetricExpr": "min(CPU_CLK_UNHALTED.THREAD, cpu@OFFCORE_REQUESTS_OUTSTANDING.ALL_DATA_RD\\,cmask\\=4@) / tma_info_thread_clks",
	"MetricThreshold": "tma_mem_bandwidth > 0.2 & (tma_dram_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles where the core's performance was likely hurt due to approaching bandwidth limits of external memory (DRAM)",
	"PublicDescription": "This metric estimates fraction of cycles where the core's performance was likely hurt due to approaching bandwidth limits of external memory (DRAM).  The underlying heuristic assumes that a similar off-core traffic is generated by all IA cores. This metric does not aggregate non-data-read requests by this logical processor; requests from other IA Logical Processors/Physical Cores/sockets; or other non-IA devices like GPU; hence the maximum external memory bandwidth limits may or may not be approached when this metric is flagged (see Uncore counters for that). Related metrics: tma_fb_full, tma_info_bottleneck_memory_bandwidth, tma_info_system_dram_bw_use, tma_sq_full"
},
{
	"MetricGroup": "Offcore",
	"MetricName": "tma_mem_latency",
	"MetricExpr": "min(CPU_CLK_UNHALTED.THREAD, OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DATA_RD) / tma_info_thread_clks - tma_mem_bandwidth",
	"MetricThreshold": "tma_mem_latency > 0.1 & (tma_dram_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles where the performance was likely hurt due to latency from external memory (DRAM)",
	"PublicDescription": "This metric estimates fraction of cycles where the performance was likely hurt due to latency from external memory (DRAM).  This metric does not aggregate requests from other Logical Processors/Physical Cores/sockets (see Uncore counters for that). Related metrics: tma_info_bottleneck_memory_latency, tma_l3_hit_latency"
},
{
	"MetricGroup": "Offcore",
	"MetricName": "tma_sq_full",
	"MetricExpr": "(OFFCORE_REQUESTS_BUFFER.SQ_FULL / 2 if #SMT_on else OFFCORE_REQUESTS_BUFFER.SQ_FULL) / tma_info_core_core_clks",
	"MetricThreshold": "tma_sq_full > 0.3 & (tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric measures fraction of cycles where the Super Queue (SQ) was full taking into account all request-types and both hardware SMT threads (Logical Processors)",
	"PublicDescription": "This metric measures fraction of cycles where the Super Queue (SQ) was full taking into account all request-types and both hardware SMT threads (Logical Processors). Related metrics: tma_fb_full, tma_info_bottleneck_memory_bandwidth, tma_info_system_dram_bw_use, tma_mem_bandwidth"
},
{
	"MetricGroup": "Offcore",
	"MetricName": "tma_store_latency",
	"MetricExpr": "(L2_RQSTS.RFO_HIT * 9 * (1 - MEM_INST_RETIRED.LOCK_LOADS / MEM_INST_RETIRED.ALL_STORES) + (1 - MEM_INST_RETIRED.LOCK_LOADS / MEM_INST_RETIRED.ALL_STORES) * min(CPU_CLK_UNHALTED.THREAD, OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_RFO)) / tma_info_thread_clks",
	"MetricThreshold": "tma_store_latency > 0.1 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles the CPU spent handling L1D store misses",
	"PublicDescription": "This metric estimates fraction of cycles the CPU spent handling L1D store misses. Store accesses usually less impact out-of-order core performance; however; holding resources for longer time can lead into undesired implications (e.g. contention on L1D fill-buffer entries - see FB_Full). Related metrics: tma_fb_full, tma_lock_latency"
},
{
	"MetricGroup": "PGO",
	"MetricName": "tma_frontend_bound",
	"MetricExpr": "IDQ_UOPS_NOT_DELIVERED.CORE / tma_info_thread_slots",
	"MetricThreshold": "tma_frontend_bound > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This category represents fraction of slots where the processor's Frontend undersupplies its Backend",
	"PublicDescription": "This category represents fraction of slots where the processor's Frontend undersupplies its Backend. Frontend denotes the first part of the processor core responsible to fetch operations that are executed later on by the Backend part. Within the Frontend; a branch predictor predicts the next address to fetch; cache-lines are fetched from the memory subsystem; parsed into instructions; and lastly decoded into micro-operations (uops). Ideally the Frontend can issue Pipeline_Width uops every cycle to the Backend. Frontend Bound denotes unutilized issue-slots when there is no Backend stall; i.e. bubbles where Frontend delivered no uops while Backend could have accepted them. For example; stalls due to instruction-cache misses would be categorized under Frontend Bound. Sample with: FRONTEND_RETIRED.LATENCY_GE_4_PS"
},
{
	"MetricGroup": "PGO",
	"MetricName": "tma_info_branches_cond_nt",
	"MetricExpr": "BR_INST_RETIRED.NOT_TAKEN / BR_INST_RETIRED.ALL_BRANCHES",
	"BriefDescription": "Fraction of branches that are non-taken conditionals"
},
{
	"MetricGroup": "PGO",
	"MetricName": "tma_info_branches_cond_tk",
	"MetricExpr": "(BR_INST_RETIRED.CONDITIONAL - BR_INST_RETIRED.NOT_TAKEN) / BR_INST_RETIRED.ALL_BRANCHES",
	"BriefDescription": "Fraction of branches that are taken conditionals"
},
{
	"MetricGroup": "PGO",
	"MetricName": "tma_info_inst_mix_bptkbranch",
	"MetricExpr": "BR_INST_RETIRED.ALL_BRANCHES / BR_INST_RETIRED.NEAR_TAKEN",
	"BriefDescription": "Branch instructions per taken branch"
},
{
	"MetricGroup": "PGO",
	"MetricName": "tma_info_inst_mix_ipcall",
	"MetricExpr": "INST_RETIRED.ANY / BR_INST_RETIRED.NEAR_CALL",
	"MetricThreshold": "tma_info_inst_mix_ipcall < 200",
	"BriefDescription": "Instructions per (near) call (lower number means higher occurrence rate)"
},
{
	"MetricGroup": "PGO",
	"MetricName": "tma_info_inst_mix_iptb",
	"MetricExpr": "INST_RETIRED.ANY / BR_INST_RETIRED.NEAR_TAKEN",
	"MetricThreshold": "tma_info_inst_mix_iptb < 9",
	"BriefDescription": "Instruction per taken branch",
	"PublicDescription": "Instruction per taken branch. Related metrics: tma_dsb_switches, tma_fetch_bandwidth, tma_info_botlnk_l2_dsb_misses, tma_info_frontend_dsb_coverage, tma_lcp"
},
{
	"MetricGroup": "Pipeline",
	"MetricName": "tma_fused_instructions",
	"MetricExpr": "tma_light_operations * UOPS_RETIRED.MACRO_FUSED / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fused_instructions > 0.1 & tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring fused instructions -- where one uop can represent multiple contiguous instructions",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring fused instructions -- where one uop can represent multiple contiguous instructions. The instruction pairs of CMP+JCC or DEC+JCC are commonly used examples"
},
{
	"MetricGroup": "Pipeline",
	"MetricName": "tma_info_core_ilp",
	"MetricExpr": "UOPS_EXECUTED.THREAD / (UOPS_EXECUTED.CORE_CYCLES_GE_1 / 2 if #SMT_on else UOPS_EXECUTED.CORE_CYCLES_GE_1)",
	"BriefDescription": "Instruction-Level-Parallelism (average number of uops executed when there is execution) per-core"
},
{
	"MetricGroup": "Pipeline",
	"MetricName": "tma_info_pipeline_execute",
	"MetricExpr": "UOPS_EXECUTED.THREAD / cpu@UOPS_EXECUTED.THREAD\\,cmask\\=1@",
	"BriefDescription": "Instruction-Level-Parallelism (average number of uops executed when there is execution) per-thread"
},
{
	"MetricGroup": "Pipeline",
	"MetricName": "tma_info_pipeline_retire",
	"MetricExpr": "UOPS_RETIRED.RETIRE_SLOTS / cpu@UOPS_RETIRED.RETIRE_SLOTS\\,cmask\\=1@",
	"BriefDescription": "Average number of Uops retired in cycles where at least one uop has retired"
},
{
	"MetricGroup": "Pipeline",
	"MetricName": "tma_info_thread_clks",
	"MetricExpr": "CPU_CLK_UNHALTED.THREAD",
	"BriefDescription": "Per-Logical Processor actual clocks when the Logical Processor is active"
},
{
	"MetricGroup": "Pipeline",
	"MetricName": "tma_info_thread_cpi",
	"MetricExpr": "1 / tma_info_thread_ipc",
	"BriefDescription": "Cycles Per Instruction (per Logical Processor)"
},
{
	"MetricGroup": "Pipeline",
	"MetricName": "tma_info_thread_execute_per_issue",
	"MetricExpr": "UOPS_EXECUTED.THREAD / UOPS_ISSUED.ANY",
	"BriefDescription": "The ratio of Executed- by Issued-Uops",
	"PublicDescription": "The ratio of Executed- by Issued-Uops. Ratio > 1 suggests high rate of uop micro-fusions. Ratio < 1 suggest high rate of \"execute\" at rename stage"
},
{
	"MetricGroup": "Pipeline",
	"MetricName": "tma_info_thread_uoppi",
	"MetricExpr": "UOPS_RETIRED.RETIRE_SLOTS / INST_RETIRED.ANY",
	"MetricThreshold": "tma_info_thread_uoppi > 1.05",
	"BriefDescription": "Uops Per Instruction"
},
{
	"MetricGroup": "Pipeline",
	"MetricName": "tma_memory_operations",
	"MetricExpr": "tma_light_operations * MEM_INST_RETIRED.ANY / INST_RETIRED.ANY",
	"MetricThreshold": "tma_memory_operations > 0.1 & tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring memory operations -- uops for memory load or store accesses"
},
{
	"MetricGroup": "Pipeline",
	"MetricName": "tma_non_fused_branches",
	"MetricExpr": "tma_light_operations * (BR_INST_RETIRED.ALL_BRANCHES - UOPS_RETIRED.MACRO_FUSED) / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_non_fused_branches > 0.1 & tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring branch instructions that were not fused",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring branch instructions that were not fused. Non-conditional branches like direct JMP or CALL would count here. Can be used to examine fusible conditional jumps that were not fused"
},
{
	"MetricGroup": "Pipeline",
	"MetricName": "tma_nop_instructions",
	"MetricExpr": "tma_light_operations * INST_RETIRED.NOP / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_nop_instructions > 0.1 & tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring NOP (no op) instructions",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring NOP (no op) instructions. Compilers often use NOPs for certain address alignments - e.g. start address of a function or loop body. Sample with: INST_RETIRED.NOP"
},
{
	"MetricGroup": "Pipeline",
	"MetricName": "tma_other_light_ops",
	"MetricExpr": "max(0, tma_light_operations - (tma_fp_arith + tma_memory_operations + tma_fused_instructions + tma_non_fused_branches + tma_nop_instructions))",
	"MetricThreshold": "tma_other_light_ops > 0.3 & tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents the remaining light uops fraction the CPU has executed - remaining means not covered by other sibling nodes",
	"PublicDescription": "This metric represents the remaining light uops fraction the CPU has executed - remaining means not covered by other sibling nodes. May undercount due to FMA double counting"
},
{
	"MetricGroup": "PortsUtil",
	"MetricName": "tma_info_core_ilp",
	"MetricExpr": "UOPS_EXECUTED.THREAD / (UOPS_EXECUTED.CORE_CYCLES_GE_1 / 2 if #SMT_on else UOPS_EXECUTED.CORE_CYCLES_GE_1)",
	"BriefDescription": "Instruction-Level-Parallelism (average number of uops executed when there is execution) per-core"
},
{
	"MetricGroup": "PortsUtil",
	"MetricName": "tma_info_pipeline_execute",
	"MetricExpr": "UOPS_EXECUTED.THREAD / cpu@UOPS_EXECUTED.THREAD\\,cmask\\=1@",
	"BriefDescription": "Instruction-Level-Parallelism (average number of uops executed when there is execution) per-thread"
},
{
	"MetricGroup": "PortsUtil",
	"MetricName": "tma_ports_utilization",
	"MetricExpr": "((EXE_ACTIVITY.EXE_BOUND_0_PORTS + (EXE_ACTIVITY.1_PORTS_UTIL + tma_retiring * EXE_ACTIVITY.2_PORTS_UTIL)) / tma_info_thread_clks if ARITH.DIVIDER_ACTIVE < CYCLE_ACTIVITY.STALLS_TOTAL - CYCLE_ACTIVITY.STALLS_MEM_ANY else (EXE_ACTIVITY.1_PORTS_UTIL + tma_retiring * EXE_ACTIVITY.2_PORTS_UTIL) / tma_info_thread_clks)",
	"MetricThreshold": "tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles the CPU performance was potentially limited due to Core computation issues (non divider-related)",
	"PublicDescription": "This metric estimates fraction of cycles the CPU performance was potentially limited due to Core computation issues (non divider-related).  Two distinct categories can be attributed into this metric: (1) heavy data-dependency among contiguous instructions would manifest in this metric - such cases are often referred to as low Instruction Level Parallelism (ILP). (2) Contention on some hardware execution unit other than Divider. For example; when there are too many multiply operations"
},
{
	"MetricGroup": "PortsUtil",
	"MetricName": "tma_ports_utilized_0",
	"MetricExpr": "(UOPS_EXECUTED.CORE_CYCLES_NONE / 2 if #SMT_on else CYCLE_ACTIVITY.STALLS_TOTAL - CYCLE_ACTIVITY.STALLS_MEM_ANY) / tma_info_core_core_clks",
	"MetricThreshold": "tma_ports_utilized_0 > 0.2 & (tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles CPU executed no uops on any execution port (Logical Processor cycles since ICL, Physical Core cycles otherwise)",
	"PublicDescription": "This metric represents fraction of cycles CPU executed no uops on any execution port (Logical Processor cycles since ICL, Physical Core cycles otherwise). Long-latency instructions like divides may contribute to this metric"
},
{
	"MetricGroup": "PortsUtil",
	"MetricName": "tma_ports_utilized_1",
	"MetricExpr": "((UOPS_EXECUTED.CORE_CYCLES_GE_1 - UOPS_EXECUTED.CORE_CYCLES_GE_2) / 2 if #SMT_on else EXE_ACTIVITY.1_PORTS_UTIL) / tma_info_core_core_clks",
	"MetricThreshold": "tma_ports_utilized_1 > 0.2 & (tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles where the CPU executed total of 1 uop per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise)",
	"PublicDescription": "This metric represents fraction of cycles where the CPU executed total of 1 uop per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise). This can be due to heavy data-dependency among software instructions; or over oversubscribing a particular hardware resource. In some other cases with high 1_Port_Utilized and L1_Bound; this metric can point to L1 data-cache latency bottleneck that may not necessarily manifest with complete execution starvation (due to the short L1 latency e.g. walking a linked list) - looking at the assembly can be helpful. Related metrics: tma_l1_bound"
},
{
	"MetricGroup": "PortsUtil",
	"MetricName": "tma_ports_utilized_2",
	"MetricExpr": "((UOPS_EXECUTED.CORE_CYCLES_GE_2 - UOPS_EXECUTED.CORE_CYCLES_GE_3) / 2 if #SMT_on else EXE_ACTIVITY.2_PORTS_UTIL) / tma_info_core_core_clks",
	"MetricThreshold": "tma_ports_utilized_2 > 0.15 & (tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles CPU executed total of 2 uops per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise)",
	"PublicDescription": "This metric represents fraction of cycles CPU executed total of 2 uops per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise).  Loop Vectorization -most compilers feature auto-Vectorization options today- reduces pressure on the execution ports as multiple elements are calculated with same uop. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6"
},
{
	"MetricGroup": "PortsUtil",
	"MetricName": "tma_ports_utilized_3m",
	"MetricExpr": "(UOPS_EXECUTED.CORE_CYCLES_GE_3 / 2 if #SMT_on else UOPS_EXECUTED.CORE_CYCLES_GE_3) / tma_info_core_core_clks",
	"MetricThreshold": "tma_ports_utilized_3m > 0.7 & (tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles CPU executed total of 3 or more uops per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise)"
},
{
	"MetricGroup": "PortsUtil",
	"MetricName": "tma_serializing_operation",
	"MetricExpr": "PARTIAL_RAT_STALLS.SCOREBOARD / tma_info_thread_clks",
	"MetricThreshold": "tma_serializing_operation > 0.1 & (tma_ports_utilized_0 > 0.2 & (tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2)))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU issue-pipeline was stalled due to serializing operations",
	"PublicDescription": "This metric represents fraction of cycles the CPU issue-pipeline was stalled due to serializing operations. Instructions like CPUID; WRMSR or LFENCE serialize the out-of-order execution which may limit performance. Sample with: PARTIAL_RAT_STALLS.SCOREBOARD. Related metrics: tma_ms_switches"
},
{
	"MetricGroup": "Power",
	"MetricName": "C2_Pkg_Residency",
	"MetricExpr": "cstate_pkg@c2\\-residency@ / TSC",
	"ScaleUnit": "100%",
	"BriefDescription": "C2 residency percent per package"
},
{
	"MetricGroup": "Power",
	"MetricName": "C3_Core_Residency",
	"MetricExpr": "cstate_core@c3\\-residency@ / TSC",
	"ScaleUnit": "100%",
	"BriefDescription": "C3 residency percent per core"
},
{
	"MetricGroup": "Power",
	"MetricName": "C3_Pkg_Residency",
	"MetricExpr": "cstate_pkg@c3\\-residency@ / TSC",
	"ScaleUnit": "100%",
	"BriefDescription": "C3 residency percent per package"
},
{
	"MetricGroup": "Power",
	"MetricName": "C6_Core_Residency",
	"MetricExpr": "cstate_core@c6\\-residency@ / TSC",
	"ScaleUnit": "100%",
	"BriefDescription": "C6 residency percent per core"
},
{
	"MetricGroup": "Power",
	"MetricName": "C6_Pkg_Residency",
	"MetricExpr": "cstate_pkg@c6\\-residency@ / TSC",
	"ScaleUnit": "100%",
	"BriefDescription": "C6 residency percent per package"
},
{
	"MetricGroup": "Power",
	"MetricName": "C7_Core_Residency",
	"MetricExpr": "cstate_core@c7\\-residency@ / TSC",
	"ScaleUnit": "100%",
	"BriefDescription": "C7 residency percent per core"
},
{
	"MetricGroup": "Power",
	"MetricName": "C7_Pkg_Residency",
	"MetricExpr": "cstate_pkg@c7\\-residency@ / TSC",
	"ScaleUnit": "100%",
	"BriefDescription": "C7 residency percent per package"
},
{
	"MetricGroup": "Power",
	"MetricName": "tma_info_system_average_frequency",
	"MetricExpr": "tma_info_system_turbo_utilization * TSC / 1e9 / duration_time",
	"BriefDescription": "Measured Average Frequency for unhalted processors [GHz]"
},
{
	"MetricGroup": "Power",
	"MetricName": "tma_info_system_turbo_utilization",
	"MetricExpr": "tma_info_thread_clks / CPU_CLK_UNHALTED.REF_TSC",
	"BriefDescription": "Average Frequency Utilization relative nominal frequency"
},
{
	"MetricGroup": "Prefetches",
	"MetricName": "tma_info_inst_mix_ipswpf",
	"MetricExpr": "INST_RETIRED.ANY / cpu@SW_PREFETCH_ACCESS.T0\\,umask\\=0xF@",
	"MetricThreshold": "tma_info_inst_mix_ipswpf < 100",
	"BriefDescription": "Instructions per Software prefetch instruction (of any type: NTA/T0/T1/T2/Prefetch) (lower number means higher occurrence rate)"
},
{
	"MetricGroup": "Ret",
	"MetricName": "tma_info_bottleneck_branching_overhead",
	"MetricExpr": "100 * ((BR_INST_RETIRED.CONDITIONAL + 3 * BR_INST_RETIRED.NEAR_CALL + (BR_INST_RETIRED.NEAR_TAKEN - (BR_INST_RETIRED.CONDITIONAL - BR_INST_RETIRED.NOT_TAKEN) - 2 * BR_INST_RETIRED.NEAR_CALL)) / tma_info_thread_slots)",
	"MetricThreshold": "tma_info_bottleneck_branching_overhead > 10",
	"BriefDescription": "Total pipeline cost of branch related instructions (used for program control-flow including function calls)",
	"PublicDescription": "Total pipeline cost of branch related instructions (used for program control-flow including function calls). Related metrics: tma_info_bottleneck_big_code"
},
{
	"MetricGroup": "Ret",
	"MetricName": "tma_info_core_coreipc",
	"MetricExpr": "INST_RETIRED.ANY / tma_info_core_core_clks",
	"BriefDescription": "Instructions Per Cycle across hyper-threads (per physical core)"
},
{
	"MetricGroup": "Ret",
	"MetricName": "tma_info_core_flopc",
	"MetricExpr": "(FP_ARITH_INST_RETIRED.SCALAR_SINGLE + FP_ARITH_INST_RETIRED.SCALAR_DOUBLE + 2 * FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE + 4 * (FP_ARITH_INST_RETIRED.128B_PACKED_SINGLE + FP_ARITH_INST_RETIRED.256B_PACKED_DOUBLE) + 8 * FP_ARITH_INST_RETIRED.256B_PACKED_SINGLE) / tma_info_core_core_clks",
	"BriefDescription": "Floating Point Operations Per Cycle"
},
{
	"MetricGroup": "Ret",
	"MetricName": "tma_info_pipeline_retire",
	"MetricExpr": "UOPS_RETIRED.RETIRE_SLOTS / cpu@UOPS_RETIRED.RETIRE_SLOTS\\,cmask\\=1@",
	"BriefDescription": "Average number of Uops retired in cycles where at least one uop has retired"
},
{
	"MetricGroup": "Ret",
	"MetricName": "tma_info_thread_ipc",
	"MetricExpr": "INST_RETIRED.ANY / tma_info_thread_clks",
	"BriefDescription": "Instructions Per Cycle (per Logical Processor)"
},
{
	"MetricGroup": "Ret",
	"MetricName": "tma_info_thread_uoppi",
	"MetricExpr": "UOPS_RETIRED.RETIRE_SLOTS / INST_RETIRED.ANY",
	"MetricThreshold": "tma_info_thread_uoppi > 1.05",
	"BriefDescription": "Uops Per Instruction"
},
{
	"MetricGroup": "Retire",
	"MetricName": "tma_heavy_operations",
	"MetricExpr": "(UOPS_RETIRED.RETIRE_SLOTS + UOPS_RETIRED.MACRO_FUSED - INST_RETIRED.ANY) / tma_info_thread_slots",
	"MetricThreshold": "tma_heavy_operations > 0.1",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring heavy-weight operations -- instructions that require two or more uops or micro-coded sequences",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring heavy-weight operations -- instructions that require two or more uops or micro-coded sequences. This highly-correlates with the uop length of these instructions/sequences"
},
{
	"MetricGroup": "Retire",
	"MetricName": "tma_info_thread_uoppi",
	"MetricExpr": "UOPS_RETIRED.RETIRE_SLOTS / INST_RETIRED.ANY",
	"MetricThreshold": "tma_info_thread_uoppi > 1.05",
	"BriefDescription": "Uops Per Instruction"
},
{
	"MetricGroup": "Retire",
	"MetricName": "tma_light_operations",
	"MetricExpr": "tma_retiring - tma_heavy_operations",
	"MetricThreshold": "tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring light-weight operations -- instructions that require no more than one uop (micro-operation)",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring light-weight operations -- instructions that require no more than one uop (micro-operation). This correlates with total number of instructions used by the program. A uops-per-instruction (see UopPI metric) ratio of 1 or less should be expected for decently optimized software running on Intel Core/Xeon products. While this often indicates efficient X86 instructions were executed; high value does not necessarily mean better performance cannot be achieved. Sample with: INST_RETIRED.PREC_DIST"
},
{
	"MetricGroup": "SMT",
	"MetricName": "tma_info_botlnk_l0_core_bound_likely",
	"MetricExpr": "(100 * (1 - tma_core_bound / tma_ports_utilization if tma_core_bound < tma_ports_utilization else 1) if tma_info_system_smt_2t_utilization > 0.5 else 0)",
	"MetricThreshold": "tma_info_botlnk_l0_core_bound_likely > 0.5",
	"BriefDescription": "Probability of Core Bound bottleneck hidden by SMT-profiling artifacts"
},
{
	"MetricGroup": "SMT",
	"MetricName": "tma_info_core_core_clks",
	"MetricExpr": "(CPU_CLK_UNHALTED.THREAD / 2 * (1 + CPU_CLK_UNHALTED.ONE_THREAD_ACTIVE / CPU_CLK_UNHALTED.REF_XCLK) if #core_wide < 1 else (CPU_CLK_UNHALTED.THREAD_ANY / 2 if #SMT_on else tma_info_thread_clks))",
	"BriefDescription": "Core actual clocks when any Logical Processor is active on the Physical Core"
},
{
	"MetricGroup": "SMT",
	"MetricName": "tma_info_core_coreipc",
	"MetricExpr": "INST_RETIRED.ANY / tma_info_core_core_clks",
	"BriefDescription": "Instructions Per Cycle across hyper-threads (per physical core)"
},
{
	"MetricGroup": "SMT",
	"MetricName": "tma_info_pipeline_execute",
	"MetricExpr": "UOPS_EXECUTED.THREAD / cpu@UOPS_EXECUTED.THREAD\\,cmask\\=1@",
	"BriefDescription": "Instruction-Level-Parallelism (average number of uops executed when there is execution) per-thread"
},
{
	"MetricGroup": "SMT",
	"MetricName": "tma_info_system_smt_2t_utilization",
	"MetricExpr": "(1 - CPU_CLK_UNHALTED.ONE_THREAD_ACTIVE / (CPU_CLK_UNHALTED.REF_XCLK_ANY / 2) if #SMT_on else 0)",
	"BriefDescription": "Fraction of cycles where both hardware Logical Processors were active"
},
{
	"MetricGroup": "Snoop",
	"MetricName": "tma_contested_accesses",
	"MetricExpr": "(18.5 * tma_info_system_average_frequency * MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM + 16.5 * tma_info_system_average_frequency * MEM_LOAD_L3_HIT_RETIRED.XSNP_MISS) * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS / 2) / tma_info_thread_clks",
	"MetricThreshold": "tma_contested_accesses > 0.05 & (tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to contested accesses",
	"PublicDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to contested accesses. Contested accesses occur when data written by one Logical Processor are read by another Logical Processor on a different Physical Core. Examples of contested accesses include synchronizations such as locks; true data sharing such as modified locked variables; and false sharing. Sample with: MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM_PS;MEM_LOAD_L3_HIT_RETIRED.XSNP_MISS_PS. Related metrics: tma_data_sharing, tma_false_sharing, tma_machine_clears, tma_remote_cache"
},
{
	"MetricGroup": "Snoop",
	"MetricName": "tma_data_sharing",
	"MetricExpr": "16.5 * tma_info_system_average_frequency * MEM_LOAD_L3_HIT_RETIRED.XSNP_HIT * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS / 2) / tma_info_thread_clks",
	"MetricThreshold": "tma_data_sharing > 0.05 & (tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to data-sharing accesses",
	"PublicDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to data-sharing accesses. Data shared by multiple Logical Processors (even just read shared) may cause increased access latency due to cache coherency. Excessive data sharing can drastically harm multithreaded performance. Sample with: MEM_LOAD_L3_HIT_RETIRED.XSNP_HIT_PS. Related metrics: tma_contested_accesses, tma_false_sharing, tma_machine_clears, tma_remote_cache"
},
{
	"MetricGroup": "Snoop",
	"MetricName": "tma_false_sharing",
	"MetricExpr": "22 * tma_info_system_average_frequency * OFFCORE_RESPONSE.DEMAND_RFO.L3_HIT.SNOOP_HITM / tma_info_thread_clks",
	"MetricThreshold": "tma_false_sharing > 0.05 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates how often CPU was handling synchronizations due to False Sharing",
	"PublicDescription": "This metric roughly estimates how often CPU was handling synchronizations due to False Sharing. False Sharing is a multithreading hiccup; where multiple Logical Processors contend on different data-elements mapped into the same cache line. Sample with: MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM_PS;OFFCORE_RESPONSE.DEMAND_RFO.L3_HIT.SNOOP_HITM. Related metrics: tma_contested_accesses, tma_data_sharing, tma_machine_clears, tma_remote_cache"
},
{
	"MetricGroup": "SoC",
	"MetricName": "UNCORE_FREQ",
	"MetricExpr": "tma_info_system_socket_clks / #num_dies / duration_time / 1e9",
	"BriefDescription": "Uncore frequency per die [GHZ]"
},
{
	"MetricGroup": "SoC",
	"MetricName": "tma_info_system_dram_bw_use",
	"MetricExpr": "64 * (UNC_ARB_TRK_REQUESTS.ALL + UNC_ARB_COH_TRK_REQUESTS.ALL) / 1e6 / duration_time / 1e3",
	"BriefDescription": "Average external Memory Bandwidth Use for reads and writes [GB / sec]",
	"PublicDescription": "Average external Memory Bandwidth Use for reads and writes [GB / sec]. Related metrics: tma_fb_full, tma_info_bottleneck_memory_bandwidth, tma_mem_bandwidth, tma_sq_full"
},
{
	"MetricGroup": "SoC",
	"MetricName": "tma_info_system_mem_parallel_reads",
	"MetricExpr": "UNC_ARB_TRK_OCCUPANCY.DATA_READ / UNC_ARB_TRK_OCCUPANCY.DATA_READ@thresh\\=1@",
	"BriefDescription": "Average number of parallel data read requests to external memory",
	"PublicDescription": "Average number of parallel data read requests to external memory. Accounts for demand loads and L1/L2 prefetches"
},
{
	"MetricGroup": "SoC",
	"MetricName": "tma_info_system_mem_parallel_requests",
	"MetricExpr": "UNC_ARB_TRK_OCCUPANCY.ALL / UNC_ARB_TRK_OCCUPANCY.CYCLES_WITH_ANY_REQUEST",
	"BriefDescription": "Average number of parallel requests to external memory",
	"PublicDescription": "Average number of parallel requests to external memory. Accounts for all requests"
},
{
	"MetricGroup": "SoC",
	"MetricName": "tma_info_system_mem_read_latency",
	"MetricExpr": "1e9 * (UNC_ARB_TRK_OCCUPANCY.DATA_READ / UNC_ARB_TRK_REQUESTS.DATA_READ) / (tma_info_system_socket_clks / duration_time)",
	"BriefDescription": "Average latency of data read request to external memory (in nanoseconds)",
	"PublicDescription": "Average latency of data read request to external memory (in nanoseconds). Accounts for demand loads and L1/L2 prefetches. ([RKL+]memory-controller only)"
},
{
	"MetricGroup": "SoC",
	"MetricName": "tma_info_system_mem_request_latency",
	"MetricExpr": "UNC_ARB_TRK_OCCUPANCY.ALL / UNC_ARB_TRK_REQUESTS.ALL",
	"BriefDescription": "Average latency of all requests to external memory (in Uncore cycles)"
},
{
	"MetricGroup": "SoC",
	"MetricName": "tma_info_system_socket_clks",
	"MetricExpr": "UNC_CLOCK.SOCKET",
	"BriefDescription": "Socket actual clocks when any core is active on that socket"
},
{
	"MetricGroup": "Summary",
	"MetricName": "tma_info_inst_mix_instructions",
	"MetricExpr": "INST_RETIRED.ANY",
	"BriefDescription": "Total number of retired Instructions",
	"PublicDescription": "Total number of retired Instructions. Sample with: INST_RETIRED.PREC_DIST"
},
{
	"MetricGroup": "Summary",
	"MetricName": "tma_info_system_average_frequency",
	"MetricExpr": "tma_info_system_turbo_utilization * TSC / 1e9 / duration_time",
	"BriefDescription": "Measured Average Frequency for unhalted processors [GHz]"
},
{
	"MetricGroup": "Summary",
	"MetricName": "tma_info_system_cpu_utilization",
	"MetricExpr": "CPU_CLK_UNHALTED.REF_TSC / TSC",
	"BriefDescription": "Average CPU Utilization"
},
{
	"MetricGroup": "Summary",
	"MetricName": "tma_info_thread_ipc",
	"MetricExpr": "INST_RETIRED.ANY / tma_info_thread_clks",
	"BriefDescription": "Instructions Per Cycle (per Logical Processor)"
},
{
	"MetricGroup": "TmaL1",
	"MetricName": "tma_backend_bound",
	"MetricExpr": "1 - tma_frontend_bound - (UOPS_ISSUED.ANY + 4 * (INT_MISC.RECOVERY_CYCLES_ANY / 2 if #SMT_on else INT_MISC.RECOVERY_CYCLES)) / tma_info_thread_slots",
	"MetricThreshold": "tma_backend_bound > 0.2",
	"ScaleUnit": "100%",
	"BriefDescription": "This category represents fraction of slots where no uops are being delivered due to a lack of required resources for accepting new uops in the Backend",
	"PublicDescription": "This category represents fraction of slots where no uops are being delivered due to a lack of required resources for accepting new uops in the Backend. Backend is the portion of the processor core where the out-of-order scheduler dispatches ready uops into their respective execution units; and once completed these uops get retired according to program order. For example; stalls due to data-cache misses or stalls due to the divider unit being overloaded are both categorized under Backend Bound. Backend Bound is further divided into two main categories: Memory Bound and Core Bound"
},
{
	"MetricGroup": "TmaL1",
	"MetricName": "tma_bad_speculation",
	"MetricExpr": "(UOPS_ISSUED.ANY - UOPS_RETIRED.RETIRE_SLOTS + 4 * (INT_MISC.RECOVERY_CYCLES_ANY / 2 if #SMT_on else INT_MISC.RECOVERY_CYCLES)) / tma_info_thread_slots",
	"MetricThreshold": "tma_bad_speculation > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This category represents fraction of slots wasted due to incorrect speculations",
	"PublicDescription": "This category represents fraction of slots wasted due to incorrect speculations. This include slots used to issue uops that do not eventually get retired and slots for which the issue-pipeline was blocked due to recovery from earlier incorrect speculation. For example; wasted work due to miss-predicted branches are categorized under Bad Speculation category. Incorrect data speculation followed by Memory Ordering Nukes is another example"
},
{
	"MetricGroup": "TmaL1",
	"MetricName": "tma_frontend_bound",
	"MetricExpr": "IDQ_UOPS_NOT_DELIVERED.CORE / tma_info_thread_slots",
	"MetricThreshold": "tma_frontend_bound > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This category represents fraction of slots where the processor's Frontend undersupplies its Backend",
	"PublicDescription": "This category represents fraction of slots where the processor's Frontend undersupplies its Backend. Frontend denotes the first part of the processor core responsible to fetch operations that are executed later on by the Backend part. Within the Frontend; a branch predictor predicts the next address to fetch; cache-lines are fetched from the memory subsystem; parsed into instructions; and lastly decoded into micro-operations (uops). Ideally the Frontend can issue Pipeline_Width uops every cycle to the Backend. Frontend Bound denotes unutilized issue-slots when there is no Backend stall; i.e. bubbles where Frontend delivered no uops while Backend could have accepted them. For example; stalls due to instruction-cache misses would be categorized under Frontend Bound. Sample with: FRONTEND_RETIRED.LATENCY_GE_4_PS"
},
{
	"MetricGroup": "TmaL1",
	"MetricName": "tma_info_core_coreipc",
	"MetricExpr": "INST_RETIRED.ANY / tma_info_core_core_clks",
	"BriefDescription": "Instructions Per Cycle across hyper-threads (per physical core)"
},
{
	"MetricGroup": "TmaL1",
	"MetricName": "tma_info_inst_mix_instructions",
	"MetricExpr": "INST_RETIRED.ANY",
	"BriefDescription": "Total number of retired Instructions",
	"PublicDescription": "Total number of retired Instructions. Sample with: INST_RETIRED.PREC_DIST"
},
{
	"MetricGroup": "TmaL1",
	"MetricName": "tma_info_thread_slots",
	"MetricExpr": "4 * tma_info_core_core_clks",
	"BriefDescription": "Total issue-pipeline slots (per-Physical Core till ICL; per-Logical Processor ICL onward)"
},
{
	"MetricGroup": "TmaL1",
	"MetricName": "tma_retiring",
	"MetricExpr": "UOPS_RETIRED.RETIRE_SLOTS / tma_info_thread_slots",
	"MetricThreshold": "tma_retiring > 0.7 | tma_heavy_operations > 0.1",
	"ScaleUnit": "100%",
	"BriefDescription": "This category represents fraction of slots utilized by useful work i.e. issued uops that eventually get retired",
	"PublicDescription": "This category represents fraction of slots utilized by useful work i.e. issued uops that eventually get retired. Ideally; all pipeline slots would be attributed to the Retiring category.  Retiring of 100% would indicate the maximum Pipeline_Width throughput was achieved.  Maximizing Retiring typically increases the Instructions-per-cycle (see IPC metric). Note that a high Retiring value does not necessary mean there is no room for more performance.  For example; Heavy-operations or Microcode Assists are categorized under Retiring. They often indicate suboptimal performance and can often be optimized or avoided. Sample with: UOPS_RETIRED.RETIRE_SLOTS"
},
{
	"MetricGroup": "TmaL2",
	"MetricName": "tma_branch_mispredicts",
	"MetricExpr": "BR_MISP_RETIRED.ALL_BRANCHES / (BR_MISP_RETIRED.ALL_BRANCHES + MACHINE_CLEARS.COUNT) * tma_bad_speculation",
	"MetricThreshold": "tma_branch_mispredicts > 0.1 & tma_bad_speculation > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU has wasted due to Branch Misprediction",
	"PublicDescription": "This metric represents fraction of slots the CPU has wasted due to Branch Misprediction.  These slots are either wasted by uops fetched from an incorrectly speculated program path; or stalls when the out-of-order part of the machine needs to recover its state from a speculative path. Sample with: BR_MISP_RETIRED.ALL_BRANCHES. Related metrics: tma_info_bad_spec_branch_misprediction_cost, tma_info_bottleneck_mispredictions, tma_mispredicts_resteers"
},
{
	"MetricGroup": "TmaL2",
	"MetricName": "tma_core_bound",
	"MetricExpr": "tma_backend_bound - tma_memory_bound",
	"MetricThreshold": "tma_core_bound > 0.1 & tma_backend_bound > 0.2",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where Core non-memory issues were of a bottleneck",
	"PublicDescription": "This metric represents fraction of slots where Core non-memory issues were of a bottleneck.  Shortage in hardware compute resources; or dependencies in software's instructions are both categorized under Core Bound. Hence it may indicate the machine ran out of an out-of-order resource; certain execution units are overloaded or dependencies in program's data- or instruction-flow are limiting the performance (e.g. FP-chained long-latency arithmetic operations)"
},
{
	"MetricGroup": "TmaL2",
	"MetricName": "tma_fetch_bandwidth",
	"MetricExpr": "tma_frontend_bound - tma_fetch_latency",
	"MetricThreshold": "tma_fetch_bandwidth > 0.1 & tma_frontend_bound > 0.15 & tma_info_thread_ipc / 4 > 0.35",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend bandwidth issues",
	"PublicDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend bandwidth issues.  For example; inefficiencies at the instruction decoders; or restrictions for caching in the DSB (decoded uops cache) are categorized under Fetch Bandwidth. In such cases; the Frontend typically delivers suboptimal amount of uops to the Backend. Sample with: FRONTEND_RETIRED.LATENCY_GE_2_BUBBLES_GE_1_PS;FRONTEND_RETIRED.LATENCY_GE_1_PS;FRONTEND_RETIRED.LATENCY_GE_2_PS. Related metrics: tma_dsb_switches, tma_info_botlnk_l2_dsb_misses, tma_info_frontend_dsb_coverage, tma_info_inst_mix_iptb, tma_lcp"
},
{
	"MetricGroup": "TmaL2",
	"MetricName": "tma_fetch_latency",
	"MetricExpr": "4 * IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE / tma_info_thread_slots",
	"MetricThreshold": "tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend latency issues",
	"PublicDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend latency issues.  For example; instruction-cache misses; iTLB misses or fetch stalls after a branch misprediction are categorized under Frontend Latency. In such cases; the Frontend eventually delivers no uops for some period. Sample with: FRONTEND_RETIRED.LATENCY_GE_16_PS;FRONTEND_RETIRED.LATENCY_GE_8_PS"
},
{
	"MetricGroup": "TmaL2",
	"MetricName": "tma_heavy_operations",
	"MetricExpr": "(UOPS_RETIRED.RETIRE_SLOTS + UOPS_RETIRED.MACRO_FUSED - INST_RETIRED.ANY) / tma_info_thread_slots",
	"MetricThreshold": "tma_heavy_operations > 0.1",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring heavy-weight operations -- instructions that require two or more uops or micro-coded sequences",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring heavy-weight operations -- instructions that require two or more uops or micro-coded sequences. This highly-correlates with the uop length of these instructions/sequences"
},
{
	"MetricGroup": "TmaL2",
	"MetricName": "tma_light_operations",
	"MetricExpr": "tma_retiring - tma_heavy_operations",
	"MetricThreshold": "tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring light-weight operations -- instructions that require no more than one uop (micro-operation)",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring light-weight operations -- instructions that require no more than one uop (micro-operation). This correlates with total number of instructions used by the program. A uops-per-instruction (see UopPI metric) ratio of 1 or less should be expected for decently optimized software running on Intel Core/Xeon products. While this often indicates efficient X86 instructions were executed; high value does not necessarily mean better performance cannot be achieved. Sample with: INST_RETIRED.PREC_DIST"
},
{
	"MetricGroup": "TmaL2",
	"MetricName": "tma_machine_clears",
	"MetricExpr": "tma_bad_speculation - tma_branch_mispredicts",
	"MetricThreshold": "tma_machine_clears > 0.1 & tma_bad_speculation > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU has wasted due to Machine Clears",
	"PublicDescription": "This metric represents fraction of slots the CPU has wasted due to Machine Clears.  These slots are either wasted by uops fetched prior to the clear; or stalls the out-of-order portion of the machine needs to recover its state after the clear. For example; this can happen due to memory ordering Nukes (e.g. Memory Disambiguation) or Self-Modifying-Code (SMC) nukes. Sample with: MACHINE_CLEARS.COUNT. Related metrics: tma_clears_resteers, tma_contested_accesses, tma_data_sharing, tma_false_sharing, tma_l1_bound, tma_microcode_sequencer, tma_ms_switches, tma_remote_cache"
},
{
	"MetricGroup": "TmaL2",
	"MetricName": "tma_memory_bound",
	"MetricExpr": "(CYCLE_ACTIVITY.STALLS_MEM_ANY + EXE_ACTIVITY.BOUND_ON_STORES) / (CYCLE_ACTIVITY.STALLS_TOTAL + (EXE_ACTIVITY.1_PORTS_UTIL + tma_retiring * EXE_ACTIVITY.2_PORTS_UTIL) + EXE_ACTIVITY.BOUND_ON_STORES) * tma_backend_bound",
	"MetricThreshold": "tma_memory_bound > 0.2 & tma_backend_bound > 0.2",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the Memory subsystem within the Backend was a bottleneck",
	"PublicDescription": "This metric represents fraction of slots the Memory subsystem within the Backend was a bottleneck.  Memory Bound estimates fraction of slots where pipeline is likely stalled due to demand load or store instructions. This accounts mainly for (1) non-completed in-flight memory demand loads which coincides with execution units starvation; in addition to (2) cases where stores could impose backpressure on the pipeline when many of them get buffered at the same time (less common out of the two)"
},
{
	"MetricGroup": "TmaL3mem",
	"MetricName": "tma_dram_bound",
	"MetricExpr": "CYCLE_ACTIVITY.STALLS_L3_MISS / tma_info_thread_clks + (CYCLE_ACTIVITY.STALLS_L1D_MISS - CYCLE_ACTIVITY.STALLS_L2_MISS) / tma_info_thread_clks - tma_l2_bound",
	"MetricThreshold": "tma_dram_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled on accesses to external memory (DRAM) by loads",
	"PublicDescription": "This metric estimates how often the CPU was stalled on accesses to external memory (DRAM) by loads. Better caching can improve the latency and increase performance. Sample with: MEM_LOAD_RETIRED.L3_MISS_PS"
},
{
	"MetricGroup": "TmaL3mem",
	"MetricName": "tma_l1_bound",
	"MetricExpr": "max((CYCLE_ACTIVITY.STALLS_MEM_ANY - CYCLE_ACTIVITY.STALLS_L1D_MISS) / tma_info_thread_clks, 0)",
	"MetricThreshold": "tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled without loads missing the L1 data cache",
	"PublicDescription": "This metric estimates how often the CPU was stalled without loads missing the L1 data cache.  The L1 data cache typically has the shortest latency.  However; in certain cases like loads blocked on older stores; a load might suffer due to high latency even though it is being satisfied by the L1. Another example is loads who miss in the TLB. These cases are characterized by execution unit stalls; while some non-completed demand load lives in the machine without having that demand load missing the L1 cache. Sample with: MEM_LOAD_RETIRED.L1_HIT_PS;MEM_LOAD_RETIRED.FB_HIT_PS. Related metrics: tma_clears_resteers, tma_machine_clears, tma_microcode_sequencer, tma_ms_switches, tma_ports_utilized_1"
},
{
	"MetricGroup": "TmaL3mem",
	"MetricName": "tma_l2_bound",
	"MetricExpr": "MEM_LOAD_RETIRED.L2_HIT * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS) / (MEM_LOAD_RETIRED.L2_HIT * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS) + cpu@L1D_PEND_MISS.FB_FULL\\,cmask\\=1@) * ((CYCLE_ACTIVITY.STALLS_L1D_MISS - CYCLE_ACTIVITY.STALLS_L2_MISS) / tma_info_thread_clks)",
	"MetricThreshold": "tma_l2_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled due to L2 cache accesses by loads",
	"PublicDescription": "This metric estimates how often the CPU was stalled due to L2 cache accesses by loads.  Avoiding cache misses (i.e. L1 misses/L2 hits) can improve the latency and increase performance. Sample with: MEM_LOAD_RETIRED.L2_HIT_PS"
},
{
	"MetricGroup": "TmaL3mem",
	"MetricName": "tma_l3_bound",
	"MetricExpr": "(CYCLE_ACTIVITY.STALLS_L2_MISS - CYCLE_ACTIVITY.STALLS_L3_MISS) / tma_info_thread_clks",
	"MetricThreshold": "tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled due to loads accesses to L3 cache or contended with a sibling Core",
	"PublicDescription": "This metric estimates how often the CPU was stalled due to loads accesses to L3 cache or contended with a sibling Core.  Avoiding cache misses (i.e. L2 misses/L3 hits) can improve the latency and increase performance. Sample with: MEM_LOAD_RETIRED.L3_HIT_PS"
},
{
	"MetricGroup": "TmaL3mem",
	"MetricName": "tma_store_bound",
	"MetricExpr": "EXE_ACTIVITY.BOUND_ON_STORES / tma_info_thread_clks",
	"MetricThreshold": "tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often CPU was stalled  due to RFO store memory accesses; RFO store issue a read-for-ownership request before the write",
	"PublicDescription": "This metric estimates how often CPU was stalled  due to RFO store memory accesses; RFO store issue a read-for-ownership request before the write. Even though store accesses do not typically stall out-of-order CPUs; there are few cases where stores can lead to actual stalls. This metric will be flagged should RFO stores be a bottleneck. Sample with: MEM_INST_RETIRED.ALL_STORES_PS"
},
{
	"MetricGroup": "TopdownL1",
	"MetricName": "tma_backend_bound",
	"MetricExpr": "1 - tma_frontend_bound - (UOPS_ISSUED.ANY + 4 * (INT_MISC.RECOVERY_CYCLES_ANY / 2 if #SMT_on else INT_MISC.RECOVERY_CYCLES)) / tma_info_thread_slots",
	"MetricThreshold": "tma_backend_bound > 0.2",
	"ScaleUnit": "100%",
	"BriefDescription": "This category represents fraction of slots where no uops are being delivered due to a lack of required resources for accepting new uops in the Backend",
	"PublicDescription": "This category represents fraction of slots where no uops are being delivered due to a lack of required resources for accepting new uops in the Backend. Backend is the portion of the processor core where the out-of-order scheduler dispatches ready uops into their respective execution units; and once completed these uops get retired according to program order. For example; stalls due to data-cache misses or stalls due to the divider unit being overloaded are both categorized under Backend Bound. Backend Bound is further divided into two main categories: Memory Bound and Core Bound"
},
{
	"MetricGroup": "TopdownL1",
	"MetricName": "tma_bad_speculation",
	"MetricExpr": "(UOPS_ISSUED.ANY - UOPS_RETIRED.RETIRE_SLOTS + 4 * (INT_MISC.RECOVERY_CYCLES_ANY / 2 if #SMT_on else INT_MISC.RECOVERY_CYCLES)) / tma_info_thread_slots",
	"MetricThreshold": "tma_bad_speculation > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This category represents fraction of slots wasted due to incorrect speculations",
	"PublicDescription": "This category represents fraction of slots wasted due to incorrect speculations. This include slots used to issue uops that do not eventually get retired and slots for which the issue-pipeline was blocked due to recovery from earlier incorrect speculation. For example; wasted work due to miss-predicted branches are categorized under Bad Speculation category. Incorrect data speculation followed by Memory Ordering Nukes is another example"
},
{
	"MetricGroup": "TopdownL1",
	"MetricName": "tma_frontend_bound",
	"MetricExpr": "IDQ_UOPS_NOT_DELIVERED.CORE / tma_info_thread_slots",
	"MetricThreshold": "tma_frontend_bound > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This category represents fraction of slots where the processor's Frontend undersupplies its Backend",
	"PublicDescription": "This category represents fraction of slots where the processor's Frontend undersupplies its Backend. Frontend denotes the first part of the processor core responsible to fetch operations that are executed later on by the Backend part. Within the Frontend; a branch predictor predicts the next address to fetch; cache-lines are fetched from the memory subsystem; parsed into instructions; and lastly decoded into micro-operations (uops). Ideally the Frontend can issue Pipeline_Width uops every cycle to the Backend. Frontend Bound denotes unutilized issue-slots when there is no Backend stall; i.e. bubbles where Frontend delivered no uops while Backend could have accepted them. For example; stalls due to instruction-cache misses would be categorized under Frontend Bound. Sample with: FRONTEND_RETIRED.LATENCY_GE_4_PS"
},
{
	"MetricGroup": "TopdownL1",
	"MetricName": "tma_retiring",
	"MetricExpr": "UOPS_RETIRED.RETIRE_SLOTS / tma_info_thread_slots",
	"MetricThreshold": "tma_retiring > 0.7 | tma_heavy_operations > 0.1",
	"ScaleUnit": "100%",
	"BriefDescription": "This category represents fraction of slots utilized by useful work i.e. issued uops that eventually get retired",
	"PublicDescription": "This category represents fraction of slots utilized by useful work i.e. issued uops that eventually get retired. Ideally; all pipeline slots would be attributed to the Retiring category.  Retiring of 100% would indicate the maximum Pipeline_Width throughput was achieved.  Maximizing Retiring typically increases the Instructions-per-cycle (see IPC metric). Note that a high Retiring value does not necessary mean there is no room for more performance.  For example; Heavy-operations or Microcode Assists are categorized under Retiring. They often indicate suboptimal performance and can often be optimized or avoided. Sample with: UOPS_RETIRED.RETIRE_SLOTS"
},
{
	"MetricGroup": "TopdownL2",
	"MetricName": "tma_branch_mispredicts",
	"MetricExpr": "BR_MISP_RETIRED.ALL_BRANCHES / (BR_MISP_RETIRED.ALL_BRANCHES + MACHINE_CLEARS.COUNT) * tma_bad_speculation",
	"MetricThreshold": "tma_branch_mispredicts > 0.1 & tma_bad_speculation > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU has wasted due to Branch Misprediction",
	"PublicDescription": "This metric represents fraction of slots the CPU has wasted due to Branch Misprediction.  These slots are either wasted by uops fetched from an incorrectly speculated program path; or stalls when the out-of-order part of the machine needs to recover its state from a speculative path. Sample with: BR_MISP_RETIRED.ALL_BRANCHES. Related metrics: tma_info_bad_spec_branch_misprediction_cost, tma_info_bottleneck_mispredictions, tma_mispredicts_resteers"
},
{
	"MetricGroup": "TopdownL2",
	"MetricName": "tma_core_bound",
	"MetricExpr": "tma_backend_bound - tma_memory_bound",
	"MetricThreshold": "tma_core_bound > 0.1 & tma_backend_bound > 0.2",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where Core non-memory issues were of a bottleneck",
	"PublicDescription": "This metric represents fraction of slots where Core non-memory issues were of a bottleneck.  Shortage in hardware compute resources; or dependencies in software's instructions are both categorized under Core Bound. Hence it may indicate the machine ran out of an out-of-order resource; certain execution units are overloaded or dependencies in program's data- or instruction-flow are limiting the performance (e.g. FP-chained long-latency arithmetic operations)"
},
{
	"MetricGroup": "TopdownL2",
	"MetricName": "tma_fetch_bandwidth",
	"MetricExpr": "tma_frontend_bound - tma_fetch_latency",
	"MetricThreshold": "tma_fetch_bandwidth > 0.1 & tma_frontend_bound > 0.15 & tma_info_thread_ipc / 4 > 0.35",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend bandwidth issues",
	"PublicDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend bandwidth issues.  For example; inefficiencies at the instruction decoders; or restrictions for caching in the DSB (decoded uops cache) are categorized under Fetch Bandwidth. In such cases; the Frontend typically delivers suboptimal amount of uops to the Backend. Sample with: FRONTEND_RETIRED.LATENCY_GE_2_BUBBLES_GE_1_PS;FRONTEND_RETIRED.LATENCY_GE_1_PS;FRONTEND_RETIRED.LATENCY_GE_2_PS. Related metrics: tma_dsb_switches, tma_info_botlnk_l2_dsb_misses, tma_info_frontend_dsb_coverage, tma_info_inst_mix_iptb, tma_lcp"
},
{
	"MetricGroup": "TopdownL2",
	"MetricName": "tma_fetch_latency",
	"MetricExpr": "4 * IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE / tma_info_thread_slots",
	"MetricThreshold": "tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend latency issues",
	"PublicDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend latency issues.  For example; instruction-cache misses; iTLB misses or fetch stalls after a branch misprediction are categorized under Frontend Latency. In such cases; the Frontend eventually delivers no uops for some period. Sample with: FRONTEND_RETIRED.LATENCY_GE_16_PS;FRONTEND_RETIRED.LATENCY_GE_8_PS"
},
{
	"MetricGroup": "TopdownL2",
	"MetricName": "tma_heavy_operations",
	"MetricExpr": "(UOPS_RETIRED.RETIRE_SLOTS + UOPS_RETIRED.MACRO_FUSED - INST_RETIRED.ANY) / tma_info_thread_slots",
	"MetricThreshold": "tma_heavy_operations > 0.1",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring heavy-weight operations -- instructions that require two or more uops or micro-coded sequences",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring heavy-weight operations -- instructions that require two or more uops or micro-coded sequences. This highly-correlates with the uop length of these instructions/sequences"
},
{
	"MetricGroup": "TopdownL2",
	"MetricName": "tma_light_operations",
	"MetricExpr": "tma_retiring - tma_heavy_operations",
	"MetricThreshold": "tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring light-weight operations -- instructions that require no more than one uop (micro-operation)",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring light-weight operations -- instructions that require no more than one uop (micro-operation). This correlates with total number of instructions used by the program. A uops-per-instruction (see UopPI metric) ratio of 1 or less should be expected for decently optimized software running on Intel Core/Xeon products. While this often indicates efficient X86 instructions were executed; high value does not necessarily mean better performance cannot be achieved. Sample with: INST_RETIRED.PREC_DIST"
},
{
	"MetricGroup": "TopdownL2",
	"MetricName": "tma_machine_clears",
	"MetricExpr": "tma_bad_speculation - tma_branch_mispredicts",
	"MetricThreshold": "tma_machine_clears > 0.1 & tma_bad_speculation > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU has wasted due to Machine Clears",
	"PublicDescription": "This metric represents fraction of slots the CPU has wasted due to Machine Clears.  These slots are either wasted by uops fetched prior to the clear; or stalls the out-of-order portion of the machine needs to recover its state after the clear. For example; this can happen due to memory ordering Nukes (e.g. Memory Disambiguation) or Self-Modifying-Code (SMC) nukes. Sample with: MACHINE_CLEARS.COUNT. Related metrics: tma_clears_resteers, tma_contested_accesses, tma_data_sharing, tma_false_sharing, tma_l1_bound, tma_microcode_sequencer, tma_ms_switches, tma_remote_cache"
},
{
	"MetricGroup": "TopdownL2",
	"MetricName": "tma_memory_bound",
	"MetricExpr": "(CYCLE_ACTIVITY.STALLS_MEM_ANY + EXE_ACTIVITY.BOUND_ON_STORES) / (CYCLE_ACTIVITY.STALLS_TOTAL + (EXE_ACTIVITY.1_PORTS_UTIL + tma_retiring * EXE_ACTIVITY.2_PORTS_UTIL) + EXE_ACTIVITY.BOUND_ON_STORES) * tma_backend_bound",
	"MetricThreshold": "tma_memory_bound > 0.2 & tma_backend_bound > 0.2",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the Memory subsystem within the Backend was a bottleneck",
	"PublicDescription": "This metric represents fraction of slots the Memory subsystem within the Backend was a bottleneck.  Memory Bound estimates fraction of slots where pipeline is likely stalled due to demand load or store instructions. This accounts mainly for (1) non-completed in-flight memory demand loads which coincides with execution units starvation; in addition to (2) cases where stores could impose backpressure on the pipeline when many of them get buffered at the same time (less common out of the two)"
},
{
	"MetricGroup": "TopdownL3",
	"MetricName": "tma_branch_resteers",
	"MetricExpr": "INT_MISC.CLEAR_RESTEER_CYCLES / tma_info_thread_clks + tma_unknown_branches",
	"MetricThreshold": "tma_branch_resteers > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers. Branch Resteers estimates the Frontend delay in fetching operations from corrected path; following all sorts of miss-predicted branches. For example; branchy code with lots of miss-predictions might get categorized under Branch Resteers. Note the value of this node may overlap with its siblings. Sample with: BR_MISP_RETIRED.ALL_BRANCHES"
},
{
	"MetricGroup": "TopdownL3",
	"MetricName": "tma_divider",
	"MetricExpr": "ARITH.DIVIDER_ACTIVE / tma_info_thread_clks",
	"MetricThreshold": "tma_divider > 0.2 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles where the Divider unit was active",
	"PublicDescription": "This metric represents fraction of cycles where the Divider unit was active. Divide and square root instructions are performed by the Divider unit and can take considerably longer latency than integer or Floating Point addition; subtraction; or multiplication. Sample with: ARITH.DIVIDER_ACTIVE"
},
{
	"MetricGroup": "TopdownL3",
	"MetricName": "tma_dram_bound",
	"MetricExpr": "CYCLE_ACTIVITY.STALLS_L3_MISS / tma_info_thread_clks + (CYCLE_ACTIVITY.STALLS_L1D_MISS - CYCLE_ACTIVITY.STALLS_L2_MISS) / tma_info_thread_clks - tma_l2_bound",
	"MetricThreshold": "tma_dram_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled on accesses to external memory (DRAM) by loads",
	"PublicDescription": "This metric estimates how often the CPU was stalled on accesses to external memory (DRAM) by loads. Better caching can improve the latency and increase performance. Sample with: MEM_LOAD_RETIRED.L3_MISS_PS"
},
{
	"MetricGroup": "TopdownL3",
	"MetricName": "tma_dsb",
	"MetricExpr": "(IDQ.ALL_DSB_CYCLES_ANY_UOPS - IDQ.ALL_DSB_CYCLES_4_UOPS) / tma_info_core_core_clks / 2",
	"MetricThreshold": "tma_dsb > 0.15 & (tma_fetch_bandwidth > 0.1 & tma_frontend_bound > 0.15 & tma_info_thread_ipc / 4 > 0.35)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles in which CPU was likely limited due to DSB (decoded uop cache) fetch pipeline",
	"PublicDescription": "This metric represents Core fraction of cycles in which CPU was likely limited due to DSB (decoded uop cache) fetch pipeline.  For example; inefficient utilization of the DSB cache structure or bank conflict when reading from it; are categorized here"
},
{
	"MetricGroup": "TopdownL3",
	"MetricName": "tma_dsb_switches",
	"MetricExpr": "DSB2MITE_SWITCHES.PENALTY_CYCLES / tma_info_thread_clks",
	"MetricThreshold": "tma_dsb_switches > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to switches from DSB to MITE pipelines",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to switches from DSB to MITE pipelines. The DSB (decoded i-cache) is a Uop Cache where the front-end directly delivers Uops (micro operations) avoiding heavy x86 decoding. The DSB pipeline has shorter latency and delivered higher bandwidth than the MITE (legacy instruction decode pipeline). Switching between the two pipelines can cause penalties hence this metric measures the exposed penalty. Sample with: FRONTEND_RETIRED.DSB_MISS_PS. Related metrics: tma_fetch_bandwidth, tma_info_botlnk_l2_dsb_misses, tma_info_frontend_dsb_coverage, tma_info_inst_mix_iptb, tma_lcp"
},
{
	"MetricGroup": "TopdownL3",
	"MetricName": "tma_few_uops_instructions",
	"MetricExpr": "tma_heavy_operations - tma_microcode_sequencer",
	"MetricThreshold": "tma_few_uops_instructions > 0.05 & tma_heavy_operations > 0.1",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring instructions that that are decoder into two or up to ([SNB+] four; [ADL+] five) uops",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring instructions that that are decoder into two or up to ([SNB+] four; [ADL+] five) uops. This highly-correlates with the number of uops in such instructions. Related metrics: tma_decoder0_alone"
},
{
	"MetricGroup": "TopdownL3",
	"MetricName": "tma_fp_arith",
	"MetricExpr": "tma_x87_use + tma_fp_scalar + tma_fp_vector",
	"MetricThreshold": "tma_fp_arith > 0.2 & tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents overall arithmetic floating-point (FP) operations fraction the CPU has executed (retired)",
	"PublicDescription": "This metric represents overall arithmetic floating-point (FP) operations fraction the CPU has executed (retired). Note this metric's value may exceed its parent due to use of \"Uops\" CountDomain and FMA double-counting"
},
{
	"MetricGroup": "TopdownL3",
	"MetricName": "tma_fused_instructions",
	"MetricExpr": "tma_light_operations * UOPS_RETIRED.MACRO_FUSED / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fused_instructions > 0.1 & tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring fused instructions -- where one uop can represent multiple contiguous instructions",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring fused instructions -- where one uop can represent multiple contiguous instructions. The instruction pairs of CMP+JCC or DEC+JCC are commonly used examples"
},
{
	"MetricGroup": "TopdownL3",
	"MetricName": "tma_icache_misses",
	"MetricExpr": "(ICACHE_16B.IFDATA_STALL + 2 * cpu@ICACHE_16B.IFDATA_STALL\\,cmask\\=1\\,edge@) / tma_info_thread_clks",
	"MetricThreshold": "tma_icache_misses > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to instruction cache misses",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to instruction cache misses. Sample with: FRONTEND_RETIRED.L2_MISS_PS;FRONTEND_RETIRED.L1I_MISS_PS"
},
{
	"MetricGroup": "TopdownL3",
	"MetricName": "tma_itlb_misses",
	"MetricExpr": "ICACHE_64B.IFTAG_STALL / tma_info_thread_clks",
	"MetricThreshold": "tma_itlb_misses > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Instruction TLB (ITLB) misses",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to Instruction TLB (ITLB) misses. Sample with: FRONTEND_RETIRED.STLB_MISS_PS;FRONTEND_RETIRED.ITLB_MISS_PS"
},
{
	"MetricGroup": "TopdownL3",
	"MetricName": "tma_l1_bound",
	"MetricExpr": "max((CYCLE_ACTIVITY.STALLS_MEM_ANY - CYCLE_ACTIVITY.STALLS_L1D_MISS) / tma_info_thread_clks, 0)",
	"MetricThreshold": "tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled without loads missing the L1 data cache",
	"PublicDescription": "This metric estimates how often the CPU was stalled without loads missing the L1 data cache.  The L1 data cache typically has the shortest latency.  However; in certain cases like loads blocked on older stores; a load might suffer due to high latency even though it is being satisfied by the L1. Another example is loads who miss in the TLB. These cases are characterized by execution unit stalls; while some non-completed demand load lives in the machine without having that demand load missing the L1 cache. Sample with: MEM_LOAD_RETIRED.L1_HIT_PS;MEM_LOAD_RETIRED.FB_HIT_PS. Related metrics: tma_clears_resteers, tma_machine_clears, tma_microcode_sequencer, tma_ms_switches, tma_ports_utilized_1"
},
{
	"MetricGroup": "TopdownL3",
	"MetricName": "tma_l2_bound",
	"MetricExpr": "MEM_LOAD_RETIRED.L2_HIT * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS) / (MEM_LOAD_RETIRED.L2_HIT * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS) + cpu@L1D_PEND_MISS.FB_FULL\\,cmask\\=1@) * ((CYCLE_ACTIVITY.STALLS_L1D_MISS - CYCLE_ACTIVITY.STALLS_L2_MISS) / tma_info_thread_clks)",
	"MetricThreshold": "tma_l2_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled due to L2 cache accesses by loads",
	"PublicDescription": "This metric estimates how often the CPU was stalled due to L2 cache accesses by loads.  Avoiding cache misses (i.e. L1 misses/L2 hits) can improve the latency and increase performance. Sample with: MEM_LOAD_RETIRED.L2_HIT_PS"
},
{
	"MetricGroup": "TopdownL3",
	"MetricName": "tma_l3_bound",
	"MetricExpr": "(CYCLE_ACTIVITY.STALLS_L2_MISS - CYCLE_ACTIVITY.STALLS_L3_MISS) / tma_info_thread_clks",
	"MetricThreshold": "tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled due to loads accesses to L3 cache or contended with a sibling Core",
	"PublicDescription": "This metric estimates how often the CPU was stalled due to loads accesses to L3 cache or contended with a sibling Core.  Avoiding cache misses (i.e. L2 misses/L3 hits) can improve the latency and increase performance. Sample with: MEM_LOAD_RETIRED.L3_HIT_PS"
},
{
	"MetricGroup": "TopdownL3",
	"MetricName": "tma_lcp",
	"MetricExpr": "ILD_STALL.LCP / tma_info_thread_clks",
	"MetricThreshold": "tma_lcp > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles CPU was stalled due to Length Changing Prefixes (LCPs)",
	"PublicDescription": "This metric represents fraction of cycles CPU was stalled due to Length Changing Prefixes (LCPs). Using proper compiler flags or Intel Compiler by default will certainly avoid this. #Link: Optimization Guide about LCP BKMs. Related metrics: tma_dsb_switches, tma_fetch_bandwidth, tma_info_botlnk_l2_dsb_misses, tma_info_frontend_dsb_coverage, tma_info_inst_mix_iptb"
},
{
	"MetricGroup": "TopdownL3",
	"MetricName": "tma_memory_operations",
	"MetricExpr": "tma_light_operations * MEM_INST_RETIRED.ANY / INST_RETIRED.ANY",
	"MetricThreshold": "tma_memory_operations > 0.1 & tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring memory operations -- uops for memory load or store accesses"
},
{
	"MetricGroup": "TopdownL3",
	"MetricName": "tma_microcode_sequencer",
	"MetricExpr": "UOPS_RETIRED.RETIRE_SLOTS / UOPS_ISSUED.ANY * IDQ.MS_UOPS / tma_info_thread_slots",
	"MetricThreshold": "tma_microcode_sequencer > 0.05 & tma_heavy_operations > 0.1",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU was retiring uops fetched by the Microcode Sequencer (MS) unit",
	"PublicDescription": "This metric represents fraction of slots the CPU was retiring uops fetched by the Microcode Sequencer (MS) unit.  The MS is used for CISC instructions not supported by the default decoders (like repeat move strings; or CPUID); or by microcode assists used to address some operation modes (like in Floating Point assists). These cases can often be avoided. Sample with: IDQ.MS_UOPS. Related metrics: tma_clears_resteers, tma_l1_bound, tma_machine_clears, tma_ms_switches"
},
{
	"MetricGroup": "TopdownL3",
	"MetricName": "tma_mite",
	"MetricExpr": "(IDQ.ALL_MITE_CYCLES_ANY_UOPS - IDQ.ALL_MITE_CYCLES_4_UOPS) / tma_info_core_core_clks / 2",
	"MetricThreshold": "tma_mite > 0.1 & (tma_fetch_bandwidth > 0.1 & tma_frontend_bound > 0.15 & tma_info_thread_ipc / 4 > 0.35)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles in which CPU was likely limited due to the MITE pipeline (the legacy decode pipeline)",
	"PublicDescription": "This metric represents Core fraction of cycles in which CPU was likely limited due to the MITE pipeline (the legacy decode pipeline). This pipeline is used for code that was not pre-cached in the DSB or LSD. For example; inefficiencies due to asymmetric decoders; use of long immediate or LCP can manifest as MITE fetch bandwidth bottleneck. Sample with: FRONTEND_RETIRED.ANY_DSB_MISS"
},
{
	"MetricGroup": "TopdownL3",
	"MetricName": "tma_ms_switches",
	"MetricExpr": "2 * IDQ.MS_SWITCHES / tma_info_thread_clks",
	"MetricThreshold": "tma_ms_switches > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates the fraction of cycles when the CPU was stalled due to switches of uop delivery to the Microcode Sequencer (MS)",
	"PublicDescription": "This metric estimates the fraction of cycles when the CPU was stalled due to switches of uop delivery to the Microcode Sequencer (MS). Commonly used instructions are optimized for delivery by the DSB (decoded i-cache) or MITE (legacy instruction decode) pipelines. Certain operations cannot be handled natively by the execution pipeline; and must be performed by microcode (small programs injected into the execution stream). Switching to the MS too often can negatively impact performance. The MS is designated to deliver long uop flows required by CISC instructions like CPUID; or uncommon conditions like Floating Point Assists when dealing with Denormals. Sample with: IDQ.MS_SWITCHES. Related metrics: tma_clears_resteers, tma_l1_bound, tma_machine_clears, tma_microcode_sequencer, tma_mixing_vectors, tma_serializing_operation"
},
{
	"MetricGroup": "TopdownL3",
	"MetricName": "tma_non_fused_branches",
	"MetricExpr": "tma_light_operations * (BR_INST_RETIRED.ALL_BRANCHES - UOPS_RETIRED.MACRO_FUSED) / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_non_fused_branches > 0.1 & tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring branch instructions that were not fused",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring branch instructions that were not fused. Non-conditional branches like direct JMP or CALL would count here. Can be used to examine fusible conditional jumps that were not fused"
},
{
	"MetricGroup": "TopdownL3",
	"MetricName": "tma_nop_instructions",
	"MetricExpr": "tma_light_operations * INST_RETIRED.NOP / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_nop_instructions > 0.1 & tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring NOP (no op) instructions",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring NOP (no op) instructions. Compilers often use NOPs for certain address alignments - e.g. start address of a function or loop body. Sample with: INST_RETIRED.NOP"
},
{
	"MetricGroup": "TopdownL3",
	"MetricName": "tma_other_light_ops",
	"MetricExpr": "max(0, tma_light_operations - (tma_fp_arith + tma_memory_operations + tma_fused_instructions + tma_non_fused_branches + tma_nop_instructions))",
	"MetricThreshold": "tma_other_light_ops > 0.3 & tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents the remaining light uops fraction the CPU has executed - remaining means not covered by other sibling nodes",
	"PublicDescription": "This metric represents the remaining light uops fraction the CPU has executed - remaining means not covered by other sibling nodes. May undercount due to FMA double counting"
},
{
	"MetricGroup": "TopdownL3",
	"MetricName": "tma_ports_utilization",
	"MetricExpr": "((EXE_ACTIVITY.EXE_BOUND_0_PORTS + (EXE_ACTIVITY.1_PORTS_UTIL + tma_retiring * EXE_ACTIVITY.2_PORTS_UTIL)) / tma_info_thread_clks if ARITH.DIVIDER_ACTIVE < CYCLE_ACTIVITY.STALLS_TOTAL - CYCLE_ACTIVITY.STALLS_MEM_ANY else (EXE_ACTIVITY.1_PORTS_UTIL + tma_retiring * EXE_ACTIVITY.2_PORTS_UTIL) / tma_info_thread_clks)",
	"MetricThreshold": "tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles the CPU performance was potentially limited due to Core computation issues (non divider-related)",
	"PublicDescription": "This metric estimates fraction of cycles the CPU performance was potentially limited due to Core computation issues (non divider-related).  Two distinct categories can be attributed into this metric: (1) heavy data-dependency among contiguous instructions would manifest in this metric - such cases are often referred to as low Instruction Level Parallelism (ILP). (2) Contention on some hardware execution unit other than Divider. For example; when there are too many multiply operations"
},
{
	"MetricGroup": "TopdownL3",
	"MetricName": "tma_store_bound",
	"MetricExpr": "EXE_ACTIVITY.BOUND_ON_STORES / tma_info_thread_clks",
	"MetricThreshold": "tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often CPU was stalled  due to RFO store memory accesses; RFO store issue a read-for-ownership request before the write",
	"PublicDescription": "This metric estimates how often CPU was stalled  due to RFO store memory accesses; RFO store issue a read-for-ownership request before the write. Even though store accesses do not typically stall out-of-order CPUs; there are few cases where stores can lead to actual stalls. This metric will be flagged should RFO stores be a bottleneck. Sample with: MEM_INST_RETIRED.ALL_STORES_PS"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_4k_aliasing",
	"MetricExpr": "LD_BLOCKS_PARTIAL.ADDRESS_ALIAS / tma_info_thread_clks",
	"MetricThreshold": "tma_4k_aliasing > 0.2 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often memory load accesses were aliased by preceding stores (in program order) with a 4K address offset",
	"PublicDescription": "This metric estimates how often memory load accesses were aliased by preceding stores (in program order) with a 4K address offset. False match is possible; which incur a few cycles load re-issue. However; the short re-issue duration is often hidden by the out-of-order core and HW optimizations; hence a user may safely ignore a high value of this metric unless it manages to propagate up into parent nodes of the hierarchy (e.g. to L1_Bound)"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_assists",
	"MetricExpr": "100 * (FP_ASSIST.ANY + OTHER_ASSISTS.ANY) / tma_info_thread_slots",
	"MetricThreshold": "tma_assists > 0.1 & (tma_microcode_sequencer > 0.05 & tma_heavy_operations > 0.1)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of slots the CPU retired uops delivered by the Microcode_Sequencer as a result of Assists",
	"PublicDescription": "This metric estimates fraction of slots the CPU retired uops delivered by the Microcode_Sequencer as a result of Assists. Assists are long sequences of uops that are required in certain corner-cases for operations that cannot be handled natively by the execution pipeline. For example; when working with very small floating point values (so-called Denormals); the FP units are not set up to perform these operations natively. Instead; a sequence of instructions to perform the computation on the Denormals is injected into the pipeline. Since these microcode sequences might be dozens of uops long; Assists can be extremely deleterious to performance and they can be avoided in many cases. Sample with: OTHER_ASSISTS.ANY"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_cisc",
	"MetricExpr": "max(0, tma_microcode_sequencer - tma_assists)",
	"MetricThreshold": "tma_cisc > 0.1 & (tma_microcode_sequencer > 0.05 & tma_heavy_operations > 0.1)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles the CPU retired uops originated from CISC (complex instruction set computer) instruction",
	"PublicDescription": "This metric estimates fraction of cycles the CPU retired uops originated from CISC (complex instruction set computer) instruction. A CISC instruction has multiple uops that are required to perform the instruction's functionality as in the case of read-modify-write as an example. Since these instructions require multiple uops they may or may not imply sub-optimal use of machine resources"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_clears_resteers",
	"MetricExpr": "(1 - BR_MISP_RETIRED.ALL_BRANCHES / (BR_MISP_RETIRED.ALL_BRANCHES + MACHINE_CLEARS.COUNT)) * INT_MISC.CLEAR_RESTEER_CYCLES / tma_info_thread_clks",
	"MetricThreshold": "tma_clears_resteers > 0.05 & (tma_branch_resteers > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Machine Clears",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Machine Clears. Sample with: INT_MISC.CLEAR_RESTEER_CYCLES. Related metrics: tma_l1_bound, tma_machine_clears, tma_microcode_sequencer, tma_ms_switches"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_contested_accesses",
	"MetricExpr": "(18.5 * tma_info_system_average_frequency * MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM + 16.5 * tma_info_system_average_frequency * MEM_LOAD_L3_HIT_RETIRED.XSNP_MISS) * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS / 2) / tma_info_thread_clks",
	"MetricThreshold": "tma_contested_accesses > 0.05 & (tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to contested accesses",
	"PublicDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to contested accesses. Contested accesses occur when data written by one Logical Processor are read by another Logical Processor on a different Physical Core. Examples of contested accesses include synchronizations such as locks; true data sharing such as modified locked variables; and false sharing. Sample with: MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM_PS;MEM_LOAD_L3_HIT_RETIRED.XSNP_MISS_PS. Related metrics: tma_data_sharing, tma_false_sharing, tma_machine_clears, tma_remote_cache"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_data_sharing",
	"MetricExpr": "16.5 * tma_info_system_average_frequency * MEM_LOAD_L3_HIT_RETIRED.XSNP_HIT * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS / 2) / tma_info_thread_clks",
	"MetricThreshold": "tma_data_sharing > 0.05 & (tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to data-sharing accesses",
	"PublicDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to data-sharing accesses. Data shared by multiple Logical Processors (even just read shared) may cause increased access latency due to cache coherency. Excessive data sharing can drastically harm multithreaded performance. Sample with: MEM_LOAD_L3_HIT_RETIRED.XSNP_HIT_PS. Related metrics: tma_contested_accesses, tma_false_sharing, tma_machine_clears, tma_remote_cache"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_decoder0_alone",
	"MetricExpr": "(cpu@INST_DECODED.DECODERS\\,cmask\\=1@ - cpu@INST_DECODED.DECODERS\\,cmask\\=2@) / tma_info_core_core_clks / 2",
	"MetricThreshold": "tma_decoder0_alone > 0.1 & (tma_mite > 0.1 & (tma_fetch_bandwidth > 0.1 & tma_frontend_bound > 0.15 & tma_info_thread_ipc / 4 > 0.35))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles where decoder-0 was the only active decoder",
	"PublicDescription": "This metric represents fraction of cycles where decoder-0 was the only active decoder. Related metrics: tma_few_uops_instructions"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_dtlb_load",
	"MetricExpr": "min(9 * cpu@DTLB_LOAD_MISSES.STLB_HIT\\,cmask\\=1@ + DTLB_LOAD_MISSES.WALK_ACTIVE, max(CYCLE_ACTIVITY.CYCLES_MEM_ANY - CYCLE_ACTIVITY.CYCLES_L1D_MISS, 0)) / tma_info_thread_clks",
	"MetricThreshold": "tma_dtlb_load > 0.1 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates the fraction of cycles where the Data TLB (DTLB) was missed by load accesses",
	"PublicDescription": "This metric roughly estimates the fraction of cycles where the Data TLB (DTLB) was missed by load accesses. TLBs (Translation Look-aside Buffers) are processor caches for recently used entries out of the Page Tables that are used to map virtual- to physical-addresses by the operating system. This metric approximates the potential delay of demand loads missing the first-level data TLB (assuming worst case scenario with back to back misses to different pages). This includes hitting in the second-level TLB (STLB) as well as performing a hardware page walk on an STLB miss. Sample with: MEM_INST_RETIRED.STLB_MISS_LOADS_PS. Related metrics: tma_dtlb_store, tma_info_bottleneck_memory_data_tlbs"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_dtlb_store",
	"MetricExpr": "(9 * cpu@DTLB_STORE_MISSES.STLB_HIT\\,cmask\\=1@ + DTLB_STORE_MISSES.WALK_ACTIVE) / tma_info_core_core_clks",
	"MetricThreshold": "tma_dtlb_store > 0.05 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates the fraction of cycles spent handling first-level data TLB store misses",
	"PublicDescription": "This metric roughly estimates the fraction of cycles spent handling first-level data TLB store misses.  As with ordinary data caching; focus on improving data locality and reducing working-set size to reduce DTLB overhead.  Additionally; consider using profile-guided optimization (PGO) to collocate frequently-used data on the same page.  Try using larger page sizes for large amounts of frequently-used data. Sample with: MEM_INST_RETIRED.STLB_MISS_STORES_PS. Related metrics: tma_dtlb_load, tma_info_bottleneck_memory_data_tlbs"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_false_sharing",
	"MetricExpr": "22 * tma_info_system_average_frequency * OFFCORE_RESPONSE.DEMAND_RFO.L3_HIT.SNOOP_HITM / tma_info_thread_clks",
	"MetricThreshold": "tma_false_sharing > 0.05 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates how often CPU was handling synchronizations due to False Sharing",
	"PublicDescription": "This metric roughly estimates how often CPU was handling synchronizations due to False Sharing. False Sharing is a multithreading hiccup; where multiple Logical Processors contend on different data-elements mapped into the same cache line. Sample with: MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM_PS;OFFCORE_RESPONSE.DEMAND_RFO.L3_HIT.SNOOP_HITM. Related metrics: tma_contested_accesses, tma_data_sharing, tma_machine_clears, tma_remote_cache"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_fb_full",
	"MetricExpr": "tma_info_memory_load_miss_real_latency * cpu@L1D_PEND_MISS.FB_FULL\\,cmask\\=1@ / tma_info_thread_clks",
	"MetricThreshold": "tma_fb_full > 0.3",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric does a *rough estimation* of how often L1D Fill Buffer unavailability limited additional L1D miss memory access requests to proceed",
	"PublicDescription": "This metric does a *rough estimation* of how often L1D Fill Buffer unavailability limited additional L1D miss memory access requests to proceed. The higher the metric value; the deeper the memory hierarchy level the misses are satisfied from (metric values >1 are valid). Often it hints on approaching bandwidth limits (to L2 cache; L3 cache or external memory). Related metrics: tma_info_bottleneck_memory_bandwidth, tma_info_system_dram_bw_use, tma_mem_bandwidth, tma_sq_full, tma_store_latency, tma_streaming_stores"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_fp_scalar",
	"MetricExpr": "cpu@FP_ARITH_INST_RETIRED.SCALAR_SINGLE\\,umask\\=0x03@ / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fp_scalar > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric approximates arithmetic floating-point (FP) scalar uops fraction the CPU has retired",
	"PublicDescription": "This metric approximates arithmetic floating-point (FP) scalar uops fraction the CPU has retired. May overcount due to FMA double counting. Related metrics: tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_fp_vector",
	"MetricExpr": "cpu@FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE\\,umask\\=0x3c@ / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fp_vector > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric approximates arithmetic floating-point (FP) vector uops fraction the CPU has retired aggregated across all vector widths",
	"PublicDescription": "This metric approximates arithmetic floating-point (FP) vector uops fraction the CPU has retired aggregated across all vector widths. May overcount due to FMA double counting. Related metrics: tma_fp_scalar, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_l3_hit_latency",
	"MetricExpr": "6.5 * tma_info_system_average_frequency * MEM_LOAD_RETIRED.L3_HIT * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS / 2) / tma_info_thread_clks",
	"MetricThreshold": "tma_l3_hit_latency > 0.1 & (tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles with demand load accesses that hit the L3 cache under unloaded scenarios (possibly L3 latency limited)",
	"PublicDescription": "This metric represents fraction of cycles with demand load accesses that hit the L3 cache under unloaded scenarios (possibly L3 latency limited).  Avoiding private cache misses (i.e. L2 misses/L3 hits) will improve the latency; reduce contention with sibling physical cores and increase performance.  Note the value of this node may overlap with its siblings. Sample with: MEM_LOAD_RETIRED.L3_HIT_PS. Related metrics: tma_info_bottleneck_memory_latency, tma_mem_latency"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_lock_latency",
	"MetricExpr": "(12 * max(0, MEM_INST_RETIRED.LOCK_LOADS - L2_RQSTS.ALL_RFO) + MEM_INST_RETIRED.LOCK_LOADS / MEM_INST_RETIRED.ALL_STORES * (9 * L2_RQSTS.RFO_HIT + min(CPU_CLK_UNHALTED.THREAD, OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_RFO))) / tma_info_thread_clks",
	"MetricThreshold": "tma_lock_latency > 0.2 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU spent handling cache misses due to lock operations",
	"PublicDescription": "This metric represents fraction of cycles the CPU spent handling cache misses due to lock operations. Due to the microarchitecture handling of locks; they are classified as L1_Bound regardless of what memory source satisfied them. Sample with: MEM_INST_RETIRED.LOCK_LOADS_PS. Related metrics: tma_store_latency"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_mem_bandwidth",
	"MetricExpr": "min(CPU_CLK_UNHALTED.THREAD, cpu@OFFCORE_REQUESTS_OUTSTANDING.ALL_DATA_RD\\,cmask\\=4@) / tma_info_thread_clks",
	"MetricThreshold": "tma_mem_bandwidth > 0.2 & (tma_dram_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles where the core's performance was likely hurt due to approaching bandwidth limits of external memory (DRAM)",
	"PublicDescription": "This metric estimates fraction of cycles where the core's performance was likely hurt due to approaching bandwidth limits of external memory (DRAM).  The underlying heuristic assumes that a similar off-core traffic is generated by all IA cores. This metric does not aggregate non-data-read requests by this logical processor; requests from other IA Logical Processors/Physical Cores/sockets; or other non-IA devices like GPU; hence the maximum external memory bandwidth limits may or may not be approached when this metric is flagged (see Uncore counters for that). Related metrics: tma_fb_full, tma_info_bottleneck_memory_bandwidth, tma_info_system_dram_bw_use, tma_sq_full"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_mem_latency",
	"MetricExpr": "min(CPU_CLK_UNHALTED.THREAD, OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DATA_RD) / tma_info_thread_clks - tma_mem_bandwidth",
	"MetricThreshold": "tma_mem_latency > 0.1 & (tma_dram_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles where the performance was likely hurt due to latency from external memory (DRAM)",
	"PublicDescription": "This metric estimates fraction of cycles where the performance was likely hurt due to latency from external memory (DRAM).  This metric does not aggregate requests from other Logical Processors/Physical Cores/sockets (see Uncore counters for that). Related metrics: tma_info_bottleneck_memory_latency, tma_l3_hit_latency"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_mispredicts_resteers",
	"MetricExpr": "BR_MISP_RETIRED.ALL_BRANCHES / (BR_MISP_RETIRED.ALL_BRANCHES + MACHINE_CLEARS.COUNT) * INT_MISC.CLEAR_RESTEER_CYCLES / tma_info_thread_clks",
	"MetricThreshold": "tma_mispredicts_resteers > 0.05 & (tma_branch_resteers > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Branch Misprediction at execution stage",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Branch Misprediction at execution stage. Sample with: INT_MISC.CLEAR_RESTEER_CYCLES. Related metrics: tma_branch_mispredicts, tma_info_bad_spec_branch_misprediction_cost, tma_info_bottleneck_mispredictions"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_ports_utilized_0",
	"MetricExpr": "(UOPS_EXECUTED.CORE_CYCLES_NONE / 2 if #SMT_on else CYCLE_ACTIVITY.STALLS_TOTAL - CYCLE_ACTIVITY.STALLS_MEM_ANY) / tma_info_core_core_clks",
	"MetricThreshold": "tma_ports_utilized_0 > 0.2 & (tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles CPU executed no uops on any execution port (Logical Processor cycles since ICL, Physical Core cycles otherwise)",
	"PublicDescription": "This metric represents fraction of cycles CPU executed no uops on any execution port (Logical Processor cycles since ICL, Physical Core cycles otherwise). Long-latency instructions like divides may contribute to this metric"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_ports_utilized_1",
	"MetricExpr": "((UOPS_EXECUTED.CORE_CYCLES_GE_1 - UOPS_EXECUTED.CORE_CYCLES_GE_2) / 2 if #SMT_on else EXE_ACTIVITY.1_PORTS_UTIL) / tma_info_core_core_clks",
	"MetricThreshold": "tma_ports_utilized_1 > 0.2 & (tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles where the CPU executed total of 1 uop per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise)",
	"PublicDescription": "This metric represents fraction of cycles where the CPU executed total of 1 uop per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise). This can be due to heavy data-dependency among software instructions; or over oversubscribing a particular hardware resource. In some other cases with high 1_Port_Utilized and L1_Bound; this metric can point to L1 data-cache latency bottleneck that may not necessarily manifest with complete execution starvation (due to the short L1 latency e.g. walking a linked list) - looking at the assembly can be helpful. Related metrics: tma_l1_bound"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_ports_utilized_2",
	"MetricExpr": "((UOPS_EXECUTED.CORE_CYCLES_GE_2 - UOPS_EXECUTED.CORE_CYCLES_GE_3) / 2 if #SMT_on else EXE_ACTIVITY.2_PORTS_UTIL) / tma_info_core_core_clks",
	"MetricThreshold": "tma_ports_utilized_2 > 0.15 & (tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles CPU executed total of 2 uops per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise)",
	"PublicDescription": "This metric represents fraction of cycles CPU executed total of 2 uops per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise).  Loop Vectorization -most compilers feature auto-Vectorization options today- reduces pressure on the execution ports as multiple elements are calculated with same uop. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_ports_utilized_3m",
	"MetricExpr": "(UOPS_EXECUTED.CORE_CYCLES_GE_3 / 2 if #SMT_on else UOPS_EXECUTED.CORE_CYCLES_GE_3) / tma_info_core_core_clks",
	"MetricThreshold": "tma_ports_utilized_3m > 0.7 & (tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles CPU executed total of 3 or more uops per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise)"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_split_loads",
	"MetricExpr": "tma_info_memory_load_miss_real_latency * LD_BLOCKS.NO_SR / tma_info_thread_clks",
	"MetricThreshold": "tma_split_loads > 0.2 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles handling memory load split accesses - load that cross 64-byte cache line boundary",
	"PublicDescription": "This metric estimates fraction of cycles handling memory load split accesses - load that cross 64-byte cache line boundary. Sample with: MEM_INST_RETIRED.SPLIT_LOADS_PS"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_split_stores",
	"MetricExpr": "MEM_INST_RETIRED.SPLIT_STORES / tma_info_core_core_clks",
	"MetricThreshold": "tma_split_stores > 0.2 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents rate of split store accesses",
	"PublicDescription": "This metric represents rate of split store accesses.  Consider aligning your data to the 64-byte cache line granularity. Sample with: MEM_INST_RETIRED.SPLIT_STORES_PS. Related metrics: tma_port_4"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_sq_full",
	"MetricExpr": "(OFFCORE_REQUESTS_BUFFER.SQ_FULL / 2 if #SMT_on else OFFCORE_REQUESTS_BUFFER.SQ_FULL) / tma_info_core_core_clks",
	"MetricThreshold": "tma_sq_full > 0.3 & (tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric measures fraction of cycles where the Super Queue (SQ) was full taking into account all request-types and both hardware SMT threads (Logical Processors)",
	"PublicDescription": "This metric measures fraction of cycles where the Super Queue (SQ) was full taking into account all request-types and both hardware SMT threads (Logical Processors). Related metrics: tma_fb_full, tma_info_bottleneck_memory_bandwidth, tma_info_system_dram_bw_use, tma_mem_bandwidth"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_store_fwd_blk",
	"MetricExpr": "13 * LD_BLOCKS.STORE_FORWARD / tma_info_thread_clks",
	"MetricThreshold": "tma_store_fwd_blk > 0.1 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates fraction of cycles when the memory subsystem had loads blocked since they could not forward data from earlier (in program order) overlapping stores",
	"PublicDescription": "This metric roughly estimates fraction of cycles when the memory subsystem had loads blocked since they could not forward data from earlier (in program order) overlapping stores. To streamline memory operations in the pipeline; a load can avoid waiting for memory if a prior in-flight store is writing the data that the load wants to read (store forwarding process). However; in some cases the load may be blocked for a significant time pending the store forward. For example; when the prior store is writing a smaller region than the load is reading"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_store_latency",
	"MetricExpr": "(L2_RQSTS.RFO_HIT * 9 * (1 - MEM_INST_RETIRED.LOCK_LOADS / MEM_INST_RETIRED.ALL_STORES) + (1 - MEM_INST_RETIRED.LOCK_LOADS / MEM_INST_RETIRED.ALL_STORES) * min(CPU_CLK_UNHALTED.THREAD, OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_RFO)) / tma_info_thread_clks",
	"MetricThreshold": "tma_store_latency > 0.1 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles the CPU spent handling L1D store misses",
	"PublicDescription": "This metric estimates fraction of cycles the CPU spent handling L1D store misses. Store accesses usually less impact out-of-order core performance; however; holding resources for longer time can lead into undesired implications (e.g. contention on L1D fill-buffer entries - see FB_Full). Related metrics: tma_fb_full, tma_lock_latency"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_unknown_branches",
	"MetricExpr": "9 * BACLEARS.ANY / tma_info_thread_clks",
	"MetricThreshold": "tma_unknown_branches > 0.05 & (tma_branch_resteers > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to new branch address clears",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to new branch address clears. These are fetched branches the Branch Prediction Unit was unable to recognize (e.g. first time the branch is fetched or hitting BTB capacity limit). Sample with: BACLEARS.ANY"
},
{
	"MetricGroup": "TopdownL4",
	"MetricName": "tma_x87_use",
	"MetricExpr": "tma_retiring * UOPS_EXECUTED.X87 / UOPS_EXECUTED.THREAD",
	"MetricThreshold": "tma_x87_use > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric serves as an approximation of legacy x87 usage",
	"PublicDescription": "This metric serves as an approximation of legacy x87 usage. It accounts for instructions beyond X87 FP arithmetic operations; hence may be used as a thermometer to avoid X87 high usage and preferably upgrade to modern ISA. See Tip under Tuning Hint"
},
{
	"MetricGroup": "TopdownL5",
	"MetricName": "tma_alu_op_utilization",
	"MetricExpr": "(UOPS_DISPATCHED_PORT.PORT_0 + UOPS_DISPATCHED_PORT.PORT_1 + UOPS_DISPATCHED_PORT.PORT_5 + UOPS_DISPATCHED_PORT.PORT_6) / tma_info_thread_slots",
	"MetricThreshold": "tma_alu_op_utilization > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution ports for ALU operations"
},
{
	"MetricGroup": "TopdownL5",
	"MetricName": "tma_fp_vector_128b",
	"MetricExpr": "(FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE + FP_ARITH_INST_RETIRED.128B_PACKED_SINGLE) / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fp_vector_128b > 0.1 & (tma_fp_vector > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 128-bit wide vectors",
	"PublicDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 128-bit wide vectors. May overcount due to FMA double counting. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "TopdownL5",
	"MetricName": "tma_fp_vector_256b",
	"MetricExpr": "(FP_ARITH_INST_RETIRED.256B_PACKED_DOUBLE + FP_ARITH_INST_RETIRED.256B_PACKED_SINGLE) / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fp_vector_256b > 0.1 & (tma_fp_vector > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 256-bit wide vectors",
	"PublicDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 256-bit wide vectors. May overcount due to FMA double counting. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "TopdownL5",
	"MetricName": "tma_load_op_utilization",
	"MetricExpr": "(UOPS_DISPATCHED_PORT.PORT_2 + UOPS_DISPATCHED_PORT.PORT_3 + UOPS_DISPATCHED_PORT.PORT_7 - UOPS_DISPATCHED_PORT.PORT_4) / (2 * tma_info_core_core_clks)",
	"MetricThreshold": "tma_load_op_utilization > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port for Load operations",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port for Load operations. Sample with: UOPS_DISPATCHED.PORT_2_3"
},
{
	"MetricGroup": "TopdownL5",
	"MetricName": "tma_load_stlb_hit",
	"MetricExpr": "tma_dtlb_load - tma_load_stlb_miss",
	"MetricThreshold": "tma_load_stlb_hit > 0.05 & (tma_dtlb_load > 0.1 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates the fraction of cycles where the (first level) DTLB was missed by load accesses, that later on hit in second-level TLB (STLB)"
},
{
	"MetricGroup": "TopdownL5",
	"MetricName": "tma_load_stlb_miss",
	"MetricExpr": "DTLB_LOAD_MISSES.WALK_ACTIVE / tma_info_thread_clks",
	"MetricThreshold": "tma_load_stlb_miss > 0.05 & (tma_dtlb_load > 0.1 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates the fraction of cycles where the Second-level TLB (STLB) was missed by load accesses, performing a hardware page walk"
},
{
	"MetricGroup": "TopdownL5",
	"MetricName": "tma_mixing_vectors",
	"MetricExpr": "UOPS_ISSUED.VECTOR_WIDTH_MISMATCH / UOPS_ISSUED.ANY",
	"MetricThreshold": "tma_mixing_vectors > 0.05",
	"ScaleUnit": "100%",
	"BriefDescription": "The Mixing_Vectors metric gives the percentage of injected blend uops out of all uops issued",
	"PublicDescription": "The Mixing_Vectors metric gives the percentage of injected blend uops out of all uops issued. Usually a Mixing_Vectors over 5% is worth investigating. Read more in Appendix B1 of the Optimizations Guide for this topic. Related metrics: tma_ms_switches"
},
{
	"MetricGroup": "TopdownL5",
	"MetricName": "tma_serializing_operation",
	"MetricExpr": "PARTIAL_RAT_STALLS.SCOREBOARD / tma_info_thread_clks",
	"MetricThreshold": "tma_serializing_operation > 0.1 & (tma_ports_utilized_0 > 0.2 & (tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2)))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU issue-pipeline was stalled due to serializing operations",
	"PublicDescription": "This metric represents fraction of cycles the CPU issue-pipeline was stalled due to serializing operations. Instructions like CPUID; WRMSR or LFENCE serialize the out-of-order execution which may limit performance. Sample with: PARTIAL_RAT_STALLS.SCOREBOARD. Related metrics: tma_ms_switches"
},
{
	"MetricGroup": "TopdownL5",
	"MetricName": "tma_store_op_utilization",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_4 / tma_info_core_core_clks",
	"MetricThreshold": "tma_store_op_utilization > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port for Store operations"
},
{
	"MetricGroup": "TopdownL5",
	"MetricName": "tma_store_stlb_hit",
	"MetricExpr": "tma_dtlb_store - tma_store_stlb_miss",
	"MetricThreshold": "tma_store_stlb_hit > 0.05 & (tma_dtlb_store > 0.05 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates the fraction of cycles where the TLB was missed by store accesses, hitting in the second-level TLB (STLB)"
},
{
	"MetricGroup": "TopdownL5",
	"MetricName": "tma_store_stlb_miss",
	"MetricExpr": "DTLB_STORE_MISSES.WALK_ACTIVE / tma_info_core_core_clks",
	"MetricThreshold": "tma_store_stlb_miss > 0.05 & (tma_dtlb_store > 0.05 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates the fraction of cycles where the STLB was missed by store accesses, performing a hardware page walk"
},
{
	"MetricGroup": "TopdownL6",
	"MetricName": "tma_port_0",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_0 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_0 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 0 ([SNB+] ALU; [HSW+] ALU and 2nd branch)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 0 ([SNB+] ALU; [HSW+] ALU and 2nd branch). Sample with: UOPS_DISPATCHED_PORT.PORT_0. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "TopdownL6",
	"MetricName": "tma_port_1",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_1 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_1 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 1 (ALU)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 1 (ALU). Sample with: UOPS_DISPATCHED_PORT.PORT_1. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "TopdownL6",
	"MetricName": "tma_port_2",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_2 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_2 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 2 ([SNB+]Loads and Store-address; [ICL+] Loads)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 2 ([SNB+]Loads and Store-address; [ICL+] Loads). Sample with: UOPS_DISPATCHED_PORT.PORT_2"
},
{
	"MetricGroup": "TopdownL6",
	"MetricName": "tma_port_3",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_3 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_3 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 3 ([SNB+]Loads and Store-address; [ICL+] Loads)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 3 ([SNB+]Loads and Store-address; [ICL+] Loads). Sample with: UOPS_DISPATCHED_PORT.PORT_3"
},
{
	"MetricGroup": "TopdownL6",
	"MetricName": "tma_port_4",
	"MetricExpr": "tma_store_op_utilization",
	"MetricThreshold": "tma_port_4 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 4 (Store-data)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 4 (Store-data). Sample with: UOPS_DISPATCHED_PORT.PORT_4. Related metrics: tma_split_stores"
},
{
	"MetricGroup": "TopdownL6",
	"MetricName": "tma_port_5",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_5 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_5 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 5 ([SNB+] Branches and ALU; [HSW+] ALU)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 5 ([SNB+] Branches and ALU; [HSW+] ALU). Sample with: UOPS_DISPATCHED.PORT_5. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "TopdownL6",
	"MetricName": "tma_port_6",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_6 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_6 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 6 ([HSW+]Primary Branch and simple ALU)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 6 ([HSW+]Primary Branch and simple ALU). Sample with: UOPS_DISPATCHED_PORT.PORT_6. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_ports_utilized_2"
},
{
	"MetricGroup": "TopdownL6",
	"MetricName": "tma_port_7",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_7 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_7 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 7 ([HSW+]simple Store-address)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 7 ([HSW+]simple Store-address). Sample with: UOPS_DISPATCHED_PORT.PORT_7"
},
{
	"MetricGroup": "smi",
	"MetricName": "smi_cycles",
	"MetricExpr": "((msr@aperf@ - cycles) / msr@aperf@ if msr@smi@ > 0 else 0)",
	"MetricThreshold": "smi_cycles > 0.1",
	"ScaleUnit": "100%",
	"BriefDescription": "Percentage of cycles spent in System Management Interrupts"
},
{
	"MetricGroup": "smi",
	"MetricName": "smi_num",
	"MetricExpr": "msr@smi@",
	"ScaleUnit": "1SMI#",
	"BriefDescription": "Number of SMI interrupts"
},
{
	"MetricGroup": "tma_L1_group",
	"MetricName": "tma_backend_bound",
	"MetricExpr": "1 - tma_frontend_bound - (UOPS_ISSUED.ANY + 4 * (INT_MISC.RECOVERY_CYCLES_ANY / 2 if #SMT_on else INT_MISC.RECOVERY_CYCLES)) / tma_info_thread_slots",
	"MetricThreshold": "tma_backend_bound > 0.2",
	"ScaleUnit": "100%",
	"BriefDescription": "This category represents fraction of slots where no uops are being delivered due to a lack of required resources for accepting new uops in the Backend",
	"PublicDescription": "This category represents fraction of slots where no uops are being delivered due to a lack of required resources for accepting new uops in the Backend. Backend is the portion of the processor core where the out-of-order scheduler dispatches ready uops into their respective execution units; and once completed these uops get retired according to program order. For example; stalls due to data-cache misses or stalls due to the divider unit being overloaded are both categorized under Backend Bound. Backend Bound is further divided into two main categories: Memory Bound and Core Bound"
},
{
	"MetricGroup": "tma_L1_group",
	"MetricName": "tma_bad_speculation",
	"MetricExpr": "(UOPS_ISSUED.ANY - UOPS_RETIRED.RETIRE_SLOTS + 4 * (INT_MISC.RECOVERY_CYCLES_ANY / 2 if #SMT_on else INT_MISC.RECOVERY_CYCLES)) / tma_info_thread_slots",
	"MetricThreshold": "tma_bad_speculation > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This category represents fraction of slots wasted due to incorrect speculations",
	"PublicDescription": "This category represents fraction of slots wasted due to incorrect speculations. This include slots used to issue uops that do not eventually get retired and slots for which the issue-pipeline was blocked due to recovery from earlier incorrect speculation. For example; wasted work due to miss-predicted branches are categorized under Bad Speculation category. Incorrect data speculation followed by Memory Ordering Nukes is another example"
},
{
	"MetricGroup": "tma_L1_group",
	"MetricName": "tma_frontend_bound",
	"MetricExpr": "IDQ_UOPS_NOT_DELIVERED.CORE / tma_info_thread_slots",
	"MetricThreshold": "tma_frontend_bound > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This category represents fraction of slots where the processor's Frontend undersupplies its Backend",
	"PublicDescription": "This category represents fraction of slots where the processor's Frontend undersupplies its Backend. Frontend denotes the first part of the processor core responsible to fetch operations that are executed later on by the Backend part. Within the Frontend; a branch predictor predicts the next address to fetch; cache-lines are fetched from the memory subsystem; parsed into instructions; and lastly decoded into micro-operations (uops). Ideally the Frontend can issue Pipeline_Width uops every cycle to the Backend. Frontend Bound denotes unutilized issue-slots when there is no Backend stall; i.e. bubbles where Frontend delivered no uops while Backend could have accepted them. For example; stalls due to instruction-cache misses would be categorized under Frontend Bound. Sample with: FRONTEND_RETIRED.LATENCY_GE_4_PS"
},
{
	"MetricGroup": "tma_L1_group",
	"MetricName": "tma_info_core_coreipc",
	"MetricExpr": "INST_RETIRED.ANY / tma_info_core_core_clks",
	"BriefDescription": "Instructions Per Cycle across hyper-threads (per physical core)"
},
{
	"MetricGroup": "tma_L1_group",
	"MetricName": "tma_info_inst_mix_instructions",
	"MetricExpr": "INST_RETIRED.ANY",
	"BriefDescription": "Total number of retired Instructions",
	"PublicDescription": "Total number of retired Instructions. Sample with: INST_RETIRED.PREC_DIST"
},
{
	"MetricGroup": "tma_L1_group",
	"MetricName": "tma_info_thread_slots",
	"MetricExpr": "4 * tma_info_core_core_clks",
	"BriefDescription": "Total issue-pipeline slots (per-Physical Core till ICL; per-Logical Processor ICL onward)"
},
{
	"MetricGroup": "tma_L1_group",
	"MetricName": "tma_retiring",
	"MetricExpr": "UOPS_RETIRED.RETIRE_SLOTS / tma_info_thread_slots",
	"MetricThreshold": "tma_retiring > 0.7 | tma_heavy_operations > 0.1",
	"ScaleUnit": "100%",
	"BriefDescription": "This category represents fraction of slots utilized by useful work i.e. issued uops that eventually get retired",
	"PublicDescription": "This category represents fraction of slots utilized by useful work i.e. issued uops that eventually get retired. Ideally; all pipeline slots would be attributed to the Retiring category.  Retiring of 100% would indicate the maximum Pipeline_Width throughput was achieved.  Maximizing Retiring typically increases the Instructions-per-cycle (see IPC metric). Note that a high Retiring value does not necessary mean there is no room for more performance.  For example; Heavy-operations or Microcode Assists are categorized under Retiring. They often indicate suboptimal performance and can often be optimized or avoided. Sample with: UOPS_RETIRED.RETIRE_SLOTS"
},
{
	"MetricGroup": "tma_L2_group",
	"MetricName": "tma_branch_mispredicts",
	"MetricExpr": "BR_MISP_RETIRED.ALL_BRANCHES / (BR_MISP_RETIRED.ALL_BRANCHES + MACHINE_CLEARS.COUNT) * tma_bad_speculation",
	"MetricThreshold": "tma_branch_mispredicts > 0.1 & tma_bad_speculation > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU has wasted due to Branch Misprediction",
	"PublicDescription": "This metric represents fraction of slots the CPU has wasted due to Branch Misprediction.  These slots are either wasted by uops fetched from an incorrectly speculated program path; or stalls when the out-of-order part of the machine needs to recover its state from a speculative path. Sample with: BR_MISP_RETIRED.ALL_BRANCHES. Related metrics: tma_info_bad_spec_branch_misprediction_cost, tma_info_bottleneck_mispredictions, tma_mispredicts_resteers"
},
{
	"MetricGroup": "tma_L2_group",
	"MetricName": "tma_core_bound",
	"MetricExpr": "tma_backend_bound - tma_memory_bound",
	"MetricThreshold": "tma_core_bound > 0.1 & tma_backend_bound > 0.2",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where Core non-memory issues were of a bottleneck",
	"PublicDescription": "This metric represents fraction of slots where Core non-memory issues were of a bottleneck.  Shortage in hardware compute resources; or dependencies in software's instructions are both categorized under Core Bound. Hence it may indicate the machine ran out of an out-of-order resource; certain execution units are overloaded or dependencies in program's data- or instruction-flow are limiting the performance (e.g. FP-chained long-latency arithmetic operations)"
},
{
	"MetricGroup": "tma_L2_group",
	"MetricName": "tma_fetch_bandwidth",
	"MetricExpr": "tma_frontend_bound - tma_fetch_latency",
	"MetricThreshold": "tma_fetch_bandwidth > 0.1 & tma_frontend_bound > 0.15 & tma_info_thread_ipc / 4 > 0.35",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend bandwidth issues",
	"PublicDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend bandwidth issues.  For example; inefficiencies at the instruction decoders; or restrictions for caching in the DSB (decoded uops cache) are categorized under Fetch Bandwidth. In such cases; the Frontend typically delivers suboptimal amount of uops to the Backend. Sample with: FRONTEND_RETIRED.LATENCY_GE_2_BUBBLES_GE_1_PS;FRONTEND_RETIRED.LATENCY_GE_1_PS;FRONTEND_RETIRED.LATENCY_GE_2_PS. Related metrics: tma_dsb_switches, tma_info_botlnk_l2_dsb_misses, tma_info_frontend_dsb_coverage, tma_info_inst_mix_iptb, tma_lcp"
},
{
	"MetricGroup": "tma_L2_group",
	"MetricName": "tma_fetch_latency",
	"MetricExpr": "4 * IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE / tma_info_thread_slots",
	"MetricThreshold": "tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend latency issues",
	"PublicDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend latency issues.  For example; instruction-cache misses; iTLB misses or fetch stalls after a branch misprediction are categorized under Frontend Latency. In such cases; the Frontend eventually delivers no uops for some period. Sample with: FRONTEND_RETIRED.LATENCY_GE_16_PS;FRONTEND_RETIRED.LATENCY_GE_8_PS"
},
{
	"MetricGroup": "tma_L2_group",
	"MetricName": "tma_heavy_operations",
	"MetricExpr": "(UOPS_RETIRED.RETIRE_SLOTS + UOPS_RETIRED.MACRO_FUSED - INST_RETIRED.ANY) / tma_info_thread_slots",
	"MetricThreshold": "tma_heavy_operations > 0.1",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring heavy-weight operations -- instructions that require two or more uops or micro-coded sequences",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring heavy-weight operations -- instructions that require two or more uops or micro-coded sequences. This highly-correlates with the uop length of these instructions/sequences"
},
{
	"MetricGroup": "tma_L2_group",
	"MetricName": "tma_light_operations",
	"MetricExpr": "tma_retiring - tma_heavy_operations",
	"MetricThreshold": "tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring light-weight operations -- instructions that require no more than one uop (micro-operation)",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring light-weight operations -- instructions that require no more than one uop (micro-operation). This correlates with total number of instructions used by the program. A uops-per-instruction (see UopPI metric) ratio of 1 or less should be expected for decently optimized software running on Intel Core/Xeon products. While this often indicates efficient X86 instructions were executed; high value does not necessarily mean better performance cannot be achieved. Sample with: INST_RETIRED.PREC_DIST"
},
{
	"MetricGroup": "tma_L2_group",
	"MetricName": "tma_machine_clears",
	"MetricExpr": "tma_bad_speculation - tma_branch_mispredicts",
	"MetricThreshold": "tma_machine_clears > 0.1 & tma_bad_speculation > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU has wasted due to Machine Clears",
	"PublicDescription": "This metric represents fraction of slots the CPU has wasted due to Machine Clears.  These slots are either wasted by uops fetched prior to the clear; or stalls the out-of-order portion of the machine needs to recover its state after the clear. For example; this can happen due to memory ordering Nukes (e.g. Memory Disambiguation) or Self-Modifying-Code (SMC) nukes. Sample with: MACHINE_CLEARS.COUNT. Related metrics: tma_clears_resteers, tma_contested_accesses, tma_data_sharing, tma_false_sharing, tma_l1_bound, tma_microcode_sequencer, tma_ms_switches, tma_remote_cache"
},
{
	"MetricGroup": "tma_L2_group",
	"MetricName": "tma_memory_bound",
	"MetricExpr": "(CYCLE_ACTIVITY.STALLS_MEM_ANY + EXE_ACTIVITY.BOUND_ON_STORES) / (CYCLE_ACTIVITY.STALLS_TOTAL + (EXE_ACTIVITY.1_PORTS_UTIL + tma_retiring * EXE_ACTIVITY.2_PORTS_UTIL) + EXE_ACTIVITY.BOUND_ON_STORES) * tma_backend_bound",
	"MetricThreshold": "tma_memory_bound > 0.2 & tma_backend_bound > 0.2",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the Memory subsystem within the Backend was a bottleneck",
	"PublicDescription": "This metric represents fraction of slots the Memory subsystem within the Backend was a bottleneck.  Memory Bound estimates fraction of slots where pipeline is likely stalled due to demand load or store instructions. This accounts mainly for (1) non-completed in-flight memory demand loads which coincides with execution units starvation; in addition to (2) cases where stores could impose backpressure on the pipeline when many of them get buffered at the same time (less common out of the two)"
},
{
	"MetricGroup": "tma_L3_group",
	"MetricName": "tma_branch_resteers",
	"MetricExpr": "INT_MISC.CLEAR_RESTEER_CYCLES / tma_info_thread_clks + tma_unknown_branches",
	"MetricThreshold": "tma_branch_resteers > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers. Branch Resteers estimates the Frontend delay in fetching operations from corrected path; following all sorts of miss-predicted branches. For example; branchy code with lots of miss-predictions might get categorized under Branch Resteers. Note the value of this node may overlap with its siblings. Sample with: BR_MISP_RETIRED.ALL_BRANCHES"
},
{
	"MetricGroup": "tma_L3_group",
	"MetricName": "tma_divider",
	"MetricExpr": "ARITH.DIVIDER_ACTIVE / tma_info_thread_clks",
	"MetricThreshold": "tma_divider > 0.2 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles where the Divider unit was active",
	"PublicDescription": "This metric represents fraction of cycles where the Divider unit was active. Divide and square root instructions are performed by the Divider unit and can take considerably longer latency than integer or Floating Point addition; subtraction; or multiplication. Sample with: ARITH.DIVIDER_ACTIVE"
},
{
	"MetricGroup": "tma_L3_group",
	"MetricName": "tma_dram_bound",
	"MetricExpr": "CYCLE_ACTIVITY.STALLS_L3_MISS / tma_info_thread_clks + (CYCLE_ACTIVITY.STALLS_L1D_MISS - CYCLE_ACTIVITY.STALLS_L2_MISS) / tma_info_thread_clks - tma_l2_bound",
	"MetricThreshold": "tma_dram_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled on accesses to external memory (DRAM) by loads",
	"PublicDescription": "This metric estimates how often the CPU was stalled on accesses to external memory (DRAM) by loads. Better caching can improve the latency and increase performance. Sample with: MEM_LOAD_RETIRED.L3_MISS_PS"
},
{
	"MetricGroup": "tma_L3_group",
	"MetricName": "tma_dsb",
	"MetricExpr": "(IDQ.ALL_DSB_CYCLES_ANY_UOPS - IDQ.ALL_DSB_CYCLES_4_UOPS) / tma_info_core_core_clks / 2",
	"MetricThreshold": "tma_dsb > 0.15 & (tma_fetch_bandwidth > 0.1 & tma_frontend_bound > 0.15 & tma_info_thread_ipc / 4 > 0.35)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles in which CPU was likely limited due to DSB (decoded uop cache) fetch pipeline",
	"PublicDescription": "This metric represents Core fraction of cycles in which CPU was likely limited due to DSB (decoded uop cache) fetch pipeline.  For example; inefficient utilization of the DSB cache structure or bank conflict when reading from it; are categorized here"
},
{
	"MetricGroup": "tma_L3_group",
	"MetricName": "tma_dsb_switches",
	"MetricExpr": "DSB2MITE_SWITCHES.PENALTY_CYCLES / tma_info_thread_clks",
	"MetricThreshold": "tma_dsb_switches > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to switches from DSB to MITE pipelines",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to switches from DSB to MITE pipelines. The DSB (decoded i-cache) is a Uop Cache where the front-end directly delivers Uops (micro operations) avoiding heavy x86 decoding. The DSB pipeline has shorter latency and delivered higher bandwidth than the MITE (legacy instruction decode pipeline). Switching between the two pipelines can cause penalties hence this metric measures the exposed penalty. Sample with: FRONTEND_RETIRED.DSB_MISS_PS. Related metrics: tma_fetch_bandwidth, tma_info_botlnk_l2_dsb_misses, tma_info_frontend_dsb_coverage, tma_info_inst_mix_iptb, tma_lcp"
},
{
	"MetricGroup": "tma_L3_group",
	"MetricName": "tma_few_uops_instructions",
	"MetricExpr": "tma_heavy_operations - tma_microcode_sequencer",
	"MetricThreshold": "tma_few_uops_instructions > 0.05 & tma_heavy_operations > 0.1",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring instructions that that are decoder into two or up to ([SNB+] four; [ADL+] five) uops",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring instructions that that are decoder into two or up to ([SNB+] four; [ADL+] five) uops. This highly-correlates with the number of uops in such instructions. Related metrics: tma_decoder0_alone"
},
{
	"MetricGroup": "tma_L3_group",
	"MetricName": "tma_fp_arith",
	"MetricExpr": "tma_x87_use + tma_fp_scalar + tma_fp_vector",
	"MetricThreshold": "tma_fp_arith > 0.2 & tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents overall arithmetic floating-point (FP) operations fraction the CPU has executed (retired)",
	"PublicDescription": "This metric represents overall arithmetic floating-point (FP) operations fraction the CPU has executed (retired). Note this metric's value may exceed its parent due to use of \"Uops\" CountDomain and FMA double-counting"
},
{
	"MetricGroup": "tma_L3_group",
	"MetricName": "tma_fused_instructions",
	"MetricExpr": "tma_light_operations * UOPS_RETIRED.MACRO_FUSED / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fused_instructions > 0.1 & tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring fused instructions -- where one uop can represent multiple contiguous instructions",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring fused instructions -- where one uop can represent multiple contiguous instructions. The instruction pairs of CMP+JCC or DEC+JCC are commonly used examples"
},
{
	"MetricGroup": "tma_L3_group",
	"MetricName": "tma_icache_misses",
	"MetricExpr": "(ICACHE_16B.IFDATA_STALL + 2 * cpu@ICACHE_16B.IFDATA_STALL\\,cmask\\=1\\,edge@) / tma_info_thread_clks",
	"MetricThreshold": "tma_icache_misses > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to instruction cache misses",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to instruction cache misses. Sample with: FRONTEND_RETIRED.L2_MISS_PS;FRONTEND_RETIRED.L1I_MISS_PS"
},
{
	"MetricGroup": "tma_L3_group",
	"MetricName": "tma_itlb_misses",
	"MetricExpr": "ICACHE_64B.IFTAG_STALL / tma_info_thread_clks",
	"MetricThreshold": "tma_itlb_misses > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Instruction TLB (ITLB) misses",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to Instruction TLB (ITLB) misses. Sample with: FRONTEND_RETIRED.STLB_MISS_PS;FRONTEND_RETIRED.ITLB_MISS_PS"
},
{
	"MetricGroup": "tma_L3_group",
	"MetricName": "tma_l1_bound",
	"MetricExpr": "max((CYCLE_ACTIVITY.STALLS_MEM_ANY - CYCLE_ACTIVITY.STALLS_L1D_MISS) / tma_info_thread_clks, 0)",
	"MetricThreshold": "tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled without loads missing the L1 data cache",
	"PublicDescription": "This metric estimates how often the CPU was stalled without loads missing the L1 data cache.  The L1 data cache typically has the shortest latency.  However; in certain cases like loads blocked on older stores; a load might suffer due to high latency even though it is being satisfied by the L1. Another example is loads who miss in the TLB. These cases are characterized by execution unit stalls; while some non-completed demand load lives in the machine without having that demand load missing the L1 cache. Sample with: MEM_LOAD_RETIRED.L1_HIT_PS;MEM_LOAD_RETIRED.FB_HIT_PS. Related metrics: tma_clears_resteers, tma_machine_clears, tma_microcode_sequencer, tma_ms_switches, tma_ports_utilized_1"
},
{
	"MetricGroup": "tma_L3_group",
	"MetricName": "tma_l2_bound",
	"MetricExpr": "MEM_LOAD_RETIRED.L2_HIT * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS) / (MEM_LOAD_RETIRED.L2_HIT * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS) + cpu@L1D_PEND_MISS.FB_FULL\\,cmask\\=1@) * ((CYCLE_ACTIVITY.STALLS_L1D_MISS - CYCLE_ACTIVITY.STALLS_L2_MISS) / tma_info_thread_clks)",
	"MetricThreshold": "tma_l2_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled due to L2 cache accesses by loads",
	"PublicDescription": "This metric estimates how often the CPU was stalled due to L2 cache accesses by loads.  Avoiding cache misses (i.e. L1 misses/L2 hits) can improve the latency and increase performance. Sample with: MEM_LOAD_RETIRED.L2_HIT_PS"
},
{
	"MetricGroup": "tma_L3_group",
	"MetricName": "tma_l3_bound",
	"MetricExpr": "(CYCLE_ACTIVITY.STALLS_L2_MISS - CYCLE_ACTIVITY.STALLS_L3_MISS) / tma_info_thread_clks",
	"MetricThreshold": "tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled due to loads accesses to L3 cache or contended with a sibling Core",
	"PublicDescription": "This metric estimates how often the CPU was stalled due to loads accesses to L3 cache or contended with a sibling Core.  Avoiding cache misses (i.e. L2 misses/L3 hits) can improve the latency and increase performance. Sample with: MEM_LOAD_RETIRED.L3_HIT_PS"
},
{
	"MetricGroup": "tma_L3_group",
	"MetricName": "tma_lcp",
	"MetricExpr": "ILD_STALL.LCP / tma_info_thread_clks",
	"MetricThreshold": "tma_lcp > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles CPU was stalled due to Length Changing Prefixes (LCPs)",
	"PublicDescription": "This metric represents fraction of cycles CPU was stalled due to Length Changing Prefixes (LCPs). Using proper compiler flags or Intel Compiler by default will certainly avoid this. #Link: Optimization Guide about LCP BKMs. Related metrics: tma_dsb_switches, tma_fetch_bandwidth, tma_info_botlnk_l2_dsb_misses, tma_info_frontend_dsb_coverage, tma_info_inst_mix_iptb"
},
{
	"MetricGroup": "tma_L3_group",
	"MetricName": "tma_memory_operations",
	"MetricExpr": "tma_light_operations * MEM_INST_RETIRED.ANY / INST_RETIRED.ANY",
	"MetricThreshold": "tma_memory_operations > 0.1 & tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring memory operations -- uops for memory load or store accesses"
},
{
	"MetricGroup": "tma_L3_group",
	"MetricName": "tma_microcode_sequencer",
	"MetricExpr": "UOPS_RETIRED.RETIRE_SLOTS / UOPS_ISSUED.ANY * IDQ.MS_UOPS / tma_info_thread_slots",
	"MetricThreshold": "tma_microcode_sequencer > 0.05 & tma_heavy_operations > 0.1",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU was retiring uops fetched by the Microcode Sequencer (MS) unit",
	"PublicDescription": "This metric represents fraction of slots the CPU was retiring uops fetched by the Microcode Sequencer (MS) unit.  The MS is used for CISC instructions not supported by the default decoders (like repeat move strings; or CPUID); or by microcode assists used to address some operation modes (like in Floating Point assists). These cases can often be avoided. Sample with: IDQ.MS_UOPS. Related metrics: tma_clears_resteers, tma_l1_bound, tma_machine_clears, tma_ms_switches"
},
{
	"MetricGroup": "tma_L3_group",
	"MetricName": "tma_mite",
	"MetricExpr": "(IDQ.ALL_MITE_CYCLES_ANY_UOPS - IDQ.ALL_MITE_CYCLES_4_UOPS) / tma_info_core_core_clks / 2",
	"MetricThreshold": "tma_mite > 0.1 & (tma_fetch_bandwidth > 0.1 & tma_frontend_bound > 0.15 & tma_info_thread_ipc / 4 > 0.35)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles in which CPU was likely limited due to the MITE pipeline (the legacy decode pipeline)",
	"PublicDescription": "This metric represents Core fraction of cycles in which CPU was likely limited due to the MITE pipeline (the legacy decode pipeline). This pipeline is used for code that was not pre-cached in the DSB or LSD. For example; inefficiencies due to asymmetric decoders; use of long immediate or LCP can manifest as MITE fetch bandwidth bottleneck. Sample with: FRONTEND_RETIRED.ANY_DSB_MISS"
},
{
	"MetricGroup": "tma_L3_group",
	"MetricName": "tma_ms_switches",
	"MetricExpr": "2 * IDQ.MS_SWITCHES / tma_info_thread_clks",
	"MetricThreshold": "tma_ms_switches > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates the fraction of cycles when the CPU was stalled due to switches of uop delivery to the Microcode Sequencer (MS)",
	"PublicDescription": "This metric estimates the fraction of cycles when the CPU was stalled due to switches of uop delivery to the Microcode Sequencer (MS). Commonly used instructions are optimized for delivery by the DSB (decoded i-cache) or MITE (legacy instruction decode) pipelines. Certain operations cannot be handled natively by the execution pipeline; and must be performed by microcode (small programs injected into the execution stream). Switching to the MS too often can negatively impact performance. The MS is designated to deliver long uop flows required by CISC instructions like CPUID; or uncommon conditions like Floating Point Assists when dealing with Denormals. Sample with: IDQ.MS_SWITCHES. Related metrics: tma_clears_resteers, tma_l1_bound, tma_machine_clears, tma_microcode_sequencer, tma_mixing_vectors, tma_serializing_operation"
},
{
	"MetricGroup": "tma_L3_group",
	"MetricName": "tma_non_fused_branches",
	"MetricExpr": "tma_light_operations * (BR_INST_RETIRED.ALL_BRANCHES - UOPS_RETIRED.MACRO_FUSED) / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_non_fused_branches > 0.1 & tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring branch instructions that were not fused",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring branch instructions that were not fused. Non-conditional branches like direct JMP or CALL would count here. Can be used to examine fusible conditional jumps that were not fused"
},
{
	"MetricGroup": "tma_L3_group",
	"MetricName": "tma_nop_instructions",
	"MetricExpr": "tma_light_operations * INST_RETIRED.NOP / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_nop_instructions > 0.1 & tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring NOP (no op) instructions",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring NOP (no op) instructions. Compilers often use NOPs for certain address alignments - e.g. start address of a function or loop body. Sample with: INST_RETIRED.NOP"
},
{
	"MetricGroup": "tma_L3_group",
	"MetricName": "tma_other_light_ops",
	"MetricExpr": "max(0, tma_light_operations - (tma_fp_arith + tma_memory_operations + tma_fused_instructions + tma_non_fused_branches + tma_nop_instructions))",
	"MetricThreshold": "tma_other_light_ops > 0.3 & tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents the remaining light uops fraction the CPU has executed - remaining means not covered by other sibling nodes",
	"PublicDescription": "This metric represents the remaining light uops fraction the CPU has executed - remaining means not covered by other sibling nodes. May undercount due to FMA double counting"
},
{
	"MetricGroup": "tma_L3_group",
	"MetricName": "tma_ports_utilization",
	"MetricExpr": "((EXE_ACTIVITY.EXE_BOUND_0_PORTS + (EXE_ACTIVITY.1_PORTS_UTIL + tma_retiring * EXE_ACTIVITY.2_PORTS_UTIL)) / tma_info_thread_clks if ARITH.DIVIDER_ACTIVE < CYCLE_ACTIVITY.STALLS_TOTAL - CYCLE_ACTIVITY.STALLS_MEM_ANY else (EXE_ACTIVITY.1_PORTS_UTIL + tma_retiring * EXE_ACTIVITY.2_PORTS_UTIL) / tma_info_thread_clks)",
	"MetricThreshold": "tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles the CPU performance was potentially limited due to Core computation issues (non divider-related)",
	"PublicDescription": "This metric estimates fraction of cycles the CPU performance was potentially limited due to Core computation issues (non divider-related).  Two distinct categories can be attributed into this metric: (1) heavy data-dependency among contiguous instructions would manifest in this metric - such cases are often referred to as low Instruction Level Parallelism (ILP). (2) Contention on some hardware execution unit other than Divider. For example; when there are too many multiply operations"
},
{
	"MetricGroup": "tma_L3_group",
	"MetricName": "tma_store_bound",
	"MetricExpr": "EXE_ACTIVITY.BOUND_ON_STORES / tma_info_thread_clks",
	"MetricThreshold": "tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often CPU was stalled  due to RFO store memory accesses; RFO store issue a read-for-ownership request before the write",
	"PublicDescription": "This metric estimates how often CPU was stalled  due to RFO store memory accesses; RFO store issue a read-for-ownership request before the write. Even though store accesses do not typically stall out-of-order CPUs; there are few cases where stores can lead to actual stalls. This metric will be flagged should RFO stores be a bottleneck. Sample with: MEM_INST_RETIRED.ALL_STORES_PS"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_4k_aliasing",
	"MetricExpr": "LD_BLOCKS_PARTIAL.ADDRESS_ALIAS / tma_info_thread_clks",
	"MetricThreshold": "tma_4k_aliasing > 0.2 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often memory load accesses were aliased by preceding stores (in program order) with a 4K address offset",
	"PublicDescription": "This metric estimates how often memory load accesses were aliased by preceding stores (in program order) with a 4K address offset. False match is possible; which incur a few cycles load re-issue. However; the short re-issue duration is often hidden by the out-of-order core and HW optimizations; hence a user may safely ignore a high value of this metric unless it manages to propagate up into parent nodes of the hierarchy (e.g. to L1_Bound)"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_assists",
	"MetricExpr": "100 * (FP_ASSIST.ANY + OTHER_ASSISTS.ANY) / tma_info_thread_slots",
	"MetricThreshold": "tma_assists > 0.1 & (tma_microcode_sequencer > 0.05 & tma_heavy_operations > 0.1)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of slots the CPU retired uops delivered by the Microcode_Sequencer as a result of Assists",
	"PublicDescription": "This metric estimates fraction of slots the CPU retired uops delivered by the Microcode_Sequencer as a result of Assists. Assists are long sequences of uops that are required in certain corner-cases for operations that cannot be handled natively by the execution pipeline. For example; when working with very small floating point values (so-called Denormals); the FP units are not set up to perform these operations natively. Instead; a sequence of instructions to perform the computation on the Denormals is injected into the pipeline. Since these microcode sequences might be dozens of uops long; Assists can be extremely deleterious to performance and they can be avoided in many cases. Sample with: OTHER_ASSISTS.ANY"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_cisc",
	"MetricExpr": "max(0, tma_microcode_sequencer - tma_assists)",
	"MetricThreshold": "tma_cisc > 0.1 & (tma_microcode_sequencer > 0.05 & tma_heavy_operations > 0.1)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles the CPU retired uops originated from CISC (complex instruction set computer) instruction",
	"PublicDescription": "This metric estimates fraction of cycles the CPU retired uops originated from CISC (complex instruction set computer) instruction. A CISC instruction has multiple uops that are required to perform the instruction's functionality as in the case of read-modify-write as an example. Since these instructions require multiple uops they may or may not imply sub-optimal use of machine resources"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_clears_resteers",
	"MetricExpr": "(1 - BR_MISP_RETIRED.ALL_BRANCHES / (BR_MISP_RETIRED.ALL_BRANCHES + MACHINE_CLEARS.COUNT)) * INT_MISC.CLEAR_RESTEER_CYCLES / tma_info_thread_clks",
	"MetricThreshold": "tma_clears_resteers > 0.05 & (tma_branch_resteers > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Machine Clears",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Machine Clears. Sample with: INT_MISC.CLEAR_RESTEER_CYCLES. Related metrics: tma_l1_bound, tma_machine_clears, tma_microcode_sequencer, tma_ms_switches"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_contested_accesses",
	"MetricExpr": "(18.5 * tma_info_system_average_frequency * MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM + 16.5 * tma_info_system_average_frequency * MEM_LOAD_L3_HIT_RETIRED.XSNP_MISS) * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS / 2) / tma_info_thread_clks",
	"MetricThreshold": "tma_contested_accesses > 0.05 & (tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to contested accesses",
	"PublicDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to contested accesses. Contested accesses occur when data written by one Logical Processor are read by another Logical Processor on a different Physical Core. Examples of contested accesses include synchronizations such as locks; true data sharing such as modified locked variables; and false sharing. Sample with: MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM_PS;MEM_LOAD_L3_HIT_RETIRED.XSNP_MISS_PS. Related metrics: tma_data_sharing, tma_false_sharing, tma_machine_clears, tma_remote_cache"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_data_sharing",
	"MetricExpr": "16.5 * tma_info_system_average_frequency * MEM_LOAD_L3_HIT_RETIRED.XSNP_HIT * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS / 2) / tma_info_thread_clks",
	"MetricThreshold": "tma_data_sharing > 0.05 & (tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to data-sharing accesses",
	"PublicDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to data-sharing accesses. Data shared by multiple Logical Processors (even just read shared) may cause increased access latency due to cache coherency. Excessive data sharing can drastically harm multithreaded performance. Sample with: MEM_LOAD_L3_HIT_RETIRED.XSNP_HIT_PS. Related metrics: tma_contested_accesses, tma_false_sharing, tma_machine_clears, tma_remote_cache"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_decoder0_alone",
	"MetricExpr": "(cpu@INST_DECODED.DECODERS\\,cmask\\=1@ - cpu@INST_DECODED.DECODERS\\,cmask\\=2@) / tma_info_core_core_clks / 2",
	"MetricThreshold": "tma_decoder0_alone > 0.1 & (tma_mite > 0.1 & (tma_fetch_bandwidth > 0.1 & tma_frontend_bound > 0.15 & tma_info_thread_ipc / 4 > 0.35))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles where decoder-0 was the only active decoder",
	"PublicDescription": "This metric represents fraction of cycles where decoder-0 was the only active decoder. Related metrics: tma_few_uops_instructions"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_dtlb_load",
	"MetricExpr": "min(9 * cpu@DTLB_LOAD_MISSES.STLB_HIT\\,cmask\\=1@ + DTLB_LOAD_MISSES.WALK_ACTIVE, max(CYCLE_ACTIVITY.CYCLES_MEM_ANY - CYCLE_ACTIVITY.CYCLES_L1D_MISS, 0)) / tma_info_thread_clks",
	"MetricThreshold": "tma_dtlb_load > 0.1 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates the fraction of cycles where the Data TLB (DTLB) was missed by load accesses",
	"PublicDescription": "This metric roughly estimates the fraction of cycles where the Data TLB (DTLB) was missed by load accesses. TLBs (Translation Look-aside Buffers) are processor caches for recently used entries out of the Page Tables that are used to map virtual- to physical-addresses by the operating system. This metric approximates the potential delay of demand loads missing the first-level data TLB (assuming worst case scenario with back to back misses to different pages). This includes hitting in the second-level TLB (STLB) as well as performing a hardware page walk on an STLB miss. Sample with: MEM_INST_RETIRED.STLB_MISS_LOADS_PS. Related metrics: tma_dtlb_store, tma_info_bottleneck_memory_data_tlbs"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_dtlb_store",
	"MetricExpr": "(9 * cpu@DTLB_STORE_MISSES.STLB_HIT\\,cmask\\=1@ + DTLB_STORE_MISSES.WALK_ACTIVE) / tma_info_core_core_clks",
	"MetricThreshold": "tma_dtlb_store > 0.05 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates the fraction of cycles spent handling first-level data TLB store misses",
	"PublicDescription": "This metric roughly estimates the fraction of cycles spent handling first-level data TLB store misses.  As with ordinary data caching; focus on improving data locality and reducing working-set size to reduce DTLB overhead.  Additionally; consider using profile-guided optimization (PGO) to collocate frequently-used data on the same page.  Try using larger page sizes for large amounts of frequently-used data. Sample with: MEM_INST_RETIRED.STLB_MISS_STORES_PS. Related metrics: tma_dtlb_load, tma_info_bottleneck_memory_data_tlbs"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_false_sharing",
	"MetricExpr": "22 * tma_info_system_average_frequency * OFFCORE_RESPONSE.DEMAND_RFO.L3_HIT.SNOOP_HITM / tma_info_thread_clks",
	"MetricThreshold": "tma_false_sharing > 0.05 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates how often CPU was handling synchronizations due to False Sharing",
	"PublicDescription": "This metric roughly estimates how often CPU was handling synchronizations due to False Sharing. False Sharing is a multithreading hiccup; where multiple Logical Processors contend on different data-elements mapped into the same cache line. Sample with: MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM_PS;OFFCORE_RESPONSE.DEMAND_RFO.L3_HIT.SNOOP_HITM. Related metrics: tma_contested_accesses, tma_data_sharing, tma_machine_clears, tma_remote_cache"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_fb_full",
	"MetricExpr": "tma_info_memory_load_miss_real_latency * cpu@L1D_PEND_MISS.FB_FULL\\,cmask\\=1@ / tma_info_thread_clks",
	"MetricThreshold": "tma_fb_full > 0.3",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric does a *rough estimation* of how often L1D Fill Buffer unavailability limited additional L1D miss memory access requests to proceed",
	"PublicDescription": "This metric does a *rough estimation* of how often L1D Fill Buffer unavailability limited additional L1D miss memory access requests to proceed. The higher the metric value; the deeper the memory hierarchy level the misses are satisfied from (metric values >1 are valid). Often it hints on approaching bandwidth limits (to L2 cache; L3 cache or external memory). Related metrics: tma_info_bottleneck_memory_bandwidth, tma_info_system_dram_bw_use, tma_mem_bandwidth, tma_sq_full, tma_store_latency, tma_streaming_stores"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_fp_scalar",
	"MetricExpr": "cpu@FP_ARITH_INST_RETIRED.SCALAR_SINGLE\\,umask\\=0x03@ / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fp_scalar > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric approximates arithmetic floating-point (FP) scalar uops fraction the CPU has retired",
	"PublicDescription": "This metric approximates arithmetic floating-point (FP) scalar uops fraction the CPU has retired. May overcount due to FMA double counting. Related metrics: tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_fp_vector",
	"MetricExpr": "cpu@FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE\\,umask\\=0x3c@ / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fp_vector > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric approximates arithmetic floating-point (FP) vector uops fraction the CPU has retired aggregated across all vector widths",
	"PublicDescription": "This metric approximates arithmetic floating-point (FP) vector uops fraction the CPU has retired aggregated across all vector widths. May overcount due to FMA double counting. Related metrics: tma_fp_scalar, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_l3_hit_latency",
	"MetricExpr": "6.5 * tma_info_system_average_frequency * MEM_LOAD_RETIRED.L3_HIT * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS / 2) / tma_info_thread_clks",
	"MetricThreshold": "tma_l3_hit_latency > 0.1 & (tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles with demand load accesses that hit the L3 cache under unloaded scenarios (possibly L3 latency limited)",
	"PublicDescription": "This metric represents fraction of cycles with demand load accesses that hit the L3 cache under unloaded scenarios (possibly L3 latency limited).  Avoiding private cache misses (i.e. L2 misses/L3 hits) will improve the latency; reduce contention with sibling physical cores and increase performance.  Note the value of this node may overlap with its siblings. Sample with: MEM_LOAD_RETIRED.L3_HIT_PS. Related metrics: tma_info_bottleneck_memory_latency, tma_mem_latency"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_lock_latency",
	"MetricExpr": "(12 * max(0, MEM_INST_RETIRED.LOCK_LOADS - L2_RQSTS.ALL_RFO) + MEM_INST_RETIRED.LOCK_LOADS / MEM_INST_RETIRED.ALL_STORES * (9 * L2_RQSTS.RFO_HIT + min(CPU_CLK_UNHALTED.THREAD, OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_RFO))) / tma_info_thread_clks",
	"MetricThreshold": "tma_lock_latency > 0.2 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU spent handling cache misses due to lock operations",
	"PublicDescription": "This metric represents fraction of cycles the CPU spent handling cache misses due to lock operations. Due to the microarchitecture handling of locks; they are classified as L1_Bound regardless of what memory source satisfied them. Sample with: MEM_INST_RETIRED.LOCK_LOADS_PS. Related metrics: tma_store_latency"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_mem_bandwidth",
	"MetricExpr": "min(CPU_CLK_UNHALTED.THREAD, cpu@OFFCORE_REQUESTS_OUTSTANDING.ALL_DATA_RD\\,cmask\\=4@) / tma_info_thread_clks",
	"MetricThreshold": "tma_mem_bandwidth > 0.2 & (tma_dram_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles where the core's performance was likely hurt due to approaching bandwidth limits of external memory (DRAM)",
	"PublicDescription": "This metric estimates fraction of cycles where the core's performance was likely hurt due to approaching bandwidth limits of external memory (DRAM).  The underlying heuristic assumes that a similar off-core traffic is generated by all IA cores. This metric does not aggregate non-data-read requests by this logical processor; requests from other IA Logical Processors/Physical Cores/sockets; or other non-IA devices like GPU; hence the maximum external memory bandwidth limits may or may not be approached when this metric is flagged (see Uncore counters for that). Related metrics: tma_fb_full, tma_info_bottleneck_memory_bandwidth, tma_info_system_dram_bw_use, tma_sq_full"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_mem_latency",
	"MetricExpr": "min(CPU_CLK_UNHALTED.THREAD, OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DATA_RD) / tma_info_thread_clks - tma_mem_bandwidth",
	"MetricThreshold": "tma_mem_latency > 0.1 & (tma_dram_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles where the performance was likely hurt due to latency from external memory (DRAM)",
	"PublicDescription": "This metric estimates fraction of cycles where the performance was likely hurt due to latency from external memory (DRAM).  This metric does not aggregate requests from other Logical Processors/Physical Cores/sockets (see Uncore counters for that). Related metrics: tma_info_bottleneck_memory_latency, tma_l3_hit_latency"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_mispredicts_resteers",
	"MetricExpr": "BR_MISP_RETIRED.ALL_BRANCHES / (BR_MISP_RETIRED.ALL_BRANCHES + MACHINE_CLEARS.COUNT) * INT_MISC.CLEAR_RESTEER_CYCLES / tma_info_thread_clks",
	"MetricThreshold": "tma_mispredicts_resteers > 0.05 & (tma_branch_resteers > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Branch Misprediction at execution stage",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Branch Misprediction at execution stage. Sample with: INT_MISC.CLEAR_RESTEER_CYCLES. Related metrics: tma_branch_mispredicts, tma_info_bad_spec_branch_misprediction_cost, tma_info_bottleneck_mispredictions"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_ports_utilized_0",
	"MetricExpr": "(UOPS_EXECUTED.CORE_CYCLES_NONE / 2 if #SMT_on else CYCLE_ACTIVITY.STALLS_TOTAL - CYCLE_ACTIVITY.STALLS_MEM_ANY) / tma_info_core_core_clks",
	"MetricThreshold": "tma_ports_utilized_0 > 0.2 & (tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles CPU executed no uops on any execution port (Logical Processor cycles since ICL, Physical Core cycles otherwise)",
	"PublicDescription": "This metric represents fraction of cycles CPU executed no uops on any execution port (Logical Processor cycles since ICL, Physical Core cycles otherwise). Long-latency instructions like divides may contribute to this metric"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_ports_utilized_1",
	"MetricExpr": "((UOPS_EXECUTED.CORE_CYCLES_GE_1 - UOPS_EXECUTED.CORE_CYCLES_GE_2) / 2 if #SMT_on else EXE_ACTIVITY.1_PORTS_UTIL) / tma_info_core_core_clks",
	"MetricThreshold": "tma_ports_utilized_1 > 0.2 & (tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles where the CPU executed total of 1 uop per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise)",
	"PublicDescription": "This metric represents fraction of cycles where the CPU executed total of 1 uop per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise). This can be due to heavy data-dependency among software instructions; or over oversubscribing a particular hardware resource. In some other cases with high 1_Port_Utilized and L1_Bound; this metric can point to L1 data-cache latency bottleneck that may not necessarily manifest with complete execution starvation (due to the short L1 latency e.g. walking a linked list) - looking at the assembly can be helpful. Related metrics: tma_l1_bound"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_ports_utilized_2",
	"MetricExpr": "((UOPS_EXECUTED.CORE_CYCLES_GE_2 - UOPS_EXECUTED.CORE_CYCLES_GE_3) / 2 if #SMT_on else EXE_ACTIVITY.2_PORTS_UTIL) / tma_info_core_core_clks",
	"MetricThreshold": "tma_ports_utilized_2 > 0.15 & (tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles CPU executed total of 2 uops per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise)",
	"PublicDescription": "This metric represents fraction of cycles CPU executed total of 2 uops per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise).  Loop Vectorization -most compilers feature auto-Vectorization options today- reduces pressure on the execution ports as multiple elements are calculated with same uop. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_ports_utilized_3m",
	"MetricExpr": "(UOPS_EXECUTED.CORE_CYCLES_GE_3 / 2 if #SMT_on else UOPS_EXECUTED.CORE_CYCLES_GE_3) / tma_info_core_core_clks",
	"MetricThreshold": "tma_ports_utilized_3m > 0.7 & (tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles CPU executed total of 3 or more uops per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise)"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_split_loads",
	"MetricExpr": "tma_info_memory_load_miss_real_latency * LD_BLOCKS.NO_SR / tma_info_thread_clks",
	"MetricThreshold": "tma_split_loads > 0.2 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles handling memory load split accesses - load that cross 64-byte cache line boundary",
	"PublicDescription": "This metric estimates fraction of cycles handling memory load split accesses - load that cross 64-byte cache line boundary. Sample with: MEM_INST_RETIRED.SPLIT_LOADS_PS"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_split_stores",
	"MetricExpr": "MEM_INST_RETIRED.SPLIT_STORES / tma_info_core_core_clks",
	"MetricThreshold": "tma_split_stores > 0.2 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents rate of split store accesses",
	"PublicDescription": "This metric represents rate of split store accesses.  Consider aligning your data to the 64-byte cache line granularity. Sample with: MEM_INST_RETIRED.SPLIT_STORES_PS. Related metrics: tma_port_4"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_sq_full",
	"MetricExpr": "(OFFCORE_REQUESTS_BUFFER.SQ_FULL / 2 if #SMT_on else OFFCORE_REQUESTS_BUFFER.SQ_FULL) / tma_info_core_core_clks",
	"MetricThreshold": "tma_sq_full > 0.3 & (tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric measures fraction of cycles where the Super Queue (SQ) was full taking into account all request-types and both hardware SMT threads (Logical Processors)",
	"PublicDescription": "This metric measures fraction of cycles where the Super Queue (SQ) was full taking into account all request-types and both hardware SMT threads (Logical Processors). Related metrics: tma_fb_full, tma_info_bottleneck_memory_bandwidth, tma_info_system_dram_bw_use, tma_mem_bandwidth"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_store_fwd_blk",
	"MetricExpr": "13 * LD_BLOCKS.STORE_FORWARD / tma_info_thread_clks",
	"MetricThreshold": "tma_store_fwd_blk > 0.1 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates fraction of cycles when the memory subsystem had loads blocked since they could not forward data from earlier (in program order) overlapping stores",
	"PublicDescription": "This metric roughly estimates fraction of cycles when the memory subsystem had loads blocked since they could not forward data from earlier (in program order) overlapping stores. To streamline memory operations in the pipeline; a load can avoid waiting for memory if a prior in-flight store is writing the data that the load wants to read (store forwarding process). However; in some cases the load may be blocked for a significant time pending the store forward. For example; when the prior store is writing a smaller region than the load is reading"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_store_latency",
	"MetricExpr": "(L2_RQSTS.RFO_HIT * 9 * (1 - MEM_INST_RETIRED.LOCK_LOADS / MEM_INST_RETIRED.ALL_STORES) + (1 - MEM_INST_RETIRED.LOCK_LOADS / MEM_INST_RETIRED.ALL_STORES) * min(CPU_CLK_UNHALTED.THREAD, OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_RFO)) / tma_info_thread_clks",
	"MetricThreshold": "tma_store_latency > 0.1 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles the CPU spent handling L1D store misses",
	"PublicDescription": "This metric estimates fraction of cycles the CPU spent handling L1D store misses. Store accesses usually less impact out-of-order core performance; however; holding resources for longer time can lead into undesired implications (e.g. contention on L1D fill-buffer entries - see FB_Full). Related metrics: tma_fb_full, tma_lock_latency"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_unknown_branches",
	"MetricExpr": "9 * BACLEARS.ANY / tma_info_thread_clks",
	"MetricThreshold": "tma_unknown_branches > 0.05 & (tma_branch_resteers > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to new branch address clears",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to new branch address clears. These are fetched branches the Branch Prediction Unit was unable to recognize (e.g. first time the branch is fetched or hitting BTB capacity limit). Sample with: BACLEARS.ANY"
},
{
	"MetricGroup": "tma_L4_group",
	"MetricName": "tma_x87_use",
	"MetricExpr": "tma_retiring * UOPS_EXECUTED.X87 / UOPS_EXECUTED.THREAD",
	"MetricThreshold": "tma_x87_use > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric serves as an approximation of legacy x87 usage",
	"PublicDescription": "This metric serves as an approximation of legacy x87 usage. It accounts for instructions beyond X87 FP arithmetic operations; hence may be used as a thermometer to avoid X87 high usage and preferably upgrade to modern ISA. See Tip under Tuning Hint"
},
{
	"MetricGroup": "tma_L5_group",
	"MetricName": "tma_alu_op_utilization",
	"MetricExpr": "(UOPS_DISPATCHED_PORT.PORT_0 + UOPS_DISPATCHED_PORT.PORT_1 + UOPS_DISPATCHED_PORT.PORT_5 + UOPS_DISPATCHED_PORT.PORT_6) / tma_info_thread_slots",
	"MetricThreshold": "tma_alu_op_utilization > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution ports for ALU operations"
},
{
	"MetricGroup": "tma_L5_group",
	"MetricName": "tma_fp_vector_128b",
	"MetricExpr": "(FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE + FP_ARITH_INST_RETIRED.128B_PACKED_SINGLE) / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fp_vector_128b > 0.1 & (tma_fp_vector > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 128-bit wide vectors",
	"PublicDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 128-bit wide vectors. May overcount due to FMA double counting. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "tma_L5_group",
	"MetricName": "tma_fp_vector_256b",
	"MetricExpr": "(FP_ARITH_INST_RETIRED.256B_PACKED_DOUBLE + FP_ARITH_INST_RETIRED.256B_PACKED_SINGLE) / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fp_vector_256b > 0.1 & (tma_fp_vector > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 256-bit wide vectors",
	"PublicDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 256-bit wide vectors. May overcount due to FMA double counting. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "tma_L5_group",
	"MetricName": "tma_load_op_utilization",
	"MetricExpr": "(UOPS_DISPATCHED_PORT.PORT_2 + UOPS_DISPATCHED_PORT.PORT_3 + UOPS_DISPATCHED_PORT.PORT_7 - UOPS_DISPATCHED_PORT.PORT_4) / (2 * tma_info_core_core_clks)",
	"MetricThreshold": "tma_load_op_utilization > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port for Load operations",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port for Load operations. Sample with: UOPS_DISPATCHED.PORT_2_3"
},
{
	"MetricGroup": "tma_L5_group",
	"MetricName": "tma_load_stlb_hit",
	"MetricExpr": "tma_dtlb_load - tma_load_stlb_miss",
	"MetricThreshold": "tma_load_stlb_hit > 0.05 & (tma_dtlb_load > 0.1 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates the fraction of cycles where the (first level) DTLB was missed by load accesses, that later on hit in second-level TLB (STLB)"
},
{
	"MetricGroup": "tma_L5_group",
	"MetricName": "tma_load_stlb_miss",
	"MetricExpr": "DTLB_LOAD_MISSES.WALK_ACTIVE / tma_info_thread_clks",
	"MetricThreshold": "tma_load_stlb_miss > 0.05 & (tma_dtlb_load > 0.1 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates the fraction of cycles where the Second-level TLB (STLB) was missed by load accesses, performing a hardware page walk"
},
{
	"MetricGroup": "tma_L5_group",
	"MetricName": "tma_mixing_vectors",
	"MetricExpr": "UOPS_ISSUED.VECTOR_WIDTH_MISMATCH / UOPS_ISSUED.ANY",
	"MetricThreshold": "tma_mixing_vectors > 0.05",
	"ScaleUnit": "100%",
	"BriefDescription": "The Mixing_Vectors metric gives the percentage of injected blend uops out of all uops issued",
	"PublicDescription": "The Mixing_Vectors metric gives the percentage of injected blend uops out of all uops issued. Usually a Mixing_Vectors over 5% is worth investigating. Read more in Appendix B1 of the Optimizations Guide for this topic. Related metrics: tma_ms_switches"
},
{
	"MetricGroup": "tma_L5_group",
	"MetricName": "tma_serializing_operation",
	"MetricExpr": "PARTIAL_RAT_STALLS.SCOREBOARD / tma_info_thread_clks",
	"MetricThreshold": "tma_serializing_operation > 0.1 & (tma_ports_utilized_0 > 0.2 & (tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2)))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU issue-pipeline was stalled due to serializing operations",
	"PublicDescription": "This metric represents fraction of cycles the CPU issue-pipeline was stalled due to serializing operations. Instructions like CPUID; WRMSR or LFENCE serialize the out-of-order execution which may limit performance. Sample with: PARTIAL_RAT_STALLS.SCOREBOARD. Related metrics: tma_ms_switches"
},
{
	"MetricGroup": "tma_L5_group",
	"MetricName": "tma_store_op_utilization",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_4 / tma_info_core_core_clks",
	"MetricThreshold": "tma_store_op_utilization > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port for Store operations"
},
{
	"MetricGroup": "tma_L5_group",
	"MetricName": "tma_store_stlb_hit",
	"MetricExpr": "tma_dtlb_store - tma_store_stlb_miss",
	"MetricThreshold": "tma_store_stlb_hit > 0.05 & (tma_dtlb_store > 0.05 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates the fraction of cycles where the TLB was missed by store accesses, hitting in the second-level TLB (STLB)"
},
{
	"MetricGroup": "tma_L5_group",
	"MetricName": "tma_store_stlb_miss",
	"MetricExpr": "DTLB_STORE_MISSES.WALK_ACTIVE / tma_info_core_core_clks",
	"MetricThreshold": "tma_store_stlb_miss > 0.05 & (tma_dtlb_store > 0.05 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates the fraction of cycles where the STLB was missed by store accesses, performing a hardware page walk"
},
{
	"MetricGroup": "tma_L6_group",
	"MetricName": "tma_port_0",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_0 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_0 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 0 ([SNB+] ALU; [HSW+] ALU and 2nd branch)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 0 ([SNB+] ALU; [HSW+] ALU and 2nd branch). Sample with: UOPS_DISPATCHED_PORT.PORT_0. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "tma_L6_group",
	"MetricName": "tma_port_1",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_1 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_1 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 1 (ALU)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 1 (ALU). Sample with: UOPS_DISPATCHED_PORT.PORT_1. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "tma_L6_group",
	"MetricName": "tma_port_2",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_2 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_2 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 2 ([SNB+]Loads and Store-address; [ICL+] Loads)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 2 ([SNB+]Loads and Store-address; [ICL+] Loads). Sample with: UOPS_DISPATCHED_PORT.PORT_2"
},
{
	"MetricGroup": "tma_L6_group",
	"MetricName": "tma_port_3",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_3 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_3 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 3 ([SNB+]Loads and Store-address; [ICL+] Loads)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 3 ([SNB+]Loads and Store-address; [ICL+] Loads). Sample with: UOPS_DISPATCHED_PORT.PORT_3"
},
{
	"MetricGroup": "tma_L6_group",
	"MetricName": "tma_port_4",
	"MetricExpr": "tma_store_op_utilization",
	"MetricThreshold": "tma_port_4 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 4 (Store-data)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 4 (Store-data). Sample with: UOPS_DISPATCHED_PORT.PORT_4. Related metrics: tma_split_stores"
},
{
	"MetricGroup": "tma_L6_group",
	"MetricName": "tma_port_5",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_5 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_5 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 5 ([SNB+] Branches and ALU; [HSW+] ALU)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 5 ([SNB+] Branches and ALU; [HSW+] ALU). Sample with: UOPS_DISPATCHED.PORT_5. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "tma_L6_group",
	"MetricName": "tma_port_6",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_6 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_6 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 6 ([HSW+]Primary Branch and simple ALU)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 6 ([HSW+]Primary Branch and simple ALU). Sample with: UOPS_DISPATCHED_PORT.PORT_6. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_ports_utilized_2"
},
{
	"MetricGroup": "tma_L6_group",
	"MetricName": "tma_port_7",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_7 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_7 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 7 ([HSW+]simple Store-address)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 7 ([HSW+]simple Store-address). Sample with: UOPS_DISPATCHED_PORT.PORT_7"
},
{
	"MetricGroup": "tma_alu_op_utilization_group",
	"MetricName": "tma_port_0",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_0 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_0 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 0 ([SNB+] ALU; [HSW+] ALU and 2nd branch)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 0 ([SNB+] ALU; [HSW+] ALU and 2nd branch). Sample with: UOPS_DISPATCHED_PORT.PORT_0. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "tma_alu_op_utilization_group",
	"MetricName": "tma_port_1",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_1 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_1 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 1 (ALU)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 1 (ALU). Sample with: UOPS_DISPATCHED_PORT.PORT_1. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "tma_alu_op_utilization_group",
	"MetricName": "tma_port_5",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_5 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_5 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 5 ([SNB+] Branches and ALU; [HSW+] ALU)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 5 ([SNB+] Branches and ALU; [HSW+] ALU). Sample with: UOPS_DISPATCHED.PORT_5. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "tma_alu_op_utilization_group",
	"MetricName": "tma_port_6",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_6 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_6 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 6 ([HSW+]Primary Branch and simple ALU)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 6 ([HSW+]Primary Branch and simple ALU). Sample with: UOPS_DISPATCHED_PORT.PORT_6. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_ports_utilized_2"
},
{
	"MetricGroup": "tma_backend_bound_group",
	"MetricName": "tma_core_bound",
	"MetricExpr": "tma_backend_bound - tma_memory_bound",
	"MetricThreshold": "tma_core_bound > 0.1 & tma_backend_bound > 0.2",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where Core non-memory issues were of a bottleneck",
	"PublicDescription": "This metric represents fraction of slots where Core non-memory issues were of a bottleneck.  Shortage in hardware compute resources; or dependencies in software's instructions are both categorized under Core Bound. Hence it may indicate the machine ran out of an out-of-order resource; certain execution units are overloaded or dependencies in program's data- or instruction-flow are limiting the performance (e.g. FP-chained long-latency arithmetic operations)"
},
{
	"MetricGroup": "tma_backend_bound_group",
	"MetricName": "tma_memory_bound",
	"MetricExpr": "(CYCLE_ACTIVITY.STALLS_MEM_ANY + EXE_ACTIVITY.BOUND_ON_STORES) / (CYCLE_ACTIVITY.STALLS_TOTAL + (EXE_ACTIVITY.1_PORTS_UTIL + tma_retiring * EXE_ACTIVITY.2_PORTS_UTIL) + EXE_ACTIVITY.BOUND_ON_STORES) * tma_backend_bound",
	"MetricThreshold": "tma_memory_bound > 0.2 & tma_backend_bound > 0.2",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the Memory subsystem within the Backend was a bottleneck",
	"PublicDescription": "This metric represents fraction of slots the Memory subsystem within the Backend was a bottleneck.  Memory Bound estimates fraction of slots where pipeline is likely stalled due to demand load or store instructions. This accounts mainly for (1) non-completed in-flight memory demand loads which coincides with execution units starvation; in addition to (2) cases where stores could impose backpressure on the pipeline when many of them get buffered at the same time (less common out of the two)"
},
{
	"MetricGroup": "tma_bad_speculation_group",
	"MetricName": "tma_branch_mispredicts",
	"MetricExpr": "BR_MISP_RETIRED.ALL_BRANCHES / (BR_MISP_RETIRED.ALL_BRANCHES + MACHINE_CLEARS.COUNT) * tma_bad_speculation",
	"MetricThreshold": "tma_branch_mispredicts > 0.1 & tma_bad_speculation > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU has wasted due to Branch Misprediction",
	"PublicDescription": "This metric represents fraction of slots the CPU has wasted due to Branch Misprediction.  These slots are either wasted by uops fetched from an incorrectly speculated program path; or stalls when the out-of-order part of the machine needs to recover its state from a speculative path. Sample with: BR_MISP_RETIRED.ALL_BRANCHES. Related metrics: tma_info_bad_spec_branch_misprediction_cost, tma_info_bottleneck_mispredictions, tma_mispredicts_resteers"
},
{
	"MetricGroup": "tma_bad_speculation_group",
	"MetricName": "tma_machine_clears",
	"MetricExpr": "tma_bad_speculation - tma_branch_mispredicts",
	"MetricThreshold": "tma_machine_clears > 0.1 & tma_bad_speculation > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU has wasted due to Machine Clears",
	"PublicDescription": "This metric represents fraction of slots the CPU has wasted due to Machine Clears.  These slots are either wasted by uops fetched prior to the clear; or stalls the out-of-order portion of the machine needs to recover its state after the clear. For example; this can happen due to memory ordering Nukes (e.g. Memory Disambiguation) or Self-Modifying-Code (SMC) nukes. Sample with: MACHINE_CLEARS.COUNT. Related metrics: tma_clears_resteers, tma_contested_accesses, tma_data_sharing, tma_false_sharing, tma_l1_bound, tma_microcode_sequencer, tma_ms_switches, tma_remote_cache"
},
{
	"MetricGroup": "tma_branch_resteers_group",
	"MetricName": "tma_clears_resteers",
	"MetricExpr": "(1 - BR_MISP_RETIRED.ALL_BRANCHES / (BR_MISP_RETIRED.ALL_BRANCHES + MACHINE_CLEARS.COUNT)) * INT_MISC.CLEAR_RESTEER_CYCLES / tma_info_thread_clks",
	"MetricThreshold": "tma_clears_resteers > 0.05 & (tma_branch_resteers > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Machine Clears",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Machine Clears. Sample with: INT_MISC.CLEAR_RESTEER_CYCLES. Related metrics: tma_l1_bound, tma_machine_clears, tma_microcode_sequencer, tma_ms_switches"
},
{
	"MetricGroup": "tma_branch_resteers_group",
	"MetricName": "tma_mispredicts_resteers",
	"MetricExpr": "BR_MISP_RETIRED.ALL_BRANCHES / (BR_MISP_RETIRED.ALL_BRANCHES + MACHINE_CLEARS.COUNT) * INT_MISC.CLEAR_RESTEER_CYCLES / tma_info_thread_clks",
	"MetricThreshold": "tma_mispredicts_resteers > 0.05 & (tma_branch_resteers > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Branch Misprediction at execution stage",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Branch Misprediction at execution stage. Sample with: INT_MISC.CLEAR_RESTEER_CYCLES. Related metrics: tma_branch_mispredicts, tma_info_bad_spec_branch_misprediction_cost, tma_info_bottleneck_mispredictions"
},
{
	"MetricGroup": "tma_branch_resteers_group",
	"MetricName": "tma_unknown_branches",
	"MetricExpr": "9 * BACLEARS.ANY / tma_info_thread_clks",
	"MetricThreshold": "tma_unknown_branches > 0.05 & (tma_branch_resteers > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to new branch address clears",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to new branch address clears. These are fetched branches the Branch Prediction Unit was unable to recognize (e.g. first time the branch is fetched or hitting BTB capacity limit). Sample with: BACLEARS.ANY"
},
{
	"MetricGroup": "tma_core_bound_group",
	"MetricName": "tma_divider",
	"MetricExpr": "ARITH.DIVIDER_ACTIVE / tma_info_thread_clks",
	"MetricThreshold": "tma_divider > 0.2 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles where the Divider unit was active",
	"PublicDescription": "This metric represents fraction of cycles where the Divider unit was active. Divide and square root instructions are performed by the Divider unit and can take considerably longer latency than integer or Floating Point addition; subtraction; or multiplication. Sample with: ARITH.DIVIDER_ACTIVE"
},
{
	"MetricGroup": "tma_core_bound_group",
	"MetricName": "tma_ports_utilization",
	"MetricExpr": "((EXE_ACTIVITY.EXE_BOUND_0_PORTS + (EXE_ACTIVITY.1_PORTS_UTIL + tma_retiring * EXE_ACTIVITY.2_PORTS_UTIL)) / tma_info_thread_clks if ARITH.DIVIDER_ACTIVE < CYCLE_ACTIVITY.STALLS_TOTAL - CYCLE_ACTIVITY.STALLS_MEM_ANY else (EXE_ACTIVITY.1_PORTS_UTIL + tma_retiring * EXE_ACTIVITY.2_PORTS_UTIL) / tma_info_thread_clks)",
	"MetricThreshold": "tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles the CPU performance was potentially limited due to Core computation issues (non divider-related)",
	"PublicDescription": "This metric estimates fraction of cycles the CPU performance was potentially limited due to Core computation issues (non divider-related).  Two distinct categories can be attributed into this metric: (1) heavy data-dependency among contiguous instructions would manifest in this metric - such cases are often referred to as low Instruction Level Parallelism (ILP). (2) Contention on some hardware execution unit other than Divider. For example; when there are too many multiply operations"
},
{
	"MetricGroup": "tma_dram_bound_group",
	"MetricName": "tma_mem_bandwidth",
	"MetricExpr": "min(CPU_CLK_UNHALTED.THREAD, cpu@OFFCORE_REQUESTS_OUTSTANDING.ALL_DATA_RD\\,cmask\\=4@) / tma_info_thread_clks",
	"MetricThreshold": "tma_mem_bandwidth > 0.2 & (tma_dram_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles where the core's performance was likely hurt due to approaching bandwidth limits of external memory (DRAM)",
	"PublicDescription": "This metric estimates fraction of cycles where the core's performance was likely hurt due to approaching bandwidth limits of external memory (DRAM).  The underlying heuristic assumes that a similar off-core traffic is generated by all IA cores. This metric does not aggregate non-data-read requests by this logical processor; requests from other IA Logical Processors/Physical Cores/sockets; or other non-IA devices like GPU; hence the maximum external memory bandwidth limits may or may not be approached when this metric is flagged (see Uncore counters for that). Related metrics: tma_fb_full, tma_info_bottleneck_memory_bandwidth, tma_info_system_dram_bw_use, tma_sq_full"
},
{
	"MetricGroup": "tma_dram_bound_group",
	"MetricName": "tma_mem_latency",
	"MetricExpr": "min(CPU_CLK_UNHALTED.THREAD, OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DATA_RD) / tma_info_thread_clks - tma_mem_bandwidth",
	"MetricThreshold": "tma_mem_latency > 0.1 & (tma_dram_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles where the performance was likely hurt due to latency from external memory (DRAM)",
	"PublicDescription": "This metric estimates fraction of cycles where the performance was likely hurt due to latency from external memory (DRAM).  This metric does not aggregate requests from other Logical Processors/Physical Cores/sockets (see Uncore counters for that). Related metrics: tma_info_bottleneck_memory_latency, tma_l3_hit_latency"
},
{
	"MetricGroup": "tma_dtlb_load_group",
	"MetricName": "tma_load_stlb_hit",
	"MetricExpr": "tma_dtlb_load - tma_load_stlb_miss",
	"MetricThreshold": "tma_load_stlb_hit > 0.05 & (tma_dtlb_load > 0.1 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates the fraction of cycles where the (first level) DTLB was missed by load accesses, that later on hit in second-level TLB (STLB)"
},
{
	"MetricGroup": "tma_dtlb_load_group",
	"MetricName": "tma_load_stlb_miss",
	"MetricExpr": "DTLB_LOAD_MISSES.WALK_ACTIVE / tma_info_thread_clks",
	"MetricThreshold": "tma_load_stlb_miss > 0.05 & (tma_dtlb_load > 0.1 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates the fraction of cycles where the Second-level TLB (STLB) was missed by load accesses, performing a hardware page walk"
},
{
	"MetricGroup": "tma_dtlb_store_group",
	"MetricName": "tma_store_stlb_hit",
	"MetricExpr": "tma_dtlb_store - tma_store_stlb_miss",
	"MetricThreshold": "tma_store_stlb_hit > 0.05 & (tma_dtlb_store > 0.05 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates the fraction of cycles where the TLB was missed by store accesses, hitting in the second-level TLB (STLB)"
},
{
	"MetricGroup": "tma_dtlb_store_group",
	"MetricName": "tma_store_stlb_miss",
	"MetricExpr": "DTLB_STORE_MISSES.WALK_ACTIVE / tma_info_core_core_clks",
	"MetricThreshold": "tma_store_stlb_miss > 0.05 & (tma_dtlb_store > 0.05 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates the fraction of cycles where the STLB was missed by store accesses, performing a hardware page walk"
},
{
	"MetricGroup": "tma_fetch_bandwidth_group",
	"MetricName": "tma_dsb",
	"MetricExpr": "(IDQ.ALL_DSB_CYCLES_ANY_UOPS - IDQ.ALL_DSB_CYCLES_4_UOPS) / tma_info_core_core_clks / 2",
	"MetricThreshold": "tma_dsb > 0.15 & (tma_fetch_bandwidth > 0.1 & tma_frontend_bound > 0.15 & tma_info_thread_ipc / 4 > 0.35)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles in which CPU was likely limited due to DSB (decoded uop cache) fetch pipeline",
	"PublicDescription": "This metric represents Core fraction of cycles in which CPU was likely limited due to DSB (decoded uop cache) fetch pipeline.  For example; inefficient utilization of the DSB cache structure or bank conflict when reading from it; are categorized here"
},
{
	"MetricGroup": "tma_fetch_bandwidth_group",
	"MetricName": "tma_mite",
	"MetricExpr": "(IDQ.ALL_MITE_CYCLES_ANY_UOPS - IDQ.ALL_MITE_CYCLES_4_UOPS) / tma_info_core_core_clks / 2",
	"MetricThreshold": "tma_mite > 0.1 & (tma_fetch_bandwidth > 0.1 & tma_frontend_bound > 0.15 & tma_info_thread_ipc / 4 > 0.35)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles in which CPU was likely limited due to the MITE pipeline (the legacy decode pipeline)",
	"PublicDescription": "This metric represents Core fraction of cycles in which CPU was likely limited due to the MITE pipeline (the legacy decode pipeline). This pipeline is used for code that was not pre-cached in the DSB or LSD. For example; inefficiencies due to asymmetric decoders; use of long immediate or LCP can manifest as MITE fetch bandwidth bottleneck. Sample with: FRONTEND_RETIRED.ANY_DSB_MISS"
},
{
	"MetricGroup": "tma_fetch_latency_group",
	"MetricName": "tma_branch_resteers",
	"MetricExpr": "INT_MISC.CLEAR_RESTEER_CYCLES / tma_info_thread_clks + tma_unknown_branches",
	"MetricThreshold": "tma_branch_resteers > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers. Branch Resteers estimates the Frontend delay in fetching operations from corrected path; following all sorts of miss-predicted branches. For example; branchy code with lots of miss-predictions might get categorized under Branch Resteers. Note the value of this node may overlap with its siblings. Sample with: BR_MISP_RETIRED.ALL_BRANCHES"
},
{
	"MetricGroup": "tma_fetch_latency_group",
	"MetricName": "tma_dsb_switches",
	"MetricExpr": "DSB2MITE_SWITCHES.PENALTY_CYCLES / tma_info_thread_clks",
	"MetricThreshold": "tma_dsb_switches > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to switches from DSB to MITE pipelines",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to switches from DSB to MITE pipelines. The DSB (decoded i-cache) is a Uop Cache where the front-end directly delivers Uops (micro operations) avoiding heavy x86 decoding. The DSB pipeline has shorter latency and delivered higher bandwidth than the MITE (legacy instruction decode pipeline). Switching between the two pipelines can cause penalties hence this metric measures the exposed penalty. Sample with: FRONTEND_RETIRED.DSB_MISS_PS. Related metrics: tma_fetch_bandwidth, tma_info_botlnk_l2_dsb_misses, tma_info_frontend_dsb_coverage, tma_info_inst_mix_iptb, tma_lcp"
},
{
	"MetricGroup": "tma_fetch_latency_group",
	"MetricName": "tma_icache_misses",
	"MetricExpr": "(ICACHE_16B.IFDATA_STALL + 2 * cpu@ICACHE_16B.IFDATA_STALL\\,cmask\\=1\\,edge@) / tma_info_thread_clks",
	"MetricThreshold": "tma_icache_misses > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to instruction cache misses",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to instruction cache misses. Sample with: FRONTEND_RETIRED.L2_MISS_PS;FRONTEND_RETIRED.L1I_MISS_PS"
},
{
	"MetricGroup": "tma_fetch_latency_group",
	"MetricName": "tma_itlb_misses",
	"MetricExpr": "ICACHE_64B.IFTAG_STALL / tma_info_thread_clks",
	"MetricThreshold": "tma_itlb_misses > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Instruction TLB (ITLB) misses",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to Instruction TLB (ITLB) misses. Sample with: FRONTEND_RETIRED.STLB_MISS_PS;FRONTEND_RETIRED.ITLB_MISS_PS"
},
{
	"MetricGroup": "tma_fetch_latency_group",
	"MetricName": "tma_lcp",
	"MetricExpr": "ILD_STALL.LCP / tma_info_thread_clks",
	"MetricThreshold": "tma_lcp > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles CPU was stalled due to Length Changing Prefixes (LCPs)",
	"PublicDescription": "This metric represents fraction of cycles CPU was stalled due to Length Changing Prefixes (LCPs). Using proper compiler flags or Intel Compiler by default will certainly avoid this. #Link: Optimization Guide about LCP BKMs. Related metrics: tma_dsb_switches, tma_fetch_bandwidth, tma_info_botlnk_l2_dsb_misses, tma_info_frontend_dsb_coverage, tma_info_inst_mix_iptb"
},
{
	"MetricGroup": "tma_fetch_latency_group",
	"MetricName": "tma_ms_switches",
	"MetricExpr": "2 * IDQ.MS_SWITCHES / tma_info_thread_clks",
	"MetricThreshold": "tma_ms_switches > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates the fraction of cycles when the CPU was stalled due to switches of uop delivery to the Microcode Sequencer (MS)",
	"PublicDescription": "This metric estimates the fraction of cycles when the CPU was stalled due to switches of uop delivery to the Microcode Sequencer (MS). Commonly used instructions are optimized for delivery by the DSB (decoded i-cache) or MITE (legacy instruction decode) pipelines. Certain operations cannot be handled natively by the execution pipeline; and must be performed by microcode (small programs injected into the execution stream). Switching to the MS too often can negatively impact performance. The MS is designated to deliver long uop flows required by CISC instructions like CPUID; or uncommon conditions like Floating Point Assists when dealing with Denormals. Sample with: IDQ.MS_SWITCHES. Related metrics: tma_clears_resteers, tma_l1_bound, tma_machine_clears, tma_microcode_sequencer, tma_mixing_vectors, tma_serializing_operation"
},
{
	"MetricGroup": "tma_fp_arith_group",
	"MetricName": "tma_fp_scalar",
	"MetricExpr": "cpu@FP_ARITH_INST_RETIRED.SCALAR_SINGLE\\,umask\\=0x03@ / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fp_scalar > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric approximates arithmetic floating-point (FP) scalar uops fraction the CPU has retired",
	"PublicDescription": "This metric approximates arithmetic floating-point (FP) scalar uops fraction the CPU has retired. May overcount due to FMA double counting. Related metrics: tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "tma_fp_arith_group",
	"MetricName": "tma_fp_vector",
	"MetricExpr": "cpu@FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE\\,umask\\=0x3c@ / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fp_vector > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric approximates arithmetic floating-point (FP) vector uops fraction the CPU has retired aggregated across all vector widths",
	"PublicDescription": "This metric approximates arithmetic floating-point (FP) vector uops fraction the CPU has retired aggregated across all vector widths. May overcount due to FMA double counting. Related metrics: tma_fp_scalar, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "tma_fp_arith_group",
	"MetricName": "tma_x87_use",
	"MetricExpr": "tma_retiring * UOPS_EXECUTED.X87 / UOPS_EXECUTED.THREAD",
	"MetricThreshold": "tma_x87_use > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric serves as an approximation of legacy x87 usage",
	"PublicDescription": "This metric serves as an approximation of legacy x87 usage. It accounts for instructions beyond X87 FP arithmetic operations; hence may be used as a thermometer to avoid X87 high usage and preferably upgrade to modern ISA. See Tip under Tuning Hint"
},
{
	"MetricGroup": "tma_fp_vector_group",
	"MetricName": "tma_fp_vector_128b",
	"MetricExpr": "(FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE + FP_ARITH_INST_RETIRED.128B_PACKED_SINGLE) / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fp_vector_128b > 0.1 & (tma_fp_vector > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 128-bit wide vectors",
	"PublicDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 128-bit wide vectors. May overcount due to FMA double counting. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "tma_fp_vector_group",
	"MetricName": "tma_fp_vector_256b",
	"MetricExpr": "(FP_ARITH_INST_RETIRED.256B_PACKED_DOUBLE + FP_ARITH_INST_RETIRED.256B_PACKED_SINGLE) / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fp_vector_256b > 0.1 & (tma_fp_vector > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 256-bit wide vectors",
	"PublicDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 256-bit wide vectors. May overcount due to FMA double counting. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "tma_frontend_bound_group",
	"MetricName": "tma_fetch_bandwidth",
	"MetricExpr": "tma_frontend_bound - tma_fetch_latency",
	"MetricThreshold": "tma_fetch_bandwidth > 0.1 & tma_frontend_bound > 0.15 & tma_info_thread_ipc / 4 > 0.35",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend bandwidth issues",
	"PublicDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend bandwidth issues.  For example; inefficiencies at the instruction decoders; or restrictions for caching in the DSB (decoded uops cache) are categorized under Fetch Bandwidth. In such cases; the Frontend typically delivers suboptimal amount of uops to the Backend. Sample with: FRONTEND_RETIRED.LATENCY_GE_2_BUBBLES_GE_1_PS;FRONTEND_RETIRED.LATENCY_GE_1_PS;FRONTEND_RETIRED.LATENCY_GE_2_PS. Related metrics: tma_dsb_switches, tma_info_botlnk_l2_dsb_misses, tma_info_frontend_dsb_coverage, tma_info_inst_mix_iptb, tma_lcp"
},
{
	"MetricGroup": "tma_frontend_bound_group",
	"MetricName": "tma_fetch_latency",
	"MetricExpr": "4 * IDQ_UOPS_NOT_DELIVERED.CYCLES_0_UOPS_DELIV.CORE / tma_info_thread_slots",
	"MetricThreshold": "tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend latency issues",
	"PublicDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend latency issues.  For example; instruction-cache misses; iTLB misses or fetch stalls after a branch misprediction are categorized under Frontend Latency. In such cases; the Frontend eventually delivers no uops for some period. Sample with: FRONTEND_RETIRED.LATENCY_GE_16_PS;FRONTEND_RETIRED.LATENCY_GE_8_PS"
},
{
	"MetricGroup": "tma_heavy_operations_group",
	"MetricName": "tma_few_uops_instructions",
	"MetricExpr": "tma_heavy_operations - tma_microcode_sequencer",
	"MetricThreshold": "tma_few_uops_instructions > 0.05 & tma_heavy_operations > 0.1",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring instructions that that are decoder into two or up to ([SNB+] four; [ADL+] five) uops",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring instructions that that are decoder into two or up to ([SNB+] four; [ADL+] five) uops. This highly-correlates with the number of uops in such instructions. Related metrics: tma_decoder0_alone"
},
{
	"MetricGroup": "tma_heavy_operations_group",
	"MetricName": "tma_microcode_sequencer",
	"MetricExpr": "UOPS_RETIRED.RETIRE_SLOTS / UOPS_ISSUED.ANY * IDQ.MS_UOPS / tma_info_thread_slots",
	"MetricThreshold": "tma_microcode_sequencer > 0.05 & tma_heavy_operations > 0.1",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU was retiring uops fetched by the Microcode Sequencer (MS) unit",
	"PublicDescription": "This metric represents fraction of slots the CPU was retiring uops fetched by the Microcode Sequencer (MS) unit.  The MS is used for CISC instructions not supported by the default decoders (like repeat move strings; or CPUID); or by microcode assists used to address some operation modes (like in Floating Point assists). These cases can often be avoided. Sample with: IDQ.MS_UOPS. Related metrics: tma_clears_resteers, tma_l1_bound, tma_machine_clears, tma_ms_switches"
},
{
	"MetricGroup": "tma_issue2P",
	"MetricName": "tma_fp_scalar",
	"MetricExpr": "cpu@FP_ARITH_INST_RETIRED.SCALAR_SINGLE\\,umask\\=0x03@ / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fp_scalar > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric approximates arithmetic floating-point (FP) scalar uops fraction the CPU has retired",
	"PublicDescription": "This metric approximates arithmetic floating-point (FP) scalar uops fraction the CPU has retired. May overcount due to FMA double counting. Related metrics: tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "tma_issue2P",
	"MetricName": "tma_fp_vector",
	"MetricExpr": "cpu@FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE\\,umask\\=0x3c@ / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fp_vector > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric approximates arithmetic floating-point (FP) vector uops fraction the CPU has retired aggregated across all vector widths",
	"PublicDescription": "This metric approximates arithmetic floating-point (FP) vector uops fraction the CPU has retired aggregated across all vector widths. May overcount due to FMA double counting. Related metrics: tma_fp_scalar, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "tma_issue2P",
	"MetricName": "tma_fp_vector_128b",
	"MetricExpr": "(FP_ARITH_INST_RETIRED.128B_PACKED_DOUBLE + FP_ARITH_INST_RETIRED.128B_PACKED_SINGLE) / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fp_vector_128b > 0.1 & (tma_fp_vector > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 128-bit wide vectors",
	"PublicDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 128-bit wide vectors. May overcount due to FMA double counting. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "tma_issue2P",
	"MetricName": "tma_fp_vector_256b",
	"MetricExpr": "(FP_ARITH_INST_RETIRED.256B_PACKED_DOUBLE + FP_ARITH_INST_RETIRED.256B_PACKED_SINGLE) / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fp_vector_256b > 0.1 & (tma_fp_vector > 0.1 & (tma_fp_arith > 0.2 & tma_light_operations > 0.6))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 256-bit wide vectors",
	"PublicDescription": "This metric approximates arithmetic FP vector uops fraction the CPU has retired for 256-bit wide vectors. May overcount due to FMA double counting. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "tma_issue2P",
	"MetricName": "tma_port_0",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_0 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_0 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 0 ([SNB+] ALU; [HSW+] ALU and 2nd branch)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 0 ([SNB+] ALU; [HSW+] ALU and 2nd branch). Sample with: UOPS_DISPATCHED_PORT.PORT_0. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_1, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "tma_issue2P",
	"MetricName": "tma_port_1",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_1 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_1 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 1 (ALU)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 1 (ALU). Sample with: UOPS_DISPATCHED_PORT.PORT_1. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_5, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "tma_issue2P",
	"MetricName": "tma_port_5",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_5 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_5 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 5 ([SNB+] Branches and ALU; [HSW+] ALU)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 5 ([SNB+] Branches and ALU; [HSW+] ALU). Sample with: UOPS_DISPATCHED.PORT_5. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_6, tma_ports_utilized_2"
},
{
	"MetricGroup": "tma_issue2P",
	"MetricName": "tma_port_6",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_6 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_6 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 6 ([HSW+]Primary Branch and simple ALU)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 6 ([HSW+]Primary Branch and simple ALU). Sample with: UOPS_DISPATCHED_PORT.PORT_6. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_ports_utilized_2"
},
{
	"MetricGroup": "tma_issue2P",
	"MetricName": "tma_ports_utilized_2",
	"MetricExpr": "((UOPS_EXECUTED.CORE_CYCLES_GE_2 - UOPS_EXECUTED.CORE_CYCLES_GE_3) / 2 if #SMT_on else EXE_ACTIVITY.2_PORTS_UTIL) / tma_info_core_core_clks",
	"MetricThreshold": "tma_ports_utilized_2 > 0.15 & (tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles CPU executed total of 2 uops per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise)",
	"PublicDescription": "This metric represents fraction of cycles CPU executed total of 2 uops per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise).  Loop Vectorization -most compilers feature auto-Vectorization options today- reduces pressure on the execution ports as multiple elements are calculated with same uop. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6"
},
{
	"MetricGroup": "tma_issueBC",
	"MetricName": "tma_info_bottleneck_big_code",
	"MetricExpr": "100 * tma_fetch_latency * (tma_itlb_misses + tma_icache_misses + tma_unknown_branches) / (tma_branch_resteers + tma_dsb_switches + tma_icache_misses + tma_itlb_misses + tma_lcp + tma_ms_switches)",
	"MetricThreshold": "tma_info_bottleneck_big_code > 20",
	"BriefDescription": "Total pipeline cost of instruction fetch related bottlenecks by large code footprint programs (i-side cache; TLB and BTB misses)",
	"PublicDescription": "Total pipeline cost of instruction fetch related bottlenecks by large code footprint programs (i-side cache; TLB and BTB misses). Related metrics: tma_info_bottleneck_branching_overhead"
},
{
	"MetricGroup": "tma_issueBC",
	"MetricName": "tma_info_bottleneck_branching_overhead",
	"MetricExpr": "100 * ((BR_INST_RETIRED.CONDITIONAL + 3 * BR_INST_RETIRED.NEAR_CALL + (BR_INST_RETIRED.NEAR_TAKEN - (BR_INST_RETIRED.CONDITIONAL - BR_INST_RETIRED.NOT_TAKEN) - 2 * BR_INST_RETIRED.NEAR_CALL)) / tma_info_thread_slots)",
	"MetricThreshold": "tma_info_bottleneck_branching_overhead > 10",
	"BriefDescription": "Total pipeline cost of branch related instructions (used for program control-flow including function calls)",
	"PublicDescription": "Total pipeline cost of branch related instructions (used for program control-flow including function calls). Related metrics: tma_info_bottleneck_big_code"
},
{
	"MetricGroup": "tma_issueBM",
	"MetricName": "tma_branch_mispredicts",
	"MetricExpr": "BR_MISP_RETIRED.ALL_BRANCHES / (BR_MISP_RETIRED.ALL_BRANCHES + MACHINE_CLEARS.COUNT) * tma_bad_speculation",
	"MetricThreshold": "tma_branch_mispredicts > 0.1 & tma_bad_speculation > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU has wasted due to Branch Misprediction",
	"PublicDescription": "This metric represents fraction of slots the CPU has wasted due to Branch Misprediction.  These slots are either wasted by uops fetched from an incorrectly speculated program path; or stalls when the out-of-order part of the machine needs to recover its state from a speculative path. Sample with: BR_MISP_RETIRED.ALL_BRANCHES. Related metrics: tma_info_bad_spec_branch_misprediction_cost, tma_info_bottleneck_mispredictions, tma_mispredicts_resteers"
},
{
	"MetricGroup": "tma_issueBM",
	"MetricName": "tma_info_bad_spec_branch_misprediction_cost",
	"MetricExpr": "(tma_branch_mispredicts + tma_fetch_latency * tma_mispredicts_resteers / (tma_branch_resteers + tma_dsb_switches + tma_icache_misses + tma_itlb_misses + tma_lcp + tma_ms_switches)) * tma_info_thread_slots / BR_MISP_RETIRED.ALL_BRANCHES",
	"BriefDescription": "Branch Misprediction Cost: Fraction of TMA slots wasted per non-speculative branch misprediction (retired JEClear)",
	"PublicDescription": "Branch Misprediction Cost: Fraction of TMA slots wasted per non-speculative branch misprediction (retired JEClear). Related metrics: tma_branch_mispredicts, tma_info_bottleneck_mispredictions, tma_mispredicts_resteers"
},
{
	"MetricGroup": "tma_issueBM",
	"MetricName": "tma_info_bottleneck_mispredictions",
	"MetricExpr": "100 * (tma_branch_mispredicts + tma_fetch_latency * tma_mispredicts_resteers / (tma_branch_resteers + tma_dsb_switches + tma_icache_misses + tma_itlb_misses + tma_lcp + tma_ms_switches))",
	"MetricThreshold": "tma_info_bottleneck_mispredictions > 20",
	"BriefDescription": "Total pipeline cost of Branch Misprediction related bottlenecks",
	"PublicDescription": "Total pipeline cost of Branch Misprediction related bottlenecks. Related metrics: tma_branch_mispredicts, tma_info_bad_spec_branch_misprediction_cost, tma_mispredicts_resteers"
},
{
	"MetricGroup": "tma_issueBM",
	"MetricName": "tma_mispredicts_resteers",
	"MetricExpr": "BR_MISP_RETIRED.ALL_BRANCHES / (BR_MISP_RETIRED.ALL_BRANCHES + MACHINE_CLEARS.COUNT) * INT_MISC.CLEAR_RESTEER_CYCLES / tma_info_thread_clks",
	"MetricThreshold": "tma_mispredicts_resteers > 0.05 & (tma_branch_resteers > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Branch Misprediction at execution stage",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Branch Misprediction at execution stage. Sample with: INT_MISC.CLEAR_RESTEER_CYCLES. Related metrics: tma_branch_mispredicts, tma_info_bad_spec_branch_misprediction_cost, tma_info_bottleneck_mispredictions"
},
{
	"MetricGroup": "tma_issueBW",
	"MetricName": "tma_fb_full",
	"MetricExpr": "tma_info_memory_load_miss_real_latency * cpu@L1D_PEND_MISS.FB_FULL\\,cmask\\=1@ / tma_info_thread_clks",
	"MetricThreshold": "tma_fb_full > 0.3",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric does a *rough estimation* of how often L1D Fill Buffer unavailability limited additional L1D miss memory access requests to proceed",
	"PublicDescription": "This metric does a *rough estimation* of how often L1D Fill Buffer unavailability limited additional L1D miss memory access requests to proceed. The higher the metric value; the deeper the memory hierarchy level the misses are satisfied from (metric values >1 are valid). Often it hints on approaching bandwidth limits (to L2 cache; L3 cache or external memory). Related metrics: tma_info_bottleneck_memory_bandwidth, tma_info_system_dram_bw_use, tma_mem_bandwidth, tma_sq_full, tma_store_latency, tma_streaming_stores"
},
{
	"MetricGroup": "tma_issueBW",
	"MetricName": "tma_info_bottleneck_memory_bandwidth",
	"MetricExpr": "100 * tma_memory_bound * (tma_dram_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_mem_bandwidth / (tma_mem_bandwidth + tma_mem_latency)) + tma_l3_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_sq_full / (tma_contested_accesses + tma_data_sharing + tma_l3_hit_latency + tma_sq_full))) + tma_l1_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_fb_full / (tma_4k_aliasing + tma_dtlb_load + tma_fb_full + tma_lock_latency + tma_split_loads + tma_store_fwd_blk))",
	"MetricThreshold": "tma_info_bottleneck_memory_bandwidth > 20",
	"BriefDescription": "Total pipeline cost of (external) Memory Bandwidth related bottlenecks",
	"PublicDescription": "Total pipeline cost of (external) Memory Bandwidth related bottlenecks. Related metrics: tma_fb_full, tma_info_system_dram_bw_use, tma_mem_bandwidth, tma_sq_full"
},
{
	"MetricGroup": "tma_issueBW",
	"MetricName": "tma_info_system_dram_bw_use",
	"MetricExpr": "64 * (UNC_ARB_TRK_REQUESTS.ALL + UNC_ARB_COH_TRK_REQUESTS.ALL) / 1e6 / duration_time / 1e3",
	"BriefDescription": "Average external Memory Bandwidth Use for reads and writes [GB / sec]",
	"PublicDescription": "Average external Memory Bandwidth Use for reads and writes [GB / sec]. Related metrics: tma_fb_full, tma_info_bottleneck_memory_bandwidth, tma_mem_bandwidth, tma_sq_full"
},
{
	"MetricGroup": "tma_issueBW",
	"MetricName": "tma_mem_bandwidth",
	"MetricExpr": "min(CPU_CLK_UNHALTED.THREAD, cpu@OFFCORE_REQUESTS_OUTSTANDING.ALL_DATA_RD\\,cmask\\=4@) / tma_info_thread_clks",
	"MetricThreshold": "tma_mem_bandwidth > 0.2 & (tma_dram_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles where the core's performance was likely hurt due to approaching bandwidth limits of external memory (DRAM)",
	"PublicDescription": "This metric estimates fraction of cycles where the core's performance was likely hurt due to approaching bandwidth limits of external memory (DRAM).  The underlying heuristic assumes that a similar off-core traffic is generated by all IA cores. This metric does not aggregate non-data-read requests by this logical processor; requests from other IA Logical Processors/Physical Cores/sockets; or other non-IA devices like GPU; hence the maximum external memory bandwidth limits may or may not be approached when this metric is flagged (see Uncore counters for that). Related metrics: tma_fb_full, tma_info_bottleneck_memory_bandwidth, tma_info_system_dram_bw_use, tma_sq_full"
},
{
	"MetricGroup": "tma_issueBW",
	"MetricName": "tma_sq_full",
	"MetricExpr": "(OFFCORE_REQUESTS_BUFFER.SQ_FULL / 2 if #SMT_on else OFFCORE_REQUESTS_BUFFER.SQ_FULL) / tma_info_core_core_clks",
	"MetricThreshold": "tma_sq_full > 0.3 & (tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric measures fraction of cycles where the Super Queue (SQ) was full taking into account all request-types and both hardware SMT threads (Logical Processors)",
	"PublicDescription": "This metric measures fraction of cycles where the Super Queue (SQ) was full taking into account all request-types and both hardware SMT threads (Logical Processors). Related metrics: tma_fb_full, tma_info_bottleneck_memory_bandwidth, tma_info_system_dram_bw_use, tma_mem_bandwidth"
},
{
	"MetricGroup": "tma_issueD0",
	"MetricName": "tma_decoder0_alone",
	"MetricExpr": "(cpu@INST_DECODED.DECODERS\\,cmask\\=1@ - cpu@INST_DECODED.DECODERS\\,cmask\\=2@) / tma_info_core_core_clks / 2",
	"MetricThreshold": "tma_decoder0_alone > 0.1 & (tma_mite > 0.1 & (tma_fetch_bandwidth > 0.1 & tma_frontend_bound > 0.15 & tma_info_thread_ipc / 4 > 0.35))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles where decoder-0 was the only active decoder",
	"PublicDescription": "This metric represents fraction of cycles where decoder-0 was the only active decoder. Related metrics: tma_few_uops_instructions"
},
{
	"MetricGroup": "tma_issueD0",
	"MetricName": "tma_few_uops_instructions",
	"MetricExpr": "tma_heavy_operations - tma_microcode_sequencer",
	"MetricThreshold": "tma_few_uops_instructions > 0.05 & tma_heavy_operations > 0.1",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring instructions that that are decoder into two or up to ([SNB+] four; [ADL+] five) uops",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring instructions that that are decoder into two or up to ([SNB+] four; [ADL+] five) uops. This highly-correlates with the number of uops in such instructions. Related metrics: tma_decoder0_alone"
},
{
	"MetricGroup": "tma_issueFB",
	"MetricName": "tma_dsb_switches",
	"MetricExpr": "DSB2MITE_SWITCHES.PENALTY_CYCLES / tma_info_thread_clks",
	"MetricThreshold": "tma_dsb_switches > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to switches from DSB to MITE pipelines",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to switches from DSB to MITE pipelines. The DSB (decoded i-cache) is a Uop Cache where the front-end directly delivers Uops (micro operations) avoiding heavy x86 decoding. The DSB pipeline has shorter latency and delivered higher bandwidth than the MITE (legacy instruction decode pipeline). Switching between the two pipelines can cause penalties hence this metric measures the exposed penalty. Sample with: FRONTEND_RETIRED.DSB_MISS_PS. Related metrics: tma_fetch_bandwidth, tma_info_botlnk_l2_dsb_misses, tma_info_frontend_dsb_coverage, tma_info_inst_mix_iptb, tma_lcp"
},
{
	"MetricGroup": "tma_issueFB",
	"MetricName": "tma_fetch_bandwidth",
	"MetricExpr": "tma_frontend_bound - tma_fetch_latency",
	"MetricThreshold": "tma_fetch_bandwidth > 0.1 & tma_frontend_bound > 0.15 & tma_info_thread_ipc / 4 > 0.35",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend bandwidth issues",
	"PublicDescription": "This metric represents fraction of slots the CPU was stalled due to Frontend bandwidth issues.  For example; inefficiencies at the instruction decoders; or restrictions for caching in the DSB (decoded uops cache) are categorized under Fetch Bandwidth. In such cases; the Frontend typically delivers suboptimal amount of uops to the Backend. Sample with: FRONTEND_RETIRED.LATENCY_GE_2_BUBBLES_GE_1_PS;FRONTEND_RETIRED.LATENCY_GE_1_PS;FRONTEND_RETIRED.LATENCY_GE_2_PS. Related metrics: tma_dsb_switches, tma_info_botlnk_l2_dsb_misses, tma_info_frontend_dsb_coverage, tma_info_inst_mix_iptb, tma_lcp"
},
{
	"MetricGroup": "tma_issueFB",
	"MetricName": "tma_info_botlnk_l2_dsb_misses",
	"MetricExpr": "100 * (tma_fetch_latency * tma_dsb_switches / (tma_branch_resteers + tma_dsb_switches + tma_icache_misses + tma_itlb_misses + tma_lcp + tma_ms_switches) + tma_fetch_bandwidth * tma_mite / (tma_dsb + tma_mite))",
	"MetricThreshold": "tma_info_botlnk_l2_dsb_misses > 10",
	"BriefDescription": "Total pipeline cost of DSB (uop cache) misses - subset of the Instruction_Fetch_BW Bottleneck",
	"PublicDescription": "Total pipeline cost of DSB (uop cache) misses - subset of the Instruction_Fetch_BW Bottleneck. Related metrics: tma_dsb_switches, tma_fetch_bandwidth, tma_info_frontend_dsb_coverage, tma_info_inst_mix_iptb, tma_lcp"
},
{
	"MetricGroup": "tma_issueFB",
	"MetricName": "tma_info_frontend_dsb_coverage",
	"MetricExpr": "IDQ.DSB_UOPS / (IDQ.DSB_UOPS + IDQ.MITE_UOPS + IDQ.MS_UOPS)",
	"MetricThreshold": "tma_info_frontend_dsb_coverage < 0.7 & tma_info_thread_ipc / 4 > 0.35",
	"BriefDescription": "Fraction of Uops delivered by the DSB (aka Decoded ICache; or Uop Cache)",
	"PublicDescription": "Fraction of Uops delivered by the DSB (aka Decoded ICache; or Uop Cache). Related metrics: tma_dsb_switches, tma_fetch_bandwidth, tma_info_botlnk_l2_dsb_misses, tma_info_inst_mix_iptb, tma_lcp"
},
{
	"MetricGroup": "tma_issueFB",
	"MetricName": "tma_info_inst_mix_iptb",
	"MetricExpr": "INST_RETIRED.ANY / BR_INST_RETIRED.NEAR_TAKEN",
	"MetricThreshold": "tma_info_inst_mix_iptb < 9",
	"BriefDescription": "Instruction per taken branch",
	"PublicDescription": "Instruction per taken branch. Related metrics: tma_dsb_switches, tma_fetch_bandwidth, tma_info_botlnk_l2_dsb_misses, tma_info_frontend_dsb_coverage, tma_lcp"
},
{
	"MetricGroup": "tma_issueFB",
	"MetricName": "tma_lcp",
	"MetricExpr": "ILD_STALL.LCP / tma_info_thread_clks",
	"MetricThreshold": "tma_lcp > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles CPU was stalled due to Length Changing Prefixes (LCPs)",
	"PublicDescription": "This metric represents fraction of cycles CPU was stalled due to Length Changing Prefixes (LCPs). Using proper compiler flags or Intel Compiler by default will certainly avoid this. #Link: Optimization Guide about LCP BKMs. Related metrics: tma_dsb_switches, tma_fetch_bandwidth, tma_info_botlnk_l2_dsb_misses, tma_info_frontend_dsb_coverage, tma_info_inst_mix_iptb"
},
{
	"MetricGroup": "tma_issueFL",
	"MetricName": "tma_info_botlnk_l2_ic_misses",
	"MetricExpr": "100 * (tma_fetch_latency * tma_icache_misses / (tma_branch_resteers + tma_dsb_switches + tma_icache_misses + tma_itlb_misses + tma_lcp + tma_ms_switches))",
	"MetricThreshold": "tma_info_botlnk_l2_ic_misses > 5",
	"BriefDescription": "Total pipeline cost of Instruction Cache misses - subset of the Big_Code Bottleneck",
	"PublicDescription": "Total pipeline cost of Instruction Cache misses - subset of the Big_Code Bottleneck. Related metrics: "
},
{
	"MetricGroup": "tma_issueL1",
	"MetricName": "tma_l1_bound",
	"MetricExpr": "max((CYCLE_ACTIVITY.STALLS_MEM_ANY - CYCLE_ACTIVITY.STALLS_L1D_MISS) / tma_info_thread_clks, 0)",
	"MetricThreshold": "tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled without loads missing the L1 data cache",
	"PublicDescription": "This metric estimates how often the CPU was stalled without loads missing the L1 data cache.  The L1 data cache typically has the shortest latency.  However; in certain cases like loads blocked on older stores; a load might suffer due to high latency even though it is being satisfied by the L1. Another example is loads who miss in the TLB. These cases are characterized by execution unit stalls; while some non-completed demand load lives in the machine without having that demand load missing the L1 cache. Sample with: MEM_LOAD_RETIRED.L1_HIT_PS;MEM_LOAD_RETIRED.FB_HIT_PS. Related metrics: tma_clears_resteers, tma_machine_clears, tma_microcode_sequencer, tma_ms_switches, tma_ports_utilized_1"
},
{
	"MetricGroup": "tma_issueL1",
	"MetricName": "tma_ports_utilized_1",
	"MetricExpr": "((UOPS_EXECUTED.CORE_CYCLES_GE_1 - UOPS_EXECUTED.CORE_CYCLES_GE_2) / 2 if #SMT_on else EXE_ACTIVITY.1_PORTS_UTIL) / tma_info_core_core_clks",
	"MetricThreshold": "tma_ports_utilized_1 > 0.2 & (tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles where the CPU executed total of 1 uop per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise)",
	"PublicDescription": "This metric represents fraction of cycles where the CPU executed total of 1 uop per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise). This can be due to heavy data-dependency among software instructions; or over oversubscribing a particular hardware resource. In some other cases with high 1_Port_Utilized and L1_Bound; this metric can point to L1 data-cache latency bottleneck that may not necessarily manifest with complete execution starvation (due to the short L1 latency e.g. walking a linked list) - looking at the assembly can be helpful. Related metrics: tma_l1_bound"
},
{
	"MetricGroup": "tma_issueLat",
	"MetricName": "tma_info_bottleneck_memory_latency",
	"MetricExpr": "100 * tma_memory_bound * (tma_dram_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_mem_latency / (tma_mem_bandwidth + tma_mem_latency)) + tma_l3_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_l3_hit_latency / (tma_contested_accesses + tma_data_sharing + tma_l3_hit_latency + tma_sq_full)) + tma_l2_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound))",
	"MetricThreshold": "tma_info_bottleneck_memory_latency > 20",
	"BriefDescription": "Total pipeline cost of Memory Latency related bottlenecks (external memory and off-core caches)",
	"PublicDescription": "Total pipeline cost of Memory Latency related bottlenecks (external memory and off-core caches). Related metrics: tma_l3_hit_latency, tma_mem_latency"
},
{
	"MetricGroup": "tma_issueLat",
	"MetricName": "tma_l3_hit_latency",
	"MetricExpr": "6.5 * tma_info_system_average_frequency * MEM_LOAD_RETIRED.L3_HIT * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS / 2) / tma_info_thread_clks",
	"MetricThreshold": "tma_l3_hit_latency > 0.1 & (tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles with demand load accesses that hit the L3 cache under unloaded scenarios (possibly L3 latency limited)",
	"PublicDescription": "This metric represents fraction of cycles with demand load accesses that hit the L3 cache under unloaded scenarios (possibly L3 latency limited).  Avoiding private cache misses (i.e. L2 misses/L3 hits) will improve the latency; reduce contention with sibling physical cores and increase performance.  Note the value of this node may overlap with its siblings. Sample with: MEM_LOAD_RETIRED.L3_HIT_PS. Related metrics: tma_info_bottleneck_memory_latency, tma_mem_latency"
},
{
	"MetricGroup": "tma_issueLat",
	"MetricName": "tma_mem_latency",
	"MetricExpr": "min(CPU_CLK_UNHALTED.THREAD, OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DATA_RD) / tma_info_thread_clks - tma_mem_bandwidth",
	"MetricThreshold": "tma_mem_latency > 0.1 & (tma_dram_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles where the performance was likely hurt due to latency from external memory (DRAM)",
	"PublicDescription": "This metric estimates fraction of cycles where the performance was likely hurt due to latency from external memory (DRAM).  This metric does not aggregate requests from other Logical Processors/Physical Cores/sockets (see Uncore counters for that). Related metrics: tma_info_bottleneck_memory_latency, tma_l3_hit_latency"
},
{
	"MetricGroup": "tma_issueMC",
	"MetricName": "tma_clears_resteers",
	"MetricExpr": "(1 - BR_MISP_RETIRED.ALL_BRANCHES / (BR_MISP_RETIRED.ALL_BRANCHES + MACHINE_CLEARS.COUNT)) * INT_MISC.CLEAR_RESTEER_CYCLES / tma_info_thread_clks",
	"MetricThreshold": "tma_clears_resteers > 0.05 & (tma_branch_resteers > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Machine Clears",
	"PublicDescription": "This metric represents fraction of cycles the CPU was stalled due to Branch Resteers as a result of Machine Clears. Sample with: INT_MISC.CLEAR_RESTEER_CYCLES. Related metrics: tma_l1_bound, tma_machine_clears, tma_microcode_sequencer, tma_ms_switches"
},
{
	"MetricGroup": "tma_issueMC",
	"MetricName": "tma_l1_bound",
	"MetricExpr": "max((CYCLE_ACTIVITY.STALLS_MEM_ANY - CYCLE_ACTIVITY.STALLS_L1D_MISS) / tma_info_thread_clks, 0)",
	"MetricThreshold": "tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled without loads missing the L1 data cache",
	"PublicDescription": "This metric estimates how often the CPU was stalled without loads missing the L1 data cache.  The L1 data cache typically has the shortest latency.  However; in certain cases like loads blocked on older stores; a load might suffer due to high latency even though it is being satisfied by the L1. Another example is loads who miss in the TLB. These cases are characterized by execution unit stalls; while some non-completed demand load lives in the machine without having that demand load missing the L1 cache. Sample with: MEM_LOAD_RETIRED.L1_HIT_PS;MEM_LOAD_RETIRED.FB_HIT_PS. Related metrics: tma_clears_resteers, tma_machine_clears, tma_microcode_sequencer, tma_ms_switches, tma_ports_utilized_1"
},
{
	"MetricGroup": "tma_issueMC",
	"MetricName": "tma_machine_clears",
	"MetricExpr": "tma_bad_speculation - tma_branch_mispredicts",
	"MetricThreshold": "tma_machine_clears > 0.1 & tma_bad_speculation > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU has wasted due to Machine Clears",
	"PublicDescription": "This metric represents fraction of slots the CPU has wasted due to Machine Clears.  These slots are either wasted by uops fetched prior to the clear; or stalls the out-of-order portion of the machine needs to recover its state after the clear. For example; this can happen due to memory ordering Nukes (e.g. Memory Disambiguation) or Self-Modifying-Code (SMC) nukes. Sample with: MACHINE_CLEARS.COUNT. Related metrics: tma_clears_resteers, tma_contested_accesses, tma_data_sharing, tma_false_sharing, tma_l1_bound, tma_microcode_sequencer, tma_ms_switches, tma_remote_cache"
},
{
	"MetricGroup": "tma_issueMC",
	"MetricName": "tma_microcode_sequencer",
	"MetricExpr": "UOPS_RETIRED.RETIRE_SLOTS / UOPS_ISSUED.ANY * IDQ.MS_UOPS / tma_info_thread_slots",
	"MetricThreshold": "tma_microcode_sequencer > 0.05 & tma_heavy_operations > 0.1",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU was retiring uops fetched by the Microcode Sequencer (MS) unit",
	"PublicDescription": "This metric represents fraction of slots the CPU was retiring uops fetched by the Microcode Sequencer (MS) unit.  The MS is used for CISC instructions not supported by the default decoders (like repeat move strings; or CPUID); or by microcode assists used to address some operation modes (like in Floating Point assists). These cases can often be avoided. Sample with: IDQ.MS_UOPS. Related metrics: tma_clears_resteers, tma_l1_bound, tma_machine_clears, tma_ms_switches"
},
{
	"MetricGroup": "tma_issueMC",
	"MetricName": "tma_ms_switches",
	"MetricExpr": "2 * IDQ.MS_SWITCHES / tma_info_thread_clks",
	"MetricThreshold": "tma_ms_switches > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates the fraction of cycles when the CPU was stalled due to switches of uop delivery to the Microcode Sequencer (MS)",
	"PublicDescription": "This metric estimates the fraction of cycles when the CPU was stalled due to switches of uop delivery to the Microcode Sequencer (MS). Commonly used instructions are optimized for delivery by the DSB (decoded i-cache) or MITE (legacy instruction decode) pipelines. Certain operations cannot be handled natively by the execution pipeline; and must be performed by microcode (small programs injected into the execution stream). Switching to the MS too often can negatively impact performance. The MS is designated to deliver long uop flows required by CISC instructions like CPUID; or uncommon conditions like Floating Point Assists when dealing with Denormals. Sample with: IDQ.MS_SWITCHES. Related metrics: tma_clears_resteers, tma_l1_bound, tma_machine_clears, tma_microcode_sequencer, tma_mixing_vectors, tma_serializing_operation"
},
{
	"MetricGroup": "tma_issueMS",
	"MetricName": "tma_microcode_sequencer",
	"MetricExpr": "UOPS_RETIRED.RETIRE_SLOTS / UOPS_ISSUED.ANY * IDQ.MS_UOPS / tma_info_thread_slots",
	"MetricThreshold": "tma_microcode_sequencer > 0.05 & tma_heavy_operations > 0.1",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU was retiring uops fetched by the Microcode Sequencer (MS) unit",
	"PublicDescription": "This metric represents fraction of slots the CPU was retiring uops fetched by the Microcode Sequencer (MS) unit.  The MS is used for CISC instructions not supported by the default decoders (like repeat move strings; or CPUID); or by microcode assists used to address some operation modes (like in Floating Point assists). These cases can often be avoided. Sample with: IDQ.MS_UOPS. Related metrics: tma_clears_resteers, tma_l1_bound, tma_machine_clears, tma_ms_switches"
},
{
	"MetricGroup": "tma_issueMS",
	"MetricName": "tma_ms_switches",
	"MetricExpr": "2 * IDQ.MS_SWITCHES / tma_info_thread_clks",
	"MetricThreshold": "tma_ms_switches > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates the fraction of cycles when the CPU was stalled due to switches of uop delivery to the Microcode Sequencer (MS)",
	"PublicDescription": "This metric estimates the fraction of cycles when the CPU was stalled due to switches of uop delivery to the Microcode Sequencer (MS). Commonly used instructions are optimized for delivery by the DSB (decoded i-cache) or MITE (legacy instruction decode) pipelines. Certain operations cannot be handled natively by the execution pipeline; and must be performed by microcode (small programs injected into the execution stream). Switching to the MS too often can negatively impact performance. The MS is designated to deliver long uop flows required by CISC instructions like CPUID; or uncommon conditions like Floating Point Assists when dealing with Denormals. Sample with: IDQ.MS_SWITCHES. Related metrics: tma_clears_resteers, tma_l1_bound, tma_machine_clears, tma_microcode_sequencer, tma_mixing_vectors, tma_serializing_operation"
},
{
	"MetricGroup": "tma_issueMV",
	"MetricName": "tma_mixing_vectors",
	"MetricExpr": "UOPS_ISSUED.VECTOR_WIDTH_MISMATCH / UOPS_ISSUED.ANY",
	"MetricThreshold": "tma_mixing_vectors > 0.05",
	"ScaleUnit": "100%",
	"BriefDescription": "The Mixing_Vectors metric gives the percentage of injected blend uops out of all uops issued",
	"PublicDescription": "The Mixing_Vectors metric gives the percentage of injected blend uops out of all uops issued. Usually a Mixing_Vectors over 5% is worth investigating. Read more in Appendix B1 of the Optimizations Guide for this topic. Related metrics: tma_ms_switches"
},
{
	"MetricGroup": "tma_issueMV",
	"MetricName": "tma_ms_switches",
	"MetricExpr": "2 * IDQ.MS_SWITCHES / tma_info_thread_clks",
	"MetricThreshold": "tma_ms_switches > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates the fraction of cycles when the CPU was stalled due to switches of uop delivery to the Microcode Sequencer (MS)",
	"PublicDescription": "This metric estimates the fraction of cycles when the CPU was stalled due to switches of uop delivery to the Microcode Sequencer (MS). Commonly used instructions are optimized for delivery by the DSB (decoded i-cache) or MITE (legacy instruction decode) pipelines. Certain operations cannot be handled natively by the execution pipeline; and must be performed by microcode (small programs injected into the execution stream). Switching to the MS too often can negatively impact performance. The MS is designated to deliver long uop flows required by CISC instructions like CPUID; or uncommon conditions like Floating Point Assists when dealing with Denormals. Sample with: IDQ.MS_SWITCHES. Related metrics: tma_clears_resteers, tma_l1_bound, tma_machine_clears, tma_microcode_sequencer, tma_mixing_vectors, tma_serializing_operation"
},
{
	"MetricGroup": "tma_issueRFO",
	"MetricName": "tma_lock_latency",
	"MetricExpr": "(12 * max(0, MEM_INST_RETIRED.LOCK_LOADS - L2_RQSTS.ALL_RFO) + MEM_INST_RETIRED.LOCK_LOADS / MEM_INST_RETIRED.ALL_STORES * (9 * L2_RQSTS.RFO_HIT + min(CPU_CLK_UNHALTED.THREAD, OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_RFO))) / tma_info_thread_clks",
	"MetricThreshold": "tma_lock_latency > 0.2 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU spent handling cache misses due to lock operations",
	"PublicDescription": "This metric represents fraction of cycles the CPU spent handling cache misses due to lock operations. Due to the microarchitecture handling of locks; they are classified as L1_Bound regardless of what memory source satisfied them. Sample with: MEM_INST_RETIRED.LOCK_LOADS_PS. Related metrics: tma_store_latency"
},
{
	"MetricGroup": "tma_issueRFO",
	"MetricName": "tma_store_latency",
	"MetricExpr": "(L2_RQSTS.RFO_HIT * 9 * (1 - MEM_INST_RETIRED.LOCK_LOADS / MEM_INST_RETIRED.ALL_STORES) + (1 - MEM_INST_RETIRED.LOCK_LOADS / MEM_INST_RETIRED.ALL_STORES) * min(CPU_CLK_UNHALTED.THREAD, OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_RFO)) / tma_info_thread_clks",
	"MetricThreshold": "tma_store_latency > 0.1 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles the CPU spent handling L1D store misses",
	"PublicDescription": "This metric estimates fraction of cycles the CPU spent handling L1D store misses. Store accesses usually less impact out-of-order core performance; however; holding resources for longer time can lead into undesired implications (e.g. contention on L1D fill-buffer entries - see FB_Full). Related metrics: tma_fb_full, tma_lock_latency"
},
{
	"MetricGroup": "tma_issueSL",
	"MetricName": "tma_fb_full",
	"MetricExpr": "tma_info_memory_load_miss_real_latency * cpu@L1D_PEND_MISS.FB_FULL\\,cmask\\=1@ / tma_info_thread_clks",
	"MetricThreshold": "tma_fb_full > 0.3",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric does a *rough estimation* of how often L1D Fill Buffer unavailability limited additional L1D miss memory access requests to proceed",
	"PublicDescription": "This metric does a *rough estimation* of how often L1D Fill Buffer unavailability limited additional L1D miss memory access requests to proceed. The higher the metric value; the deeper the memory hierarchy level the misses are satisfied from (metric values >1 are valid). Often it hints on approaching bandwidth limits (to L2 cache; L3 cache or external memory). Related metrics: tma_info_bottleneck_memory_bandwidth, tma_info_system_dram_bw_use, tma_mem_bandwidth, tma_sq_full, tma_store_latency, tma_streaming_stores"
},
{
	"MetricGroup": "tma_issueSL",
	"MetricName": "tma_store_latency",
	"MetricExpr": "(L2_RQSTS.RFO_HIT * 9 * (1 - MEM_INST_RETIRED.LOCK_LOADS / MEM_INST_RETIRED.ALL_STORES) + (1 - MEM_INST_RETIRED.LOCK_LOADS / MEM_INST_RETIRED.ALL_STORES) * min(CPU_CLK_UNHALTED.THREAD, OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_RFO)) / tma_info_thread_clks",
	"MetricThreshold": "tma_store_latency > 0.1 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles the CPU spent handling L1D store misses",
	"PublicDescription": "This metric estimates fraction of cycles the CPU spent handling L1D store misses. Store accesses usually less impact out-of-order core performance; however; holding resources for longer time can lead into undesired implications (e.g. contention on L1D fill-buffer entries - see FB_Full). Related metrics: tma_fb_full, tma_lock_latency"
},
{
	"MetricGroup": "tma_issueSO",
	"MetricName": "tma_ms_switches",
	"MetricExpr": "2 * IDQ.MS_SWITCHES / tma_info_thread_clks",
	"MetricThreshold": "tma_ms_switches > 0.05 & (tma_fetch_latency > 0.1 & tma_frontend_bound > 0.15)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates the fraction of cycles when the CPU was stalled due to switches of uop delivery to the Microcode Sequencer (MS)",
	"PublicDescription": "This metric estimates the fraction of cycles when the CPU was stalled due to switches of uop delivery to the Microcode Sequencer (MS). Commonly used instructions are optimized for delivery by the DSB (decoded i-cache) or MITE (legacy instruction decode) pipelines. Certain operations cannot be handled natively by the execution pipeline; and must be performed by microcode (small programs injected into the execution stream). Switching to the MS too often can negatively impact performance. The MS is designated to deliver long uop flows required by CISC instructions like CPUID; or uncommon conditions like Floating Point Assists when dealing with Denormals. Sample with: IDQ.MS_SWITCHES. Related metrics: tma_clears_resteers, tma_l1_bound, tma_machine_clears, tma_microcode_sequencer, tma_mixing_vectors, tma_serializing_operation"
},
{
	"MetricGroup": "tma_issueSO",
	"MetricName": "tma_serializing_operation",
	"MetricExpr": "PARTIAL_RAT_STALLS.SCOREBOARD / tma_info_thread_clks",
	"MetricThreshold": "tma_serializing_operation > 0.1 & (tma_ports_utilized_0 > 0.2 & (tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2)))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU issue-pipeline was stalled due to serializing operations",
	"PublicDescription": "This metric represents fraction of cycles the CPU issue-pipeline was stalled due to serializing operations. Instructions like CPUID; WRMSR or LFENCE serialize the out-of-order execution which may limit performance. Sample with: PARTIAL_RAT_STALLS.SCOREBOARD. Related metrics: tma_ms_switches"
},
{
	"MetricGroup": "tma_issueSmSt",
	"MetricName": "tma_fb_full",
	"MetricExpr": "tma_info_memory_load_miss_real_latency * cpu@L1D_PEND_MISS.FB_FULL\\,cmask\\=1@ / tma_info_thread_clks",
	"MetricThreshold": "tma_fb_full > 0.3",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric does a *rough estimation* of how often L1D Fill Buffer unavailability limited additional L1D miss memory access requests to proceed",
	"PublicDescription": "This metric does a *rough estimation* of how often L1D Fill Buffer unavailability limited additional L1D miss memory access requests to proceed. The higher the metric value; the deeper the memory hierarchy level the misses are satisfied from (metric values >1 are valid). Often it hints on approaching bandwidth limits (to L2 cache; L3 cache or external memory). Related metrics: tma_info_bottleneck_memory_bandwidth, tma_info_system_dram_bw_use, tma_mem_bandwidth, tma_sq_full, tma_store_latency, tma_streaming_stores"
},
{
	"MetricGroup": "tma_issueSpSt",
	"MetricName": "tma_port_4",
	"MetricExpr": "tma_store_op_utilization",
	"MetricThreshold": "tma_port_4 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 4 (Store-data)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 4 (Store-data). Sample with: UOPS_DISPATCHED_PORT.PORT_4. Related metrics: tma_split_stores"
},
{
	"MetricGroup": "tma_issueSpSt",
	"MetricName": "tma_split_stores",
	"MetricExpr": "MEM_INST_RETIRED.SPLIT_STORES / tma_info_core_core_clks",
	"MetricThreshold": "tma_split_stores > 0.2 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents rate of split store accesses",
	"PublicDescription": "This metric represents rate of split store accesses.  Consider aligning your data to the 64-byte cache line granularity. Sample with: MEM_INST_RETIRED.SPLIT_STORES_PS. Related metrics: tma_port_4"
},
{
	"MetricGroup": "tma_issueSyncxn",
	"MetricName": "tma_contested_accesses",
	"MetricExpr": "(18.5 * tma_info_system_average_frequency * MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM + 16.5 * tma_info_system_average_frequency * MEM_LOAD_L3_HIT_RETIRED.XSNP_MISS) * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS / 2) / tma_info_thread_clks",
	"MetricThreshold": "tma_contested_accesses > 0.05 & (tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to contested accesses",
	"PublicDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to contested accesses. Contested accesses occur when data written by one Logical Processor are read by another Logical Processor on a different Physical Core. Examples of contested accesses include synchronizations such as locks; true data sharing such as modified locked variables; and false sharing. Sample with: MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM_PS;MEM_LOAD_L3_HIT_RETIRED.XSNP_MISS_PS. Related metrics: tma_data_sharing, tma_false_sharing, tma_machine_clears, tma_remote_cache"
},
{
	"MetricGroup": "tma_issueSyncxn",
	"MetricName": "tma_data_sharing",
	"MetricExpr": "16.5 * tma_info_system_average_frequency * MEM_LOAD_L3_HIT_RETIRED.XSNP_HIT * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS / 2) / tma_info_thread_clks",
	"MetricThreshold": "tma_data_sharing > 0.05 & (tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to data-sharing accesses",
	"PublicDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to data-sharing accesses. Data shared by multiple Logical Processors (even just read shared) may cause increased access latency due to cache coherency. Excessive data sharing can drastically harm multithreaded performance. Sample with: MEM_LOAD_L3_HIT_RETIRED.XSNP_HIT_PS. Related metrics: tma_contested_accesses, tma_false_sharing, tma_machine_clears, tma_remote_cache"
},
{
	"MetricGroup": "tma_issueSyncxn",
	"MetricName": "tma_false_sharing",
	"MetricExpr": "22 * tma_info_system_average_frequency * OFFCORE_RESPONSE.DEMAND_RFO.L3_HIT.SNOOP_HITM / tma_info_thread_clks",
	"MetricThreshold": "tma_false_sharing > 0.05 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates how often CPU was handling synchronizations due to False Sharing",
	"PublicDescription": "This metric roughly estimates how often CPU was handling synchronizations due to False Sharing. False Sharing is a multithreading hiccup; where multiple Logical Processors contend on different data-elements mapped into the same cache line. Sample with: MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM_PS;OFFCORE_RESPONSE.DEMAND_RFO.L3_HIT.SNOOP_HITM. Related metrics: tma_contested_accesses, tma_data_sharing, tma_machine_clears, tma_remote_cache"
},
{
	"MetricGroup": "tma_issueSyncxn",
	"MetricName": "tma_machine_clears",
	"MetricExpr": "tma_bad_speculation - tma_branch_mispredicts",
	"MetricThreshold": "tma_machine_clears > 0.1 & tma_bad_speculation > 0.15",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots the CPU has wasted due to Machine Clears",
	"PublicDescription": "This metric represents fraction of slots the CPU has wasted due to Machine Clears.  These slots are either wasted by uops fetched prior to the clear; or stalls the out-of-order portion of the machine needs to recover its state after the clear. For example; this can happen due to memory ordering Nukes (e.g. Memory Disambiguation) or Self-Modifying-Code (SMC) nukes. Sample with: MACHINE_CLEARS.COUNT. Related metrics: tma_clears_resteers, tma_contested_accesses, tma_data_sharing, tma_false_sharing, tma_l1_bound, tma_microcode_sequencer, tma_ms_switches, tma_remote_cache"
},
{
	"MetricGroup": "tma_issueTLB",
	"MetricName": "tma_dtlb_load",
	"MetricExpr": "min(9 * cpu@DTLB_LOAD_MISSES.STLB_HIT\\,cmask\\=1@ + DTLB_LOAD_MISSES.WALK_ACTIVE, max(CYCLE_ACTIVITY.CYCLES_MEM_ANY - CYCLE_ACTIVITY.CYCLES_L1D_MISS, 0)) / tma_info_thread_clks",
	"MetricThreshold": "tma_dtlb_load > 0.1 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates the fraction of cycles where the Data TLB (DTLB) was missed by load accesses",
	"PublicDescription": "This metric roughly estimates the fraction of cycles where the Data TLB (DTLB) was missed by load accesses. TLBs (Translation Look-aside Buffers) are processor caches for recently used entries out of the Page Tables that are used to map virtual- to physical-addresses by the operating system. This metric approximates the potential delay of demand loads missing the first-level data TLB (assuming worst case scenario with back to back misses to different pages). This includes hitting in the second-level TLB (STLB) as well as performing a hardware page walk on an STLB miss. Sample with: MEM_INST_RETIRED.STLB_MISS_LOADS_PS. Related metrics: tma_dtlb_store, tma_info_bottleneck_memory_data_tlbs"
},
{
	"MetricGroup": "tma_issueTLB",
	"MetricName": "tma_dtlb_store",
	"MetricExpr": "(9 * cpu@DTLB_STORE_MISSES.STLB_HIT\\,cmask\\=1@ + DTLB_STORE_MISSES.WALK_ACTIVE) / tma_info_core_core_clks",
	"MetricThreshold": "tma_dtlb_store > 0.05 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates the fraction of cycles spent handling first-level data TLB store misses",
	"PublicDescription": "This metric roughly estimates the fraction of cycles spent handling first-level data TLB store misses.  As with ordinary data caching; focus on improving data locality and reducing working-set size to reduce DTLB overhead.  Additionally; consider using profile-guided optimization (PGO) to collocate frequently-used data on the same page.  Try using larger page sizes for large amounts of frequently-used data. Sample with: MEM_INST_RETIRED.STLB_MISS_STORES_PS. Related metrics: tma_dtlb_load, tma_info_bottleneck_memory_data_tlbs"
},
{
	"MetricGroup": "tma_issueTLB",
	"MetricName": "tma_info_bottleneck_memory_data_tlbs",
	"MetricExpr": "100 * tma_memory_bound * (tma_l1_bound / max(tma_memory_bound, tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_dtlb_load / max(tma_l1_bound, tma_4k_aliasing + tma_dtlb_load + tma_fb_full + tma_lock_latency + tma_split_loads + tma_store_fwd_blk)) + tma_store_bound / (tma_dram_bound + tma_l1_bound + tma_l2_bound + tma_l3_bound + tma_store_bound) * (tma_dtlb_store / (tma_dtlb_store + tma_false_sharing + tma_split_stores + tma_store_latency)))",
	"MetricThreshold": "tma_info_bottleneck_memory_data_tlbs > 20",
	"BriefDescription": "Total pipeline cost of Memory Address Translation related bottlenecks (data-side TLBs)",
	"PublicDescription": "Total pipeline cost of Memory Address Translation related bottlenecks (data-side TLBs). Related metrics: tma_dtlb_load, tma_dtlb_store"
},
{
	"MetricGroup": "tma_l1_bound_group",
	"MetricName": "tma_4k_aliasing",
	"MetricExpr": "LD_BLOCKS_PARTIAL.ADDRESS_ALIAS / tma_info_thread_clks",
	"MetricThreshold": "tma_4k_aliasing > 0.2 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often memory load accesses were aliased by preceding stores (in program order) with a 4K address offset",
	"PublicDescription": "This metric estimates how often memory load accesses were aliased by preceding stores (in program order) with a 4K address offset. False match is possible; which incur a few cycles load re-issue. However; the short re-issue duration is often hidden by the out-of-order core and HW optimizations; hence a user may safely ignore a high value of this metric unless it manages to propagate up into parent nodes of the hierarchy (e.g. to L1_Bound)"
},
{
	"MetricGroup": "tma_l1_bound_group",
	"MetricName": "tma_dtlb_load",
	"MetricExpr": "min(9 * cpu@DTLB_LOAD_MISSES.STLB_HIT\\,cmask\\=1@ + DTLB_LOAD_MISSES.WALK_ACTIVE, max(CYCLE_ACTIVITY.CYCLES_MEM_ANY - CYCLE_ACTIVITY.CYCLES_L1D_MISS, 0)) / tma_info_thread_clks",
	"MetricThreshold": "tma_dtlb_load > 0.1 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates the fraction of cycles where the Data TLB (DTLB) was missed by load accesses",
	"PublicDescription": "This metric roughly estimates the fraction of cycles where the Data TLB (DTLB) was missed by load accesses. TLBs (Translation Look-aside Buffers) are processor caches for recently used entries out of the Page Tables that are used to map virtual- to physical-addresses by the operating system. This metric approximates the potential delay of demand loads missing the first-level data TLB (assuming worst case scenario with back to back misses to different pages). This includes hitting in the second-level TLB (STLB) as well as performing a hardware page walk on an STLB miss. Sample with: MEM_INST_RETIRED.STLB_MISS_LOADS_PS. Related metrics: tma_dtlb_store, tma_info_bottleneck_memory_data_tlbs"
},
{
	"MetricGroup": "tma_l1_bound_group",
	"MetricName": "tma_fb_full",
	"MetricExpr": "tma_info_memory_load_miss_real_latency * cpu@L1D_PEND_MISS.FB_FULL\\,cmask\\=1@ / tma_info_thread_clks",
	"MetricThreshold": "tma_fb_full > 0.3",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric does a *rough estimation* of how often L1D Fill Buffer unavailability limited additional L1D miss memory access requests to proceed",
	"PublicDescription": "This metric does a *rough estimation* of how often L1D Fill Buffer unavailability limited additional L1D miss memory access requests to proceed. The higher the metric value; the deeper the memory hierarchy level the misses are satisfied from (metric values >1 are valid). Often it hints on approaching bandwidth limits (to L2 cache; L3 cache or external memory). Related metrics: tma_info_bottleneck_memory_bandwidth, tma_info_system_dram_bw_use, tma_mem_bandwidth, tma_sq_full, tma_store_latency, tma_streaming_stores"
},
{
	"MetricGroup": "tma_l1_bound_group",
	"MetricName": "tma_lock_latency",
	"MetricExpr": "(12 * max(0, MEM_INST_RETIRED.LOCK_LOADS - L2_RQSTS.ALL_RFO) + MEM_INST_RETIRED.LOCK_LOADS / MEM_INST_RETIRED.ALL_STORES * (9 * L2_RQSTS.RFO_HIT + min(CPU_CLK_UNHALTED.THREAD, OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_RFO))) / tma_info_thread_clks",
	"MetricThreshold": "tma_lock_latency > 0.2 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU spent handling cache misses due to lock operations",
	"PublicDescription": "This metric represents fraction of cycles the CPU spent handling cache misses due to lock operations. Due to the microarchitecture handling of locks; they are classified as L1_Bound regardless of what memory source satisfied them. Sample with: MEM_INST_RETIRED.LOCK_LOADS_PS. Related metrics: tma_store_latency"
},
{
	"MetricGroup": "tma_l1_bound_group",
	"MetricName": "tma_split_loads",
	"MetricExpr": "tma_info_memory_load_miss_real_latency * LD_BLOCKS.NO_SR / tma_info_thread_clks",
	"MetricThreshold": "tma_split_loads > 0.2 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles handling memory load split accesses - load that cross 64-byte cache line boundary",
	"PublicDescription": "This metric estimates fraction of cycles handling memory load split accesses - load that cross 64-byte cache line boundary. Sample with: MEM_INST_RETIRED.SPLIT_LOADS_PS"
},
{
	"MetricGroup": "tma_l1_bound_group",
	"MetricName": "tma_store_fwd_blk",
	"MetricExpr": "13 * LD_BLOCKS.STORE_FORWARD / tma_info_thread_clks",
	"MetricThreshold": "tma_store_fwd_blk > 0.1 & (tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates fraction of cycles when the memory subsystem had loads blocked since they could not forward data from earlier (in program order) overlapping stores",
	"PublicDescription": "This metric roughly estimates fraction of cycles when the memory subsystem had loads blocked since they could not forward data from earlier (in program order) overlapping stores. To streamline memory operations in the pipeline; a load can avoid waiting for memory if a prior in-flight store is writing the data that the load wants to read (store forwarding process). However; in some cases the load may be blocked for a significant time pending the store forward. For example; when the prior store is writing a smaller region than the load is reading"
},
{
	"MetricGroup": "tma_l3_bound_group",
	"MetricName": "tma_contested_accesses",
	"MetricExpr": "(18.5 * tma_info_system_average_frequency * MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM + 16.5 * tma_info_system_average_frequency * MEM_LOAD_L3_HIT_RETIRED.XSNP_MISS) * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS / 2) / tma_info_thread_clks",
	"MetricThreshold": "tma_contested_accesses > 0.05 & (tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to contested accesses",
	"PublicDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to contested accesses. Contested accesses occur when data written by one Logical Processor are read by another Logical Processor on a different Physical Core. Examples of contested accesses include synchronizations such as locks; true data sharing such as modified locked variables; and false sharing. Sample with: MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM_PS;MEM_LOAD_L3_HIT_RETIRED.XSNP_MISS_PS. Related metrics: tma_data_sharing, tma_false_sharing, tma_machine_clears, tma_remote_cache"
},
{
	"MetricGroup": "tma_l3_bound_group",
	"MetricName": "tma_data_sharing",
	"MetricExpr": "16.5 * tma_info_system_average_frequency * MEM_LOAD_L3_HIT_RETIRED.XSNP_HIT * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS / 2) / tma_info_thread_clks",
	"MetricThreshold": "tma_data_sharing > 0.05 & (tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to data-sharing accesses",
	"PublicDescription": "This metric estimates fraction of cycles while the memory subsystem was handling synchronizations due to data-sharing accesses. Data shared by multiple Logical Processors (even just read shared) may cause increased access latency due to cache coherency. Excessive data sharing can drastically harm multithreaded performance. Sample with: MEM_LOAD_L3_HIT_RETIRED.XSNP_HIT_PS. Related metrics: tma_contested_accesses, tma_false_sharing, tma_machine_clears, tma_remote_cache"
},
{
	"MetricGroup": "tma_l3_bound_group",
	"MetricName": "tma_l3_hit_latency",
	"MetricExpr": "6.5 * tma_info_system_average_frequency * MEM_LOAD_RETIRED.L3_HIT * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS / 2) / tma_info_thread_clks",
	"MetricThreshold": "tma_l3_hit_latency > 0.1 & (tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles with demand load accesses that hit the L3 cache under unloaded scenarios (possibly L3 latency limited)",
	"PublicDescription": "This metric represents fraction of cycles with demand load accesses that hit the L3 cache under unloaded scenarios (possibly L3 latency limited).  Avoiding private cache misses (i.e. L2 misses/L3 hits) will improve the latency; reduce contention with sibling physical cores and increase performance.  Note the value of this node may overlap with its siblings. Sample with: MEM_LOAD_RETIRED.L3_HIT_PS. Related metrics: tma_info_bottleneck_memory_latency, tma_mem_latency"
},
{
	"MetricGroup": "tma_l3_bound_group",
	"MetricName": "tma_sq_full",
	"MetricExpr": "(OFFCORE_REQUESTS_BUFFER.SQ_FULL / 2 if #SMT_on else OFFCORE_REQUESTS_BUFFER.SQ_FULL) / tma_info_core_core_clks",
	"MetricThreshold": "tma_sq_full > 0.3 & (tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric measures fraction of cycles where the Super Queue (SQ) was full taking into account all request-types and both hardware SMT threads (Logical Processors)",
	"PublicDescription": "This metric measures fraction of cycles where the Super Queue (SQ) was full taking into account all request-types and both hardware SMT threads (Logical Processors). Related metrics: tma_fb_full, tma_info_bottleneck_memory_bandwidth, tma_info_system_dram_bw_use, tma_mem_bandwidth"
},
{
	"MetricGroup": "tma_light_operations_group",
	"MetricName": "tma_fp_arith",
	"MetricExpr": "tma_x87_use + tma_fp_scalar + tma_fp_vector",
	"MetricThreshold": "tma_fp_arith > 0.2 & tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents overall arithmetic floating-point (FP) operations fraction the CPU has executed (retired)",
	"PublicDescription": "This metric represents overall arithmetic floating-point (FP) operations fraction the CPU has executed (retired). Note this metric's value may exceed its parent due to use of \"Uops\" CountDomain and FMA double-counting"
},
{
	"MetricGroup": "tma_light_operations_group",
	"MetricName": "tma_fused_instructions",
	"MetricExpr": "tma_light_operations * UOPS_RETIRED.MACRO_FUSED / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_fused_instructions > 0.1 & tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring fused instructions -- where one uop can represent multiple contiguous instructions",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring fused instructions -- where one uop can represent multiple contiguous instructions. The instruction pairs of CMP+JCC or DEC+JCC are commonly used examples"
},
{
	"MetricGroup": "tma_light_operations_group",
	"MetricName": "tma_memory_operations",
	"MetricExpr": "tma_light_operations * MEM_INST_RETIRED.ANY / INST_RETIRED.ANY",
	"MetricThreshold": "tma_memory_operations > 0.1 & tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring memory operations -- uops for memory load or store accesses"
},
{
	"MetricGroup": "tma_light_operations_group",
	"MetricName": "tma_non_fused_branches",
	"MetricExpr": "tma_light_operations * (BR_INST_RETIRED.ALL_BRANCHES - UOPS_RETIRED.MACRO_FUSED) / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_non_fused_branches > 0.1 & tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring branch instructions that were not fused",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring branch instructions that were not fused. Non-conditional branches like direct JMP or CALL would count here. Can be used to examine fusible conditional jumps that were not fused"
},
{
	"MetricGroup": "tma_light_operations_group",
	"MetricName": "tma_nop_instructions",
	"MetricExpr": "tma_light_operations * INST_RETIRED.NOP / UOPS_RETIRED.RETIRE_SLOTS",
	"MetricThreshold": "tma_nop_instructions > 0.1 & tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring NOP (no op) instructions",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring NOP (no op) instructions. Compilers often use NOPs for certain address alignments - e.g. start address of a function or loop body. Sample with: INST_RETIRED.NOP"
},
{
	"MetricGroup": "tma_light_operations_group",
	"MetricName": "tma_other_light_ops",
	"MetricExpr": "max(0, tma_light_operations - (tma_fp_arith + tma_memory_operations + tma_fused_instructions + tma_non_fused_branches + tma_nop_instructions))",
	"MetricThreshold": "tma_other_light_ops > 0.3 & tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents the remaining light uops fraction the CPU has executed - remaining means not covered by other sibling nodes",
	"PublicDescription": "This metric represents the remaining light uops fraction the CPU has executed - remaining means not covered by other sibling nodes. May undercount due to FMA double counting"
},
{
	"MetricGroup": "tma_load_op_utilization_group",
	"MetricName": "tma_port_2",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_2 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_2 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 2 ([SNB+]Loads and Store-address; [ICL+] Loads)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 2 ([SNB+]Loads and Store-address; [ICL+] Loads). Sample with: UOPS_DISPATCHED_PORT.PORT_2"
},
{
	"MetricGroup": "tma_load_op_utilization_group",
	"MetricName": "tma_port_3",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_3 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_3 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 3 ([SNB+]Loads and Store-address; [ICL+] Loads)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 3 ([SNB+]Loads and Store-address; [ICL+] Loads). Sample with: UOPS_DISPATCHED_PORT.PORT_3"
},
{
	"MetricGroup": "tma_memory_bound_group",
	"MetricName": "tma_dram_bound",
	"MetricExpr": "CYCLE_ACTIVITY.STALLS_L3_MISS / tma_info_thread_clks + (CYCLE_ACTIVITY.STALLS_L1D_MISS - CYCLE_ACTIVITY.STALLS_L2_MISS) / tma_info_thread_clks - tma_l2_bound",
	"MetricThreshold": "tma_dram_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled on accesses to external memory (DRAM) by loads",
	"PublicDescription": "This metric estimates how often the CPU was stalled on accesses to external memory (DRAM) by loads. Better caching can improve the latency and increase performance. Sample with: MEM_LOAD_RETIRED.L3_MISS_PS"
},
{
	"MetricGroup": "tma_memory_bound_group",
	"MetricName": "tma_l1_bound",
	"MetricExpr": "max((CYCLE_ACTIVITY.STALLS_MEM_ANY - CYCLE_ACTIVITY.STALLS_L1D_MISS) / tma_info_thread_clks, 0)",
	"MetricThreshold": "tma_l1_bound > 0.1 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled without loads missing the L1 data cache",
	"PublicDescription": "This metric estimates how often the CPU was stalled without loads missing the L1 data cache.  The L1 data cache typically has the shortest latency.  However; in certain cases like loads blocked on older stores; a load might suffer due to high latency even though it is being satisfied by the L1. Another example is loads who miss in the TLB. These cases are characterized by execution unit stalls; while some non-completed demand load lives in the machine without having that demand load missing the L1 cache. Sample with: MEM_LOAD_RETIRED.L1_HIT_PS;MEM_LOAD_RETIRED.FB_HIT_PS. Related metrics: tma_clears_resteers, tma_machine_clears, tma_microcode_sequencer, tma_ms_switches, tma_ports_utilized_1"
},
{
	"MetricGroup": "tma_memory_bound_group",
	"MetricName": "tma_l2_bound",
	"MetricExpr": "MEM_LOAD_RETIRED.L2_HIT * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS) / (MEM_LOAD_RETIRED.L2_HIT * (1 + MEM_LOAD_RETIRED.FB_HIT / MEM_LOAD_RETIRED.L1_MISS) + cpu@L1D_PEND_MISS.FB_FULL\\,cmask\\=1@) * ((CYCLE_ACTIVITY.STALLS_L1D_MISS - CYCLE_ACTIVITY.STALLS_L2_MISS) / tma_info_thread_clks)",
	"MetricThreshold": "tma_l2_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled due to L2 cache accesses by loads",
	"PublicDescription": "This metric estimates how often the CPU was stalled due to L2 cache accesses by loads.  Avoiding cache misses (i.e. L1 misses/L2 hits) can improve the latency and increase performance. Sample with: MEM_LOAD_RETIRED.L2_HIT_PS"
},
{
	"MetricGroup": "tma_memory_bound_group",
	"MetricName": "tma_l3_bound",
	"MetricExpr": "(CYCLE_ACTIVITY.STALLS_L2_MISS - CYCLE_ACTIVITY.STALLS_L3_MISS) / tma_info_thread_clks",
	"MetricThreshold": "tma_l3_bound > 0.05 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often the CPU was stalled due to loads accesses to L3 cache or contended with a sibling Core",
	"PublicDescription": "This metric estimates how often the CPU was stalled due to loads accesses to L3 cache or contended with a sibling Core.  Avoiding cache misses (i.e. L2 misses/L3 hits) can improve the latency and increase performance. Sample with: MEM_LOAD_RETIRED.L3_HIT_PS"
},
{
	"MetricGroup": "tma_memory_bound_group",
	"MetricName": "tma_store_bound",
	"MetricExpr": "EXE_ACTIVITY.BOUND_ON_STORES / tma_info_thread_clks",
	"MetricThreshold": "tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates how often CPU was stalled  due to RFO store memory accesses; RFO store issue a read-for-ownership request before the write",
	"PublicDescription": "This metric estimates how often CPU was stalled  due to RFO store memory accesses; RFO store issue a read-for-ownership request before the write. Even though store accesses do not typically stall out-of-order CPUs; there are few cases where stores can lead to actual stalls. This metric will be flagged should RFO stores be a bottleneck. Sample with: MEM_INST_RETIRED.ALL_STORES_PS"
},
{
	"MetricGroup": "tma_microcode_sequencer_group",
	"MetricName": "tma_assists",
	"MetricExpr": "100 * (FP_ASSIST.ANY + OTHER_ASSISTS.ANY) / tma_info_thread_slots",
	"MetricThreshold": "tma_assists > 0.1 & (tma_microcode_sequencer > 0.05 & tma_heavy_operations > 0.1)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of slots the CPU retired uops delivered by the Microcode_Sequencer as a result of Assists",
	"PublicDescription": "This metric estimates fraction of slots the CPU retired uops delivered by the Microcode_Sequencer as a result of Assists. Assists are long sequences of uops that are required in certain corner-cases for operations that cannot be handled natively by the execution pipeline. For example; when working with very small floating point values (so-called Denormals); the FP units are not set up to perform these operations natively. Instead; a sequence of instructions to perform the computation on the Denormals is injected into the pipeline. Since these microcode sequences might be dozens of uops long; Assists can be extremely deleterious to performance and they can be avoided in many cases. Sample with: OTHER_ASSISTS.ANY"
},
{
	"MetricGroup": "tma_microcode_sequencer_group",
	"MetricName": "tma_cisc",
	"MetricExpr": "max(0, tma_microcode_sequencer - tma_assists)",
	"MetricThreshold": "tma_cisc > 0.1 & (tma_microcode_sequencer > 0.05 & tma_heavy_operations > 0.1)",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles the CPU retired uops originated from CISC (complex instruction set computer) instruction",
	"PublicDescription": "This metric estimates fraction of cycles the CPU retired uops originated from CISC (complex instruction set computer) instruction. A CISC instruction has multiple uops that are required to perform the instruction's functionality as in the case of read-modify-write as an example. Since these instructions require multiple uops they may or may not imply sub-optimal use of machine resources"
},
{
	"MetricGroup": "tma_mite_group",
	"MetricName": "tma_decoder0_alone",
	"MetricExpr": "(cpu@INST_DECODED.DECODERS\\,cmask\\=1@ - cpu@INST_DECODED.DECODERS\\,cmask\\=2@) / tma_info_core_core_clks / 2",
	"MetricThreshold": "tma_decoder0_alone > 0.1 & (tma_mite > 0.1 & (tma_fetch_bandwidth > 0.1 & tma_frontend_bound > 0.15 & tma_info_thread_ipc / 4 > 0.35))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles where decoder-0 was the only active decoder",
	"PublicDescription": "This metric represents fraction of cycles where decoder-0 was the only active decoder. Related metrics: tma_few_uops_instructions"
},
{
	"MetricGroup": "tma_ports_utilization_group",
	"MetricName": "tma_ports_utilized_0",
	"MetricExpr": "(UOPS_EXECUTED.CORE_CYCLES_NONE / 2 if #SMT_on else CYCLE_ACTIVITY.STALLS_TOTAL - CYCLE_ACTIVITY.STALLS_MEM_ANY) / tma_info_core_core_clks",
	"MetricThreshold": "tma_ports_utilized_0 > 0.2 & (tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles CPU executed no uops on any execution port (Logical Processor cycles since ICL, Physical Core cycles otherwise)",
	"PublicDescription": "This metric represents fraction of cycles CPU executed no uops on any execution port (Logical Processor cycles since ICL, Physical Core cycles otherwise). Long-latency instructions like divides may contribute to this metric"
},
{
	"MetricGroup": "tma_ports_utilization_group",
	"MetricName": "tma_ports_utilized_1",
	"MetricExpr": "((UOPS_EXECUTED.CORE_CYCLES_GE_1 - UOPS_EXECUTED.CORE_CYCLES_GE_2) / 2 if #SMT_on else EXE_ACTIVITY.1_PORTS_UTIL) / tma_info_core_core_clks",
	"MetricThreshold": "tma_ports_utilized_1 > 0.2 & (tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles where the CPU executed total of 1 uop per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise)",
	"PublicDescription": "This metric represents fraction of cycles where the CPU executed total of 1 uop per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise). This can be due to heavy data-dependency among software instructions; or over oversubscribing a particular hardware resource. In some other cases with high 1_Port_Utilized and L1_Bound; this metric can point to L1 data-cache latency bottleneck that may not necessarily manifest with complete execution starvation (due to the short L1 latency e.g. walking a linked list) - looking at the assembly can be helpful. Related metrics: tma_l1_bound"
},
{
	"MetricGroup": "tma_ports_utilization_group",
	"MetricName": "tma_ports_utilized_2",
	"MetricExpr": "((UOPS_EXECUTED.CORE_CYCLES_GE_2 - UOPS_EXECUTED.CORE_CYCLES_GE_3) / 2 if #SMT_on else EXE_ACTIVITY.2_PORTS_UTIL) / tma_info_core_core_clks",
	"MetricThreshold": "tma_ports_utilized_2 > 0.15 & (tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles CPU executed total of 2 uops per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise)",
	"PublicDescription": "This metric represents fraction of cycles CPU executed total of 2 uops per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise).  Loop Vectorization -most compilers feature auto-Vectorization options today- reduces pressure on the execution ports as multiple elements are calculated with same uop. Related metrics: tma_fp_scalar, tma_fp_vector, tma_fp_vector_128b, tma_fp_vector_256b, tma_fp_vector_512b, tma_port_0, tma_port_1, tma_port_5, tma_port_6"
},
{
	"MetricGroup": "tma_ports_utilization_group",
	"MetricName": "tma_ports_utilized_3m",
	"MetricExpr": "(UOPS_EXECUTED.CORE_CYCLES_GE_3 / 2 if #SMT_on else UOPS_EXECUTED.CORE_CYCLES_GE_3) / tma_info_core_core_clks",
	"MetricThreshold": "tma_ports_utilized_3m > 0.7 & (tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles CPU executed total of 3 or more uops per cycle on all execution ports (Logical Processor cycles since ICL, Physical Core cycles otherwise)"
},
{
	"MetricGroup": "tma_ports_utilized_0_group",
	"MetricName": "tma_mixing_vectors",
	"MetricExpr": "UOPS_ISSUED.VECTOR_WIDTH_MISMATCH / UOPS_ISSUED.ANY",
	"MetricThreshold": "tma_mixing_vectors > 0.05",
	"ScaleUnit": "100%",
	"BriefDescription": "The Mixing_Vectors metric gives the percentage of injected blend uops out of all uops issued",
	"PublicDescription": "The Mixing_Vectors metric gives the percentage of injected blend uops out of all uops issued. Usually a Mixing_Vectors over 5% is worth investigating. Read more in Appendix B1 of the Optimizations Guide for this topic. Related metrics: tma_ms_switches"
},
{
	"MetricGroup": "tma_ports_utilized_0_group",
	"MetricName": "tma_serializing_operation",
	"MetricExpr": "PARTIAL_RAT_STALLS.SCOREBOARD / tma_info_thread_clks",
	"MetricThreshold": "tma_serializing_operation > 0.1 & (tma_ports_utilized_0 > 0.2 & (tma_ports_utilization > 0.15 & (tma_core_bound > 0.1 & tma_backend_bound > 0.2)))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of cycles the CPU issue-pipeline was stalled due to serializing operations",
	"PublicDescription": "This metric represents fraction of cycles the CPU issue-pipeline was stalled due to serializing operations. Instructions like CPUID; WRMSR or LFENCE serialize the out-of-order execution which may limit performance. Sample with: PARTIAL_RAT_STALLS.SCOREBOARD. Related metrics: tma_ms_switches"
},
{
	"MetricGroup": "tma_ports_utilized_3m_group",
	"MetricName": "tma_alu_op_utilization",
	"MetricExpr": "(UOPS_DISPATCHED_PORT.PORT_0 + UOPS_DISPATCHED_PORT.PORT_1 + UOPS_DISPATCHED_PORT.PORT_5 + UOPS_DISPATCHED_PORT.PORT_6) / tma_info_thread_slots",
	"MetricThreshold": "tma_alu_op_utilization > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution ports for ALU operations"
},
{
	"MetricGroup": "tma_ports_utilized_3m_group",
	"MetricName": "tma_load_op_utilization",
	"MetricExpr": "(UOPS_DISPATCHED_PORT.PORT_2 + UOPS_DISPATCHED_PORT.PORT_3 + UOPS_DISPATCHED_PORT.PORT_7 - UOPS_DISPATCHED_PORT.PORT_4) / (2 * tma_info_core_core_clks)",
	"MetricThreshold": "tma_load_op_utilization > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port for Load operations",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port for Load operations. Sample with: UOPS_DISPATCHED.PORT_2_3"
},
{
	"MetricGroup": "tma_ports_utilized_3m_group",
	"MetricName": "tma_store_op_utilization",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_4 / tma_info_core_core_clks",
	"MetricThreshold": "tma_store_op_utilization > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port for Store operations"
},
{
	"MetricGroup": "tma_retiring_group",
	"MetricName": "tma_heavy_operations",
	"MetricExpr": "(UOPS_RETIRED.RETIRE_SLOTS + UOPS_RETIRED.MACRO_FUSED - INST_RETIRED.ANY) / tma_info_thread_slots",
	"MetricThreshold": "tma_heavy_operations > 0.1",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring heavy-weight operations -- instructions that require two or more uops or micro-coded sequences",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring heavy-weight operations -- instructions that require two or more uops or micro-coded sequences. This highly-correlates with the uop length of these instructions/sequences"
},
{
	"MetricGroup": "tma_retiring_group",
	"MetricName": "tma_light_operations",
	"MetricExpr": "tma_retiring - tma_heavy_operations",
	"MetricThreshold": "tma_light_operations > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents fraction of slots where the CPU was retiring light-weight operations -- instructions that require no more than one uop (micro-operation)",
	"PublicDescription": "This metric represents fraction of slots where the CPU was retiring light-weight operations -- instructions that require no more than one uop (micro-operation). This correlates with total number of instructions used by the program. A uops-per-instruction (see UopPI metric) ratio of 1 or less should be expected for decently optimized software running on Intel Core/Xeon products. While this often indicates efficient X86 instructions were executed; high value does not necessarily mean better performance cannot be achieved. Sample with: INST_RETIRED.PREC_DIST"
},
{
	"MetricGroup": "tma_store_bound_group",
	"MetricName": "tma_dtlb_store",
	"MetricExpr": "(9 * cpu@DTLB_STORE_MISSES.STLB_HIT\\,cmask\\=1@ + DTLB_STORE_MISSES.WALK_ACTIVE) / tma_info_core_core_clks",
	"MetricThreshold": "tma_dtlb_store > 0.05 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates the fraction of cycles spent handling first-level data TLB store misses",
	"PublicDescription": "This metric roughly estimates the fraction of cycles spent handling first-level data TLB store misses.  As with ordinary data caching; focus on improving data locality and reducing working-set size to reduce DTLB overhead.  Additionally; consider using profile-guided optimization (PGO) to collocate frequently-used data on the same page.  Try using larger page sizes for large amounts of frequently-used data. Sample with: MEM_INST_RETIRED.STLB_MISS_STORES_PS. Related metrics: tma_dtlb_load, tma_info_bottleneck_memory_data_tlbs"
},
{
	"MetricGroup": "tma_store_bound_group",
	"MetricName": "tma_false_sharing",
	"MetricExpr": "22 * tma_info_system_average_frequency * OFFCORE_RESPONSE.DEMAND_RFO.L3_HIT.SNOOP_HITM / tma_info_thread_clks",
	"MetricThreshold": "tma_false_sharing > 0.05 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric roughly estimates how often CPU was handling synchronizations due to False Sharing",
	"PublicDescription": "This metric roughly estimates how often CPU was handling synchronizations due to False Sharing. False Sharing is a multithreading hiccup; where multiple Logical Processors contend on different data-elements mapped into the same cache line. Sample with: MEM_LOAD_L3_HIT_RETIRED.XSNP_HITM_PS;OFFCORE_RESPONSE.DEMAND_RFO.L3_HIT.SNOOP_HITM. Related metrics: tma_contested_accesses, tma_data_sharing, tma_machine_clears, tma_remote_cache"
},
{
	"MetricGroup": "tma_store_bound_group",
	"MetricName": "tma_split_stores",
	"MetricExpr": "MEM_INST_RETIRED.SPLIT_STORES / tma_info_core_core_clks",
	"MetricThreshold": "tma_split_stores > 0.2 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents rate of split store accesses",
	"PublicDescription": "This metric represents rate of split store accesses.  Consider aligning your data to the 64-byte cache line granularity. Sample with: MEM_INST_RETIRED.SPLIT_STORES_PS. Related metrics: tma_port_4"
},
{
	"MetricGroup": "tma_store_bound_group",
	"MetricName": "tma_store_latency",
	"MetricExpr": "(L2_RQSTS.RFO_HIT * 9 * (1 - MEM_INST_RETIRED.LOCK_LOADS / MEM_INST_RETIRED.ALL_STORES) + (1 - MEM_INST_RETIRED.LOCK_LOADS / MEM_INST_RETIRED.ALL_STORES) * min(CPU_CLK_UNHALTED.THREAD, OFFCORE_REQUESTS_OUTSTANDING.CYCLES_WITH_DEMAND_RFO)) / tma_info_thread_clks",
	"MetricThreshold": "tma_store_latency > 0.1 & (tma_store_bound > 0.2 & (tma_memory_bound > 0.2 & tma_backend_bound > 0.2))",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric estimates fraction of cycles the CPU spent handling L1D store misses",
	"PublicDescription": "This metric estimates fraction of cycles the CPU spent handling L1D store misses. Store accesses usually less impact out-of-order core performance; however; holding resources for longer time can lead into undesired implications (e.g. contention on L1D fill-buffer entries - see FB_Full). Related metrics: tma_fb_full, tma_lock_latency"
},
{
	"MetricGroup": "tma_store_op_utilization_group",
	"MetricName": "tma_port_4",
	"MetricExpr": "tma_store_op_utilization",
	"MetricThreshold": "tma_port_4 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 4 (Store-data)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 4 (Store-data). Sample with: UOPS_DISPATCHED_PORT.PORT_4. Related metrics: tma_split_stores"
},
{
	"MetricGroup": "tma_store_op_utilization_group",
	"MetricName": "tma_port_7",
	"MetricExpr": "UOPS_DISPATCHED_PORT.PORT_7 / tma_info_core_core_clks",
	"MetricThreshold": "tma_port_7 > 0.6",
	"ScaleUnit": "100%",
	"BriefDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 7 ([HSW+]simple Store-address)",
	"PublicDescription": "This metric represents Core fraction of cycles CPU dispatched uops on execution port 7 ([HSW+]simple Store-address). Sample with: UOPS_DISPATCHED_PORT.PORT_7"
},
{
	"MetricGroup": "transaction",
	"MetricName": "tsx_aborted_cycles",
	"MetricExpr": "(max(cycles\\-t - cycles\\-ct, 0) / cycles if has_event(cycles\\-t) else 0)",
	"ScaleUnit": "100%",
	"BriefDescription": "Percentage of cycles in aborted transactions"
},
{
	"MetricGroup": "transaction",
	"MetricName": "tsx_cycles_per_elision",
	"MetricExpr": "(cycles\\-t / el\\-start if has_event(cycles\\-t) else 0)",
	"ScaleUnit": "1cycles / elision",
	"BriefDescription": "Number of cycles within a transaction divided by the number of elisions"
},
{
	"MetricGroup": "transaction",
	"MetricName": "tsx_cycles_per_transaction",
	"MetricExpr": "(cycles\\-t / tx\\-start if has_event(cycles\\-t) else 0)",
	"ScaleUnit": "1cycles / transaction",
	"BriefDescription": "Number of cycles within a transaction divided by the number of transactions"
},
{
	"MetricGroup": "transaction",
	"MetricName": "tsx_transactional_cycles",
	"MetricExpr": "(cycles\\-t / cycles if has_event(cycles\\-t) else 0)",
	"ScaleUnit": "100%",
	"BriefDescription": "Percentage of cycles within a transaction region"
}
]
